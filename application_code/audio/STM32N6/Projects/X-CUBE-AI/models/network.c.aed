/* AUTOGENERATED DO NOT MODIFY */

/**
  ******************************************************************************
  * @file    network.c
  * @brief   NN Code autogenerated DO NOT MODIFY IT
  ******************************************************************************
  * @attention
  *
  * Copyright (c) 2023 STMicroelectronics.
  * All rights reserved.
  *
  * This software is licensed under terms that can be found in the LICENSE file
  * in the root directory of this software component.
  * If no LICENSE file comes with this software, it is provided AS-IS.
  *
  ******************************************************************************
  */

/*
 * GIT_SHA         "0307e413493a9893cb1f0a1266b856e2af3bba2b"
 * GIT_BRANCH      "STAI-2.0"
 * GIT_DESCRIPTION "STAI-2.0-RC1-1-1-g0307e413"
 *
 * Command Line options:
 * --onnx-input = "C:/ST/CurrentDev/GS_AED_N6/Projects/X-CUBE-AI/models/st_ai_output/yamnet_1024_64x96_tl_qdq_int8_OE_3_1_0.onnx"
 * --out-dir-prefix = "C:/ST/CurrentDev/GS_AED_N6/Projects/X-CUBE-AI/models/st_ai_ws/neural_art__network/"
 * --all-buffers-info = true
 * --mvei = true
 * --load-mdesc-file = "C:/ST/stedgeai-windows-10.0.0-RC1-16-signed/Utilities/configs/stm32n6"
 * --load-mpool-file = "C:/ST/CurrentDev/GS_AED_N6/Projects/X-CUBE-AI/models/stm32n6"
 * --cache-maintenance = true
 * --native-float = true
 * --json-quant-file = "C:/ST/CurrentDev/GS_AED_N6/Projects/X-CUBE-AI/models/st_ai_output/yamnet_1024_64x96_tl_qdq_int8_OE_3_1_0_Q.json"
 * --optimization = 3
 * --Os = true
 * --Omax-ca-pipe = 4
 * --Ocache-opt = true
 * --csv-file = "network"
 * --output-info-file = "c_info"
 */

#include "ll_aton_NN_interface.h"
#include "ll_aton.h"
#include "ll_aton_lib.h"
#include "ll_aton_version.h"
#include "ll_sw.h"

#if LL_ATON_VERSION_MAJOR != 1 || LL_ATON_VERSION_MINOR != 0 || LL_ATON_VERSION_MICRO != 0 || LL_ATON_VERSION_DEV != 16
#  warning "Possible mismatch in ll_aton library used"
#endif

#if !defined(LL_ATON_DBG_BUFFER_INFO_EXCLUDED)
#  define LL_ATON_DBG_BUFFER_INFO_EXCLUDED 0
#endif

/* global pool 4 is ? */
/* index=4 file postfix=xSPI1 name=hyperRAM offset=0x90000000  absolute_mode size=16777208 READ_WRITE THROUGHPUT=MID LATENCY=HIGH byte width=2 freq ratio=5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=ON read_power=380 write_power=340 use4initializers=YES score=82  */
/* global pool 5 is 3.42 MB */
/* index=5 file postfix=xSPI2 name=octoFlash offset=0x70180000  absolute_mode size=66060280 READ_ONLY THROUGHPUT=MID LATENCY=HIGH byte width=1 freq ratio=6 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=ON read_power=110 write_power=400 use4initializers=YES score=50  */
/* global pool 0 is 144.00 KB */
/* index=0 file postfix=AXISRAM6 name=npuRAM6 offset=0x34350000  absolute_mode size=458744 READ_WRITE THROUGHPUT=HIGH LATENCY=LOW byte width=8 freq ratio=1.25 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=19.006 write_power=15.79 use4initializers=NO score=94  */
/* global pool 1 is ? */
/* index=1 file postfix=AXISRAM2 name=cpuRAM2 offset=0x34100000  absolute_mode size=1048568 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=17.324 write_power=15.321 use4initializers=NO score=84  */
/* global pool 2 is ? */
/* index=2 file postfix=AXIFLEXMEM name=flexMEM offset=0x34000000  absolute_mode size=0 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=9.381 write_power=8.569 use4initializers=NO score=84  */
/* global pool 3 is ? */
/* index=3 file postfix=AXISRAM1 name=cpuRAM1 offset=0x34000000  absolute_mode size=0 READ_WRITE THROUGHPUT=MID LATENCY=MID byte width=8 freq ratio=2.5 burst max length=MAXINT burst penalty=0 pipelined=ON cacheable=OFF read_power=16.616 write_power=14.522 use4initializers=NO score=84  */

LL_ATON_User_IO_Result_t LL_ATON_Set_User_Input_Buffer_Default(uint32_t num, void* buffer, uint32_t size)
{
  { 
    return LL_ATON_User_IO_WRONG_INDEX;
  }
}

void *LL_ATON_Get_User_Input_Buffer_Default(uint32_t num)
{
  { 
    return NULL;
  }
}

LL_ATON_User_IO_Result_t LL_ATON_Set_User_Output_Buffer_Default(uint32_t num, void* buffer, uint32_t size)
{
  { 
    return LL_ATON_User_IO_WRONG_INDEX;
  }
}

void *LL_ATON_Get_User_Output_Buffer_Default(uint32_t num)
{
  { 
    return NULL;
  }
}

bool LL_ATON_EC_Network_Init_Default(void)
{
  return true;
}

bool LL_ATON_EC_Inference_Init_Default(void)
{
  return true;
}

/* scheduling epoch=0    nodes=115 ------------------------------------------------------------------- */

/* scheduling epoch=1    nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_1(const void *epoch_block)
{
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache invalidate (only) operation (SW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 49152) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 55296) */
  mcu_cache_invalidate_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 49152) /* Equivalent hex address = 0x3435c000UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 55296) /* Equivalent hex address = 0x3435d800UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

  LL_ATON_LIB_UNUSED(epoch_block);

  /* Reset the stream switch */
  LL_Switch_Init(NULL, 0);

/* Unit= 27 [PROCESSOR 0] */
/* kind=Transpose node=Transpose_2 */
  static const uint32_t Transpose_2_tensor_shape_in_1_shape_0[] = { 1, 64, 96, 1 };
  static const LL_LIB_TensorShape_TypeDef Transpose_2_tensor_shape_in_1[] = {
    {
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 6144,
      .offset_limit = 6208,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_2_tensor_shape_in_1_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_2_tensor_axes_offsets_in_1_0[] = { 6144, 96, 1, 1 };
  static const uint32_t* Transpose_2_tensor_axes_offsets_in_1[] = {
    Transpose_2_tensor_axes_offsets_in_1_0
  };

  static const uint32_t Transpose_2_tensor_shape_out_1_shape_0[] = { 1, 96, 64, 1 };
  static const LL_LIB_TensorShape_TypeDef Transpose_2_tensor_shape_out_1[] = {
    {
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 49152,
      .offset_end = 55296,
      .offset_limit = 55360,
      .ndims = 4,
      .nbits = 8,
      .shape = Transpose_2_tensor_shape_out_1_shape_0,
      .batch = 1,
    }
  };

  static const uint32_t Transpose_2_tensor_axes_offsets_out_1_0[] = { 6144, 64, 1, 1 };
  static const uint32_t* Transpose_2_tensor_axes_offsets_out_1[] = {
    Transpose_2_tensor_axes_offsets_out_1_0
  };

  static const uint8_t Transpose_2_perm_to_use_array_in_1[] = { 0, 2, 1, 3 };
  static const uint8_t Transpose_2_target_pos_array_in_1[] = { 0, 2, 1, 3 };
  LL_ATON_LIB_DMA_Transpose(&Transpose_2_tensor_shape_in_1[0], Transpose_2_tensor_axes_offsets_in_1[0], &Transpose_2_tensor_shape_out_1[0], Transpose_2_tensor_axes_offsets_out_1[0], Transpose_2_target_pos_array_in_1, Transpose_2_perm_to_use_array_in_1, 0, 1);

  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 49152) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 55296) */
  mcu_cache_clean_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 49152) /* Equivalent hex address = 0x3435c000UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 55296) /* Equivalent hex address = 0x3435d800UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

}


/* scheduling epoch=2    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_2(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_3 */
  static const LL_Convacc_InitTypeDef Conv2D_3_init2 = {
    .simd = 2,
    .fsub = 33,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 0,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 2,
    .shift_f = 0,
    .shift_a = 2,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 2,
    .raw_o = 0,
    .fWidth = 64,
    .fHeight = 96,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 4,
    .batchDepth = 1,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 63,
    .top_crop = 0,
    .bot_crop = 95,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_3_init2);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Conv2D_3_mul_scale_9 */
  static const LL_Arithacc_InitTypeDef Conv2D_3_mul_scale_9_init2 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 4,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580496) /* Equivalent hex address = 0x704ea250UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_3_mul_scale_9_init2);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=Conv2D_3_off_bias_12 */
  static const LL_Arithacc_InitTypeDef Conv2D_3_off_bias_12_init2 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 4,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18122,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3579984) /* Equivalent hex address = 0x704ea050UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_3_off_bias_12_init2);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Sub node=Conv2D_7_suboff_15 */
  static const LL_Arithacc_InitTypeDef Conv2D_7_suboff_15_init2 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 4,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_7_suboff_15_init2);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_3 input ports=0 range=0[49152,55296] */

  static const LL_Streng_TensorInitTypeDef Conv2D_3_dma_init_in_0_2 = {
    /* 64x96x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_3_zero_off_out_7 */
    .offset_start = 49152,
    .offset_end = 55296,
    .offset_limit = 55360,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 6144,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_3_dma_init_in_0_2, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_3 input ports=1 range=5[3578160,3578448] */

  static const LL_Streng_TensorInitTypeDef Conv2D_3_dma_init_in_1_2 = {
    /* 32x3x3x1(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 1,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_3_weights */
    .offset_start = 3578160,
    .offset_end = 3578448,
    .offset_limit = 3578512,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_3_dma_init_in_1_2, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 49152 */
  /* octoFlash -> 288 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_7_suboff_15 output ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_7_suboff_15_dma_init_out_0_2 = {
    /* to memory canonical from batch=4 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_7_zero_off_out_16 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 4,
    .batch_offset = 32,
    .frame_offset = 4,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_7_suboff_15_dma_init_out_0_2, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_2[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3_mul_scale_9 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3_off_bias_12 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_suboff_15 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_suboff_15 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=2 */
  LL_Switch_Init(switch_init_in_2, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_2_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_2_all_units, 7);

}

static void LL_ATON_End_EpochBlock_2(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_2[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3_mul_scale_9 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_3_off_bias_12 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_suboff_15 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_suboff_15 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=2 */
  LL_Switch_Deinit(switch_deinit_in_2, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_2_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_2_all_units, 7);

}


/* scheduling epoch=3    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_3(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_7 */
  static const LL_Convacc_InitTypeDef Conv2D_7_init3 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 2,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 2,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 48,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 47,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_7_init3);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_7_mul_scale_18 */
  static const LL_Arithacc_InitTypeDef Conv2D_7_mul_scale_18_init3 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 14,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580560) /* Equivalent hex address = 0x704ea290UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_7_mul_scale_18_init3);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_7_off_bias_21 */
  static const LL_Arithacc_InitTypeDef Conv2D_7_off_bias_21_init3 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 31452,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580112) /* Equivalent hex address = 0x704ea0d0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_7_off_bias_21_init3);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_10_suboff_24 */
  static const LL_Arithacc_InitTypeDef Conv2D_10_suboff_24_init3 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 32,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_10_suboff_24_init3);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_7 input ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_7_dma_init_in_0_3 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_7_zero_off_out_16 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 8,
    .batch_offset = 32,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_7_dma_init_in_0_3, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_7 input ports=1 range=5[3528736,3531040] */

  static const LL_Streng_TensorInitTypeDef Conv2D_7_dma_init_in_1_3 = {
    /* 32x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_7_weights_inflated_260 */
    .offset_start = 3528736,
    .offset_end = 3531040,
    .offset_limit = 3531104,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_7_dma_init_in_1_3, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 49152 */
  /* octoFlash -> 2304 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_10_suboff_24 output ports=0 range=0[98304,147456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_10_suboff_24_dma_init_out_0_3 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_10_zero_off_out_25 */
    .offset_start = 98304,
    .offset_limit = 147520,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 8,
    .batch_offset = 32,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_10_suboff_24_dma_init_out_0_3, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_3[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_mul_scale_18 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_off_bias_21 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_suboff_24 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_suboff_24 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=3 */
  LL_Switch_Init(switch_init_in_3, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_3_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_3_all_units, 7);

}

static void LL_ATON_End_EpochBlock_3(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_3[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_mul_scale_18 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_7_off_bias_21 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_suboff_24 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_suboff_24 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=3 */
  LL_Switch_Deinit(switch_deinit_in_3, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_3_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_3_all_units, 7);

}


/* scheduling epoch=4    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_4(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_10 */
  static const LL_Convacc_InitTypeDef Conv2D_10_init4 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 48,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 32,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 47,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_10_init4);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_10_mul_scale_27 */
  static const LL_Arithacc_InitTypeDef Conv2D_10_mul_scale_27_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580240) /* Equivalent hex address = 0x704ea150UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_10_mul_scale_27_init4);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_10_off_bias_30 */
  static const LL_Arithacc_InitTypeDef Conv2D_10_off_bias_30_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17078,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3578448) /* Equivalent hex address = 0x704e9a50UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_10_off_bias_30_init4);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_14_suboff_33 */
  static const LL_Arithacc_InitTypeDef Conv2D_14_suboff_33_init4 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 32,
    .fHeight = 48,
    .fChannels = 64,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_14_suboff_33_init4);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_10 input ports=0 range=0[98304,147456] */

  static const LL_Streng_TensorInitTypeDef Conv2D_10_dma_init_in_0_4 = {
    /* 32x48x32(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_10_zero_off_out_25 */
    .offset_start = 98304,
    .offset_end = 147456,
    .offset_limit = 147520,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_10_dma_init_in_0_4, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_10 input ports=1 range=5[3531040,3533092] */

  static const LL_Streng_TensorInitTypeDef Conv2D_10_dma_init_in_1_4 = {
    /* 64x1x1x32(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_10_weights */
    .offset_start = 3531040,
    .offset_end = 3533092,
    .offset_limit = 3533160,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_10_dma_init_in_1_4, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 196608 */
  /* octoFlash -> 2048 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_14_suboff_33 output ports=0 range=0[0,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_14_suboff_33_dma_init_out_0_4 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_14_zero_off_out_34 */
    .offset_start = 0,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 16,
    .batch_offset = 64,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 98304,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 4,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_14_suboff_33_dma_init_out_0_4, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 98304 */

  static const LL_Switch_InitTypeDef switch_init_in_4[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_mul_scale_27 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_off_bias_30 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_suboff_33 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_suboff_33 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=4 */
  LL_Switch_Init(switch_init_in_4, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_4_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_4_all_units, 7);

}

static void LL_ATON_End_EpochBlock_4(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_4[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_mul_scale_27 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_10_off_bias_30 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_suboff_33 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_suboff_33 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=4 */
  LL_Switch_Deinit(switch_deinit_in_4, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_4_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_4_all_units, 7);

}


/* scheduling epoch=5    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_5(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_14 */
  static const LL_Convacc_InitTypeDef Conv2D_14_init5 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 32,
    .fHeight = 48,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 31,
    .top_crop = 0,
    .bot_crop = 47,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_14_init5);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_14_mul_scale_36 */
  static const LL_Arithacc_InitTypeDef Conv2D_14_mul_scale_36_init5 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 64,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580368) /* Equivalent hex address = 0x704ea1d0UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_14_mul_scale_36_init5);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_14_off_bias_39 */
  static const LL_Arithacc_InitTypeDef Conv2D_14_off_bias_39_init5 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 64,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16386,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3578704) /* Equivalent hex address = 0x704e9b50UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_14_off_bias_39_init5);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_17_suboff_42 */
  static const LL_Arithacc_InitTypeDef Conv2D_17_suboff_42_init5 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 64,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_17_suboff_42_init5);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_14 input ports=0 range=0[0,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_14_dma_init_in_0_5 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_14_zero_off_out_34 */
    .offset_start = 0,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 32,
    .fheight = 48,
    .batch_depth = 8,
    .batch_offset = 64,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_14_dma_init_in_0_5, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_14 input ports=1 range=5[3499552,3504160] */

  static const LL_Streng_TensorInitTypeDef Conv2D_14_dma_init_in_1_5 = {
    /* 64x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_14_weights_inflated_262 */
    .offset_start = 3499552,
    .offset_end = 3504160,
    .offset_limit = 3504224,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_14_dma_init_in_1_5, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 98304 */
  /* octoFlash -> 4608 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_17_suboff_42 output ports=0 range=0[98304,122880] */

  static const LL_Streng_TensorInitTypeDef Conv2D_17_suboff_42_dma_init_out_0_5 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_17_zero_off_out_43 */
    .offset_start = 98304,
    .offset_limit = 122944,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 8,
    .batch_offset = 64,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_17_suboff_42_dma_init_out_0_5, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_5[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_mul_scale_36 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_off_bias_39 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_suboff_42 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_suboff_42 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=5 */
  LL_Switch_Init(switch_init_in_5, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_5_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_5_all_units, 7);

}

static void LL_ATON_End_EpochBlock_5(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_5[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_mul_scale_36 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_14_off_bias_39 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_suboff_42 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_suboff_42 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=5 */
  LL_Switch_Deinit(switch_deinit_in_5, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_5_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_5_all_units, 7);

}


/* scheduling epoch=6    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_6(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_17 */
  static const LL_Convacc_InitTypeDef Conv2D_17_init6 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 24,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 64,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_17_init6);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_17_mul_scale_45 */
  static const LL_Arithacc_InitTypeDef Conv2D_17_mul_scale_45_init6 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3578960) /* Equivalent hex address = 0x704e9c50UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_17_mul_scale_45_init6);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_17_off_bias_48 */
  static const LL_Arithacc_InitTypeDef Conv2D_17_off_bias_48_init6 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 19318,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3574064) /* Equivalent hex address = 0x704e8930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_17_off_bias_48_init6);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_21_suboff_51 */
  static const LL_Arithacc_InitTypeDef Conv2D_21_suboff_51_init6 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_21_suboff_51_init6);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_17 input ports=0 range=0[98304,122880] */

  static const LL_Streng_TensorInitTypeDef Conv2D_17_dma_init_in_0_6 = {
    /* 16x24x64(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_17_zero_off_out_43 */
    .offset_start = 98304,
    .offset_end = 122880,
    .offset_limit = 122944,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_17_dma_init_in_0_6, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_17 input ports=1 range=5[3491344,3499552] */

  static const LL_Streng_TensorInitTypeDef Conv2D_17_dma_init_in_1_6 = {
    /* 128x1x1x64(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_17_weights */
    .offset_start = 3491344,
    .offset_end = 3499552,
    .offset_limit = 3499616,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_17_dma_init_in_1_6, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 196608 */
  /* octoFlash -> 8192 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_21_suboff_51 output ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_21_suboff_51_dma_init_out_0_6 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_21_zero_off_out_52 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 16,
    .batch_offset = 128,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_21_suboff_51_dma_init_out_0_6, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_6[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_mul_scale_45 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_off_bias_48 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_suboff_51 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_suboff_51 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=6 */
  LL_Switch_Init(switch_init_in_6, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_6_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_6_all_units, 7);

}

static void LL_ATON_End_EpochBlock_6(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_6[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_mul_scale_45 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_17_off_bias_48 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_suboff_51 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_suboff_51 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=6 */
  LL_Switch_Deinit(switch_deinit_in_6, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_6_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_6_all_units, 7);

}


/* scheduling epoch=7    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_7(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_21 */
  static const LL_Convacc_InitTypeDef Conv2D_21_init7 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 24,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_21_init7);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_21_mul_scale_54 */
  static const LL_Arithacc_InitTypeDef Conv2D_21_mul_scale_54_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3579216) /* Equivalent hex address = 0x704e9d50UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_21_mul_scale_54_init7);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_21_off_bias_57 */
  static const LL_Arithacc_InitTypeDef Conv2D_21_off_bias_57_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17048,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3574576) /* Equivalent hex address = 0x704e8b30UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_21_off_bias_57_init7);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_24_suboff_60 */
  static const LL_Arithacc_InitTypeDef Conv2D_24_suboff_60_init7 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_24_suboff_60_init7);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_21 input ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_21_dma_init_in_0_7 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_21_zero_off_out_52 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 8,
    .batch_offset = 128,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_21_dma_init_in_0_7, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_21 input ports=1 range=5[3472912,3482128] */

  static const LL_Streng_TensorInitTypeDef Conv2D_21_dma_init_in_1_7 = {
    /* 128x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_21_weights_inflated_264 */
    .offset_start = 3472912,
    .offset_end = 3482128,
    .offset_limit = 3482192,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_21_dma_init_in_1_7, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 49152 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_24_suboff_60 output ports=0 range=0[49152,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_24_suboff_60_dma_init_out_0_7 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_24_zero_off_out_61 */
    .offset_start = 49152,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 8,
    .batch_offset = 128,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_24_suboff_60_dma_init_out_0_7, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_7[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_mul_scale_54 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_off_bias_57 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_suboff_60 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_suboff_60 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=7 */
  LL_Switch_Init(switch_init_in_7, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_7_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_7_all_units, 7);

}

static void LL_ATON_End_EpochBlock_7(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_7[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_mul_scale_54 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_21_off_bias_57 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_suboff_60 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_suboff_60 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=7 */
  LL_Switch_Deinit(switch_deinit_in_7, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_7_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_7_all_units, 7);

}


/* scheduling epoch=8    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_8(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_24 */
  static const LL_Convacc_InitTypeDef Conv2D_24_init8 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 24,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_24_init8);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_24_mul_scale_63 */
  static const LL_Arithacc_InitTypeDef Conv2D_24_mul_scale_63_init8 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3579472) /* Equivalent hex address = 0x704e9e50UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_24_mul_scale_63_init8);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_24_off_bias_66 */
  static const LL_Arithacc_InitTypeDef Conv2D_24_off_bias_66_init8 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 20867,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3575088) /* Equivalent hex address = 0x704e8d30UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_24_off_bias_66_init8);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_28_suboff_69 */
  static const LL_Arithacc_InitTypeDef Conv2D_28_suboff_69_init8 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 16,
    .fHeight = 24,
    .fChannels = 128,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_28_suboff_69_init8);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_24 input ports=0 range=0[49152,98304] */

  static const LL_Streng_TensorInitTypeDef Conv2D_24_dma_init_in_0_8 = {
    /* 16x24x128(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_24_zero_off_out_61 */
    .offset_start = 49152,
    .offset_end = 98304,
    .offset_limit = 98368,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_24_dma_init_in_0_8, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_24 input ports=1 range=5[3446256,3462648] */

  static const LL_Streng_TensorInitTypeDef Conv2D_24_dma_init_in_1_8 = {
    /* 128x1x1x128(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_24_weights */
    .offset_start = 3446256,
    .offset_end = 3462648,
    .offset_limit = 3462712,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_24_dma_init_in_1_8, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 393216 */
  /* octoFlash -> 16384 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_28_suboff_69 output ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_28_suboff_69_dma_init_out_0_8 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_28_zero_off_out_70 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 16,
    .batch_offset = 128,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 49152,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_28_suboff_69_dma_init_out_0_8, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 49152 */

  static const LL_Switch_InitTypeDef switch_init_in_8[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_mul_scale_63 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_off_bias_66 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_suboff_69 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_suboff_69 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=8 */
  LL_Switch_Init(switch_init_in_8, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_8_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_8_all_units, 7);

}

static void LL_ATON_End_EpochBlock_8(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_8[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_mul_scale_63 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_24_off_bias_66 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_suboff_69 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_suboff_69 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=8 */
  LL_Switch_Deinit(switch_deinit_in_8, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_8_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_8_all_units, 7);

}


/* scheduling epoch=9    nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_9(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_28 */
  static const LL_Convacc_InitTypeDef Conv2D_28_init9 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 16,
    .fHeight = 24,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 15,
    .top_crop = 0,
    .bot_crop = 23,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_28_init9);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_28_mul_scale_72 */
  static const LL_Arithacc_InitTypeDef Conv2D_28_mul_scale_72_init9 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3579728) /* Equivalent hex address = 0x704e9f50UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_28_mul_scale_72_init9);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_28_off_bias_75 */
  static const LL_Arithacc_InitTypeDef Conv2D_28_off_bias_75_init9 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18806,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3575600) /* Equivalent hex address = 0x704e8f30UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_28_off_bias_75_init9);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_31_suboff_78 */
  static const LL_Arithacc_InitTypeDef Conv2D_31_suboff_78_init9 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 128,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_31_suboff_78_init9);


  /* Dma inputs units to cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_28 input ports=0 range=0[0,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_28_dma_init_in_0_9 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_28_zero_off_out_70 */
    .offset_start = 0,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 16,
    .fheight = 24,
    .batch_depth = 8,
    .batch_offset = 128,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_28_dma_init_in_0_9, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_28 input ports=1 range=5[3482128,3491344] */

  static const LL_Streng_TensorInitTypeDef Conv2D_28_dma_init_in_1_9 = {
    /* 128x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_28_weights_inflated_266 */
    .offset_start = 3482128,
    .offset_end = 3491344,
    .offset_limit = 3491408,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_28_dma_init_in_1_9, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 49152 */
  /* octoFlash -> 9216 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_31_suboff_78 output ports=0 range=0[49152,61440] */

  static const LL_Streng_TensorInitTypeDef Conv2D_31_suboff_78_dma_init_out_0_9 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_31_zero_off_out_79 */
    .offset_start = 49152,
    .offset_limit = 61504,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 8,
    .batch_offset = 128,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_31_suboff_78_dma_init_out_0_9, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_9[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_mul_scale_72 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_off_bias_75 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_suboff_78 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_suboff_78 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=9 */
  LL_Switch_Init(switch_init_in_9, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_9_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_9_all_units, 7);

}

static void LL_ATON_End_EpochBlock_9(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_9[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_mul_scale_72 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_28_off_bias_75 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_suboff_78 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_suboff_78 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=9 */
  LL_Switch_Deinit(switch_deinit_in_9, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_9_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_9_all_units, 7);

}


/* scheduling epoch=10   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_10(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_31 */
  static const LL_Convacc_InitTypeDef Conv2D_31_init10 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 3,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_31_init10);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_31_mul_scale_81 */
  static const LL_Arithacc_InitTypeDef Conv2D_31_mul_scale_81_init10 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3576112) /* Equivalent hex address = 0x704e9130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_31_mul_scale_81_init10);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_31_off_bias_84 */
  static const LL_Arithacc_InitTypeDef Conv2D_31_off_bias_84_init10 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 23696,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3557680) /* Equivalent hex address = 0x704e4930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_31_off_bias_84_init10);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_35_suboff_87 */
  static const LL_Arithacc_InitTypeDef Conv2D_35_suboff_87_init10 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_35_suboff_87_init10);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_31 input ports=0 range=0[49152,61440] */

  static const LL_Streng_TensorInitTypeDef Conv2D_31_dma_init_in_0_10 = {
    /* 8x12x128(8 bits) */
    .dir = 0,
    .raw = 1,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_31_zero_off_out_79 */
    .offset_start = 49152,
    .offset_end = 61440,
    .offset_limit = 61504,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_31_dma_init_in_0_10, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_31 input ports=1 range=5[3376608,3409392] */

  static const LL_Streng_TensorInitTypeDef Conv2D_31_dma_init_in_1_10 = {
    /* 256x1x1x128(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_31_weights */
    .offset_start = 3376608,
    .offset_end = 3409392,
    .offset_limit = 3409456,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_31_dma_init_in_1_10, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 196608 */
  /* octoFlash -> 32768 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_35_suboff_87 output ports=0 range=0[0,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_35_suboff_87_dma_init_out_0_10 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_35_zero_off_out_88 */
    .offset_start = 0,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 16,
    .batch_offset = 256,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_35_suboff_87_dma_init_out_0_10, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_10[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_mul_scale_81 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_off_bias_84 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_suboff_87 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_suboff_87 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=10 */
  LL_Switch_Init(switch_init_in_10, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_10_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_10_all_units, 7);

}

static void LL_ATON_End_EpochBlock_10(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_10[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_mul_scale_81 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_31_off_bias_84 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_suboff_87 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_suboff_87 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=10 */
  LL_Switch_Deinit(switch_deinit_in_10, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_10_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_10_all_units, 7);

}


/* scheduling epoch=11   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_11(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_35 */
  static const LL_Convacc_InitTypeDef Conv2D_35_init11 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_35_init11);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_35_mul_scale_90 */
  static const LL_Arithacc_InitTypeDef Conv2D_35_mul_scale_90_init11 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3576624) /* Equivalent hex address = 0x704e9330UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_35_mul_scale_90_init11);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_35_off_bias_93 */
  static const LL_Arithacc_InitTypeDef Conv2D_35_off_bias_93_init11 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 19098,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3558704) /* Equivalent hex address = 0x704e4d30UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_35_off_bias_93_init11);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_38_suboff_96 */
  static const LL_Arithacc_InitTypeDef Conv2D_38_suboff_96_init11 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_38_suboff_96_init11);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_35 input ports=0 range=0[0,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_35_dma_init_in_0_11 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_35_zero_off_out_88 */
    .offset_start = 0,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 8,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_35_dma_init_in_0_11, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_35 input ports=1 range=5[3409392,3427824] */

  static const LL_Streng_TensorInitTypeDef Conv2D_35_dma_init_in_1_11 = {
    /* 256x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_35_weights_inflated_268 */
    .offset_start = 3409392,
    .offset_end = 3427824,
    .offset_limit = 3427888,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_35_dma_init_in_1_11, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 24576 */
  /* octoFlash -> 18432 */

  /* Dma output units from cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_38_suboff_96 output ports=0 range=0[24576,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_38_suboff_96_dma_init_out_0_11 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_38_zero_off_out_97 */
    .offset_start = 24576,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 8,
    .batch_offset = 256,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_38_suboff_96_dma_init_out_0_11, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_11[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_mul_scale_90 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_off_bias_93 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_suboff_96 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_suboff_96 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=11 */
  LL_Switch_Init(switch_init_in_11, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_11_all_units[] = {
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_11_all_units, 7);

}

static void LL_ATON_End_EpochBlock_11(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_11[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_mul_scale_90 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_35_off_bias_93 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_suboff_96 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_suboff_96 OUT: in unit=STREAM_ENG_V2 8 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=11 */
  LL_Switch_Deinit(switch_deinit_in_11, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_11_all_units[] = {
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_11_all_units, 7);

}


/* scheduling epoch=12   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_12(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_38 */
  static const LL_Convacc_InitTypeDef Conv2D_38_init12 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 5,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_38_init12);


  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_38_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_38_ca_pipe_1_init12 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 5,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_38_ca_pipe_1_init12);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_38_mul_scale_99 */
  static const LL_Arithacc_InitTypeDef Conv2D_38_mul_scale_99_init12 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3577136) /* Equivalent hex address = 0x704e9530UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_38_mul_scale_99_init12);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_38_off_bias_102 */
  static const LL_Arithacc_InitTypeDef Conv2D_38_off_bias_102_init12 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26063,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3559728) /* Equivalent hex address = 0x704e5130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_38_off_bias_102_init12);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_42_suboff_105 */
  static const LL_Arithacc_InitTypeDef Conv2D_42_suboff_105_init12 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 8,
    .fHeight = 12,
    .fChannels = 256,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_42_suboff_105_init12);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_38 input ports=0 range=0[24576,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_38_dma_init_in_0_12 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_38_zero_off_out_97 */
    .offset_start = 24576,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 43,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 256,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_38_dma_init_in_0_12, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_38 input ports=1 range=5[3089856,3155424] */

  static const LL_Streng_TensorInitTypeDef Conv2D_38_dma_init_in_1_12 = {
    /* 256x1x1x256(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_38_weights */
    .offset_start = 3089856,
    .offset_end = 3091905,
    .offset_limit = 3155488,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 32,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_38_dma_init_in_1_12, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_38_ca_pipe_1 input ports=0 range=0[24576,49152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_38_ca_pipe_1_dma_init_in_0_12 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_38_zero_off_out_97_copy_in_1 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 49216,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 43,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 256,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_38_ca_pipe_1_dma_init_in_0_12, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 393216 */
  /* octoFlash -> 65536 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_42_suboff_105 output ports=0 range=0[0,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_42_suboff_105_dma_init_out_0_12 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_42_zero_off_out_106 */
    .offset_start = 0,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 16,
    .batch_offset = 256,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 24576,
    .frame_loop_cnt = 16,
    .frame_tot_cnt = 16,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_42_suboff_105_dma_init_out_0_12, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 24576 */

  static const LL_Switch_InitTypeDef switch_init_in_12[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_mul_scale_99 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_off_bias_102 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_suboff_105 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_suboff_105 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=12 */
  LL_Switch_Init(switch_init_in_12, 9);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_12_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_12_all_units, 9);

}

static void LL_ATON_End_EpochBlock_12(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_12[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_ca_pipe_1 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_mul_scale_99 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_38_off_bias_102 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_suboff_105 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_suboff_105 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=12 */
  LL_Switch_Deinit(switch_deinit_in_12, 9);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_12_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_12_all_units, 9);

}


/* scheduling epoch=13   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_13(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_42 */
  static const LL_Convacc_InitTypeDef Conv2D_42_init13 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 8,
    .fHeight = 12,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 7,
    .top_crop = 0,
    .bot_crop = 11,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_42_init13);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_42_mul_scale_108 */
  static const LL_Arithacc_InitTypeDef Conv2D_42_mul_scale_108_init13 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3577648) /* Equivalent hex address = 0x704e9730UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_42_mul_scale_108_init13);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_42_off_bias_111 */
  static const LL_Arithacc_InitTypeDef Conv2D_42_off_bias_111_init13 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 22853,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3560752) /* Equivalent hex address = 0x704e5530UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_42_off_bias_111_init13);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_45_suboff_114 */
  static const LL_Arithacc_InitTypeDef Conv2D_45_suboff_114_init13 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 256,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_45_suboff_114_init13);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_42 input ports=0 range=0[0,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_42_dma_init_in_0_13 = {
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_42_zero_off_out_106 */
    .offset_start = 0,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 8,
    .fheight = 12,
    .batch_depth = 8,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 8,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_42_dma_init_in_0_13, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_42 input ports=1 range=5[3427824,3446256] */

  static const LL_Streng_TensorInitTypeDef Conv2D_42_dma_init_in_1_13 = {
    /* 256x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_42_weights_inflated_270 */
    .offset_start = 3427824,
    .offset_end = 3446256,
    .offset_limit = 3446320,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_42_dma_init_in_1_13, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 24576 */
  /* octoFlash -> 18432 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_45_suboff_114 output ports=0 range=0[24576,30720] */

  static const LL_Streng_TensorInitTypeDef Conv2D_45_suboff_114_dma_init_out_0_13 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_45_zero_off_out_115 */
    .offset_start = 24576,
    .offset_limit = 30784,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 256,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_45_suboff_114_dma_init_out_0_13, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_13[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_mul_scale_108 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_off_bias_111 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_suboff_114 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_suboff_114 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=13 */
  LL_Switch_Init(switch_init_in_13, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_13_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_13_all_units, 7);

}

static void LL_ATON_End_EpochBlock_13(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_13[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_mul_scale_108 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_42_off_bias_111 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_suboff_114 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_suboff_114 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=13 */
  LL_Switch_Deinit(switch_deinit_in_13, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_13_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_13_all_units, 7);

}


/* scheduling epoch=14   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_14(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_45 */
  static const LL_Convacc_InitTypeDef Conv2D_45_init14 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 5,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_45_init14);


  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_45_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_45_ca_pipe_1_init14 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 5,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_45_ca_pipe_1_init14);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_45_mul_scale_117 */
  static const LL_Arithacc_InitTypeDef Conv2D_45_mul_scale_117_init14 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3561776) /* Equivalent hex address = 0x704e5930UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_45_mul_scale_117_init14);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_45_off_bias_120 */
  static const LL_Arithacc_InitTypeDef Conv2D_45_off_bias_120_init14 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26874,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3533104) /* Equivalent hex address = 0x704de930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_45_off_bias_120_init14);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_49_suboff_123 */
  static const LL_Arithacc_InitTypeDef Conv2D_49_suboff_123_init14 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_49_suboff_123_init14);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_45 input ports=0 range=0[24576,30720] */

  static const LL_Streng_TensorInitTypeDef Conv2D_45_dma_init_in_0_14 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_45_zero_off_out_115 */
    .offset_start = 24576,
    .offset_limit = 30784,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 256,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_45_dma_init_in_0_14, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_45 input ports=1 range=5[2884992,3016128] */

  static const LL_Streng_TensorInitTypeDef Conv2D_45_dma_init_in_1_14 = {
    /* 512x1x1x256(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_45_weights */
    .offset_start = 2884992,
    .offset_end = 2887041,
    .offset_limit = 3016192,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_45_dma_init_in_1_14, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_45_ca_pipe_1 input ports=0 range=0[24576,30720] */

  static const LL_Streng_TensorInitTypeDef Conv2D_45_ca_pipe_1_dma_init_in_0_14 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_45_zero_off_out_115_copy_in_2 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 30784,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 256,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 256,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_45_ca_pipe_1_dma_init_in_0_14, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 196608 */
  /* octoFlash -> 131072 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49_suboff_123 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_suboff_123_dma_init_out_0_14 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_49_zero_off_out_124 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_49_suboff_123_dma_init_out_0_14, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_14[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_mul_scale_117 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_off_bias_120 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_suboff_123 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_suboff_123 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=14 */
  LL_Switch_Init(switch_init_in_14, 9);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_14_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_14_all_units, 9);

}

static void LL_ATON_End_EpochBlock_14(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_14[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_ca_pipe_1 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_mul_scale_117 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_45_off_bias_120 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_suboff_123 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_suboff_123 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=14 */
  LL_Switch_Deinit(switch_deinit_in_14, 9);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_14_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_14_all_units, 9);

}


/* scheduling epoch=15   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_49_conv_identity */

static void LL_ATON_Start_EpochBlock_15(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_49_conv_identity */
  /* node=Conv2D_49_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_conv_identity_dma_init_in_0_15 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_49_zero_off_out_124_copy_in_9 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_49_conv_identity_dma_init_in_0_15, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_conv_identity_dma_init_out_0_15 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_49_zero_off_out_124_cp_in_9 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_49_conv_identity_dma_init_out_0_15, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_15[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_conv_identity OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=15 */
  LL_Switch_Init(switch_init_in_15, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_15_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_15_all_units, 2);

}

static void LL_ATON_End_EpochBlock_15(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_15[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_conv_identity OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=15 */
  LL_Switch_Deinit(switch_deinit_in_15, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_15_all_units[] = {
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_15_all_units, 2);

}


/* scheduling epoch=16   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_16(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_49 */
  static const LL_Convacc_InitTypeDef Conv2D_49_init16 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_49_init16);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_49_mul_scale_126 */
  static const LL_Arithacc_InitTypeDef Conv2D_49_mul_scale_126_init16 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3562800) /* Equivalent hex address = 0x704e5d30UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_49_mul_scale_126_init16);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_49_off_bias_129 */
  static const LL_Arithacc_InitTypeDef Conv2D_49_off_bias_129_init16 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 20028,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3535152) /* Equivalent hex address = 0x704df130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_49_off_bias_129_init16);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_52_suboff_132 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_suboff_132_init16 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_52_suboff_132_init16);


  /* Dma inputs units to cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_dma_init_in_0_16 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_49_zero_off_out_124 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_49_dma_init_in_0_16, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_49 input ports=1 range=5[3155424,3192288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_49_dma_init_in_1_16 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_49_weights_inflated_272 */
    .offset_start = 3155424,
    .offset_end = 3192288,
    .offset_limit = 3192352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_49_dma_init_in_1_16, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52_suboff_132 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_suboff_132_dma_init_out_0_16 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_52_zero_off_out_133 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_52_suboff_132_dma_init_out_0_16, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_16[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_mul_scale_126 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_off_bias_129 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_132 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_132 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=16 */
  LL_Switch_Init(switch_init_in_16, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_16_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_16_all_units, 7);

}

static void LL_ATON_End_EpochBlock_16(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_16[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_mul_scale_126 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_49_off_bias_129 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_132 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_suboff_132 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=16 */
  LL_Switch_Deinit(switch_deinit_in_16, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_16_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_16_all_units, 7);

}


/* scheduling epoch=17   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_17(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_52 */
  static const LL_Convacc_InitTypeDef Conv2D_52_init17 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 5,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_52_init17);


  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_52_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_52_ca_pipe_1_init17 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 5,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_52_ca_pipe_1_init17);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_52_mul_scale_135 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_mul_scale_135_init17 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3563824) /* Equivalent hex address = 0x704e6130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_52_mul_scale_135_init17);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_52_off_bias_138 */
  static const LL_Arithacc_InitTypeDef Conv2D_52_off_bias_138_init17 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 27581,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3537200) /* Equivalent hex address = 0x704df930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_52_off_bias_138_init17);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_56_suboff_141 */
  static const LL_Arithacc_InitTypeDef Conv2D_56_suboff_141_init17 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_56_suboff_141_init17);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_dma_init_in_0_17 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_52_zero_off_out_133 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_52_dma_init_in_0_17, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52 input ports=1 range=5[1573632,1835904] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_dma_init_in_1_17 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_52_weights */
    .offset_start = 1573632,
    .offset_end = 1575681,
    .offset_limit = 1835968,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_52_dma_init_in_1_17, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_dma_init_in_2_17 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 2,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_52_dma_init_in_2_17, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_ca_pipe_1_dma_init_in_0_17 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_52_zero_off_out_133_copy_in_3 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_52_ca_pipe_1_dma_init_in_0_17, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_52_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_52_ca_pipe_1_dma_init_out_0_17 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_52_out_0_cp_in_3 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_52_ca_pipe_1_dma_init_out_0_17, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56_suboff_141 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_suboff_141_dma_init_out_0_17 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_56_zero_off_out_142 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_56_suboff_141_dma_init_out_0_17, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_17[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_52_mul_scale_135 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_off_bias_138 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_suboff_141 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_suboff_141 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=17 */
  LL_Switch_Init(switch_init_in_17, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_17_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_17_all_units, 11);

}

static void LL_ATON_End_EpochBlock_17(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_17[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_52_mul_scale_135 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_52_off_bias_138 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_suboff_141 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_suboff_141 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=17 */
  LL_Switch_Deinit(switch_deinit_in_17, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_17_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_17_all_units, 11);

}


/* scheduling epoch=18   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_56_conv_identity */

static void LL_ATON_Start_EpochBlock_18(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_56_conv_identity */
  /* node=Conv2D_56_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_conv_identity_dma_init_in_0_18 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_56_zero_off_out_142_copy_in_10 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_56_conv_identity_dma_init_in_0_18, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_conv_identity_dma_init_out_0_18 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_56_zero_off_out_142_cp_in_10 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_56_conv_identity_dma_init_out_0_18, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_18[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_conv_identity OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=18 */
  LL_Switch_Init(switch_init_in_18, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_18_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_18_all_units, 2);

}

static void LL_ATON_End_EpochBlock_18(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_18[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_conv_identity OUT: in unit=STREAM_ENG_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=18 */
  LL_Switch_Deinit(switch_deinit_in_18, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_18_all_units[] = {
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_18_all_units, 2);

}


/* scheduling epoch=19   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_19(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_56 */
  static const LL_Convacc_InitTypeDef Conv2D_56_init19 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_56_init19);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_56_mul_scale_144 */
  static const LL_Arithacc_InitTypeDef Conv2D_56_mul_scale_144_init19 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3564848) /* Equivalent hex address = 0x704e6530UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_56_mul_scale_144_init19);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_56_off_bias_147 */
  static const LL_Arithacc_InitTypeDef Conv2D_56_off_bias_147_init19 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 18928,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3539248) /* Equivalent hex address = 0x704e0130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_56_off_bias_147_init19);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_59_suboff_150 */
  static const LL_Arithacc_InitTypeDef Conv2D_59_suboff_150_init19 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_59_suboff_150_init19);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_dma_init_in_0_19 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_56_zero_off_out_142 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_56_dma_init_in_0_19, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_56 input ports=1 range=5[3192288,3229152] */

  static const LL_Streng_TensorInitTypeDef Conv2D_56_dma_init_in_1_19 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_56_weights_inflated_274 */
    .offset_start = 3192288,
    .offset_end = 3229152,
    .offset_limit = 3229216,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_56_dma_init_in_1_19, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59_suboff_150 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_suboff_150_dma_init_out_0_19 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_59_zero_off_out_151 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_59_suboff_150_dma_init_out_0_19, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_19[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_mul_scale_144 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_off_bias_147 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_suboff_150 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_suboff_150 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=19 */
  LL_Switch_Init(switch_init_in_19, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_19_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_19_all_units, 7);

}

static void LL_ATON_End_EpochBlock_19(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_19[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_mul_scale_144 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_56_off_bias_147 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_suboff_150 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_suboff_150 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=19 */
  LL_Switch_Deinit(switch_deinit_in_19, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_19_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_19_all_units, 7);

}


/* scheduling epoch=20   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_20(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_59 */
  static const LL_Convacc_InitTypeDef Conv2D_59_init20 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 6,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_59_init20);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_59_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_59_ca_pipe_1_init20 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 6,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_59_ca_pipe_1_init20);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_59_mul_scale_153 */
  static const LL_Arithacc_InitTypeDef Conv2D_59_mul_scale_153_init20 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3565872) /* Equivalent hex address = 0x704e6930UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_59_mul_scale_153_init20);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_59_off_bias_156 */
  static const LL_Arithacc_InitTypeDef Conv2D_59_off_bias_156_init20 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 26732,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3541296) /* Equivalent hex address = 0x704e0930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_59_off_bias_156_init20);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_63_suboff_159 */
  static const LL_Arithacc_InitTypeDef Conv2D_63_suboff_159_init20 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_63_suboff_159_init20);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_dma_init_in_0_20 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_59_zero_off_out_151 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_59_dma_init_in_0_20, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59 input ports=1 range=5[1835904,2098176] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_dma_init_in_1_20 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_59_weights */
    .offset_start = 1835904,
    .offset_end = 1837953,
    .offset_limit = 2098240,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_59_dma_init_in_1_20, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_dma_init_in_2_20 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 5,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_59_dma_init_in_2_20, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_ca_pipe_1_dma_init_in_0_20 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_59_zero_off_out_151_copy_in_4 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_59_ca_pipe_1_dma_init_in_0_20, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_59_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_59_ca_pipe_1_dma_init_out_0_20 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_59_out_0_cp_in_4 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_59_ca_pipe_1_dma_init_out_0_20, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63_suboff_159 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_suboff_159_dma_init_out_0_20 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_63_zero_off_out_160 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_63_suboff_159_dma_init_out_0_20, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_20[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_59_mul_scale_153 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_off_bias_156 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_suboff_159 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_suboff_159 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=20 */
  LL_Switch_Init(switch_init_in_20, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_20_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_20_all_units, 11);

}

static void LL_ATON_End_EpochBlock_20(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_20[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_59_mul_scale_153 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_59_off_bias_156 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_suboff_159 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_suboff_159 OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=20 */
  LL_Switch_Deinit(switch_deinit_in_20, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_20_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_20_all_units, 11);

}


/* scheduling epoch=21   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_63_conv_identity */

static void LL_ATON_Start_EpochBlock_21(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_63_conv_identity */
  /* node=Conv2D_63_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_conv_identity_dma_init_in_0_21 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_63_zero_off_out_160_copy_in_11 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_63_conv_identity_dma_init_in_0_21, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_conv_identity_dma_init_out_0_21 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_63_zero_off_out_160_cp_in_11 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_63_conv_identity_dma_init_out_0_21, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_21[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_conv_identity OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=21 */
  LL_Switch_Init(switch_init_in_21, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_21_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_21_all_units, 2);

}

static void LL_ATON_End_EpochBlock_21(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_21[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_conv_identity OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=21 */
  LL_Switch_Deinit(switch_deinit_in_21, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_21_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_21_all_units, 2);

}


/* scheduling epoch=22   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_22(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_63 */
  static const LL_Convacc_InitTypeDef Conv2D_63_init22 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_63_init22);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_63_mul_scale_162 */
  static const LL_Arithacc_InitTypeDef Conv2D_63_mul_scale_162_init22 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3566896) /* Equivalent hex address = 0x704e6d30UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_63_mul_scale_162_init22);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_63_off_bias_165 */
  static const LL_Arithacc_InitTypeDef Conv2D_63_off_bias_165_init22 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 30797,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3543344) /* Equivalent hex address = 0x704e1130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_63_off_bias_165_init22);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_66_suboff_168 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_suboff_168_init22 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_66_suboff_168_init22);


  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_dma_init_in_0_22 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_63_zero_off_out_160 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_63_dma_init_in_0_22, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_63 input ports=1 range=5[3229152,3266016] */

  static const LL_Streng_TensorInitTypeDef Conv2D_63_dma_init_in_1_22 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_63_weights_inflated_276 */
    .offset_start = 3229152,
    .offset_end = 3266016,
    .offset_limit = 3266080,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_63_dma_init_in_1_22, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66_suboff_168 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_suboff_168_dma_init_out_0_22 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_66_zero_off_out_169 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_66_suboff_168_dma_init_out_0_22, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_22[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_mul_scale_162 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_off_bias_165 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_168 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_168 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=22 */
  LL_Switch_Init(switch_init_in_22, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_22_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_22_all_units, 7);

}

static void LL_ATON_End_EpochBlock_22(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_22[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_mul_scale_162 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_63_off_bias_165 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_168 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_suboff_168 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=22 */
  LL_Switch_Deinit(switch_deinit_in_22, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_22_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_22_all_units, 7);

}


/* scheduling epoch=23   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_23(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_66 */
  static const LL_Convacc_InitTypeDef Conv2D_66_init23 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 6,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_66_init23);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_66_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_66_ca_pipe_1_init23 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 6,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_66_ca_pipe_1_init23);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_66_mul_scale_171 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_mul_scale_171_init23 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 10,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3567920) /* Equivalent hex address = 0x704e7130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_66_mul_scale_171_init23);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_66_off_bias_174 */
  static const LL_Arithacc_InitTypeDef Conv2D_66_off_bias_174_init23 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 21304,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3545392) /* Equivalent hex address = 0x704e1930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_66_off_bias_174_init23);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_70_suboff_177 */
  static const LL_Arithacc_InitTypeDef Conv2D_70_suboff_177_init23 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_70_suboff_177_init23);


  /* Dma inputs units to cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_dma_init_in_0_23 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_66_zero_off_out_169 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_66_dma_init_in_0_23, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66 input ports=1 range=5[2098176,2360448] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_dma_init_in_1_23 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_66_weights */
    .offset_start = 2098176,
    .offset_end = 2100225,
    .offset_limit = 2360512,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_66_dma_init_in_1_23, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_dma_init_in_2_23 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 5,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_66_dma_init_in_2_23, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_ca_pipe_1_dma_init_in_0_23 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_66_zero_off_out_169_copy_in_5 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_66_ca_pipe_1_dma_init_in_0_23, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_66_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_66_ca_pipe_1_dma_init_out_0_23 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_66_out_0_cp_in_5 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_66_ca_pipe_1_dma_init_out_0_23, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70_suboff_177 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_suboff_177_dma_init_out_0_23 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_70_zero_off_out_178 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_70_suboff_177_dma_init_out_0_23, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_23[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_66_mul_scale_171 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_off_bias_174 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_suboff_177 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_suboff_177 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=23 */
  LL_Switch_Init(switch_init_in_23, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_23_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_23_all_units, 11);

}

static void LL_ATON_End_EpochBlock_23(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_23[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_66_mul_scale_171 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_66_off_bias_174 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_suboff_177 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_suboff_177 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=23 */
  LL_Switch_Deinit(switch_deinit_in_23, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_23_all_units[] = {
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_23_all_units, 11);

}


/* scheduling epoch=24   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_70_conv_identity */

static void LL_ATON_Start_EpochBlock_24(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_70_conv_identity */
  /* node=Conv2D_70_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_conv_identity_dma_init_in_0_24 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_70_zero_off_out_178_copy_in_12 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_70_conv_identity_dma_init_in_0_24, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_conv_identity_dma_init_out_0_24 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_70_zero_off_out_178_cp_in_12 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_70_conv_identity_dma_init_out_0_24, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_24[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_conv_identity OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
  };


  /* epoch=24 */
  LL_Switch_Init(switch_init_in_24, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_24_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_24_all_units, 2);

}

static void LL_ATON_End_EpochBlock_24(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_24[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_conv_identity OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 8 out port=0 */
  };


  /* epoch=24 */
  LL_Switch_Deinit(switch_deinit_in_24, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_24_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_24_all_units, 2);

}


/* scheduling epoch=25   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_25(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_70 */
  static const LL_Convacc_InitTypeDef Conv2D_70_init25 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_70_init25);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_70_mul_scale_180 */
  static const LL_Arithacc_InitTypeDef Conv2D_70_mul_scale_180_init25 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 13,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3568944) /* Equivalent hex address = 0x704e7530UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_70_mul_scale_180_init25);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_70_off_bias_183 */
  static const LL_Arithacc_InitTypeDef Conv2D_70_off_bias_183_init25 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 29635,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3547440) /* Equivalent hex address = 0x704e2130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_70_off_bias_183_init25);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_73_suboff_186 */
  static const LL_Arithacc_InitTypeDef Conv2D_73_suboff_186_init25 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_73_suboff_186_init25);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_dma_init_in_0_25 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_70_zero_off_out_178 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_70_dma_init_in_0_25, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_70 input ports=1 range=5[3266016,3302880] */

  static const LL_Streng_TensorInitTypeDef Conv2D_70_dma_init_in_1_25 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_70_weights_inflated_278 */
    .offset_start = 3266016,
    .offset_end = 3302880,
    .offset_limit = 3302944,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_70_dma_init_in_1_25, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73_suboff_186 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_suboff_186_dma_init_out_0_25 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_73_zero_off_out_187 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_73_suboff_186_dma_init_out_0_25, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_25[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_mul_scale_180 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_off_bias_183 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_suboff_186 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_suboff_186 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=25 */
  LL_Switch_Init(switch_init_in_25, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_25_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_25_all_units, 7);

}

static void LL_ATON_End_EpochBlock_25(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_25[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_mul_scale_180 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_70_off_bias_183 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_suboff_186 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_suboff_186 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=25 */
  LL_Switch_Deinit(switch_deinit_in_25, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_25_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_25_all_units, 7);

}


/* scheduling epoch=26   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_26(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_73 */
  static const LL_Convacc_InitTypeDef Conv2D_73_init26 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 6,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_73_init26);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_73_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_73_ca_pipe_1_init26 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 6,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_73_ca_pipe_1_init26);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_73_mul_scale_189 */
  static const LL_Arithacc_InitTypeDef Conv2D_73_mul_scale_189_init26 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 12,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3569968) /* Equivalent hex address = 0x704e7930UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_73_mul_scale_189_init26);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_73_off_bias_192 */
  static const LL_Arithacc_InitTypeDef Conv2D_73_off_bias_192_init26 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 21197,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3549488) /* Equivalent hex address = 0x704e2930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_73_off_bias_192_init26);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_77_suboff_195 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_suboff_195_init26 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_77_suboff_195_init26);


  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_dma_init_in_0_26 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_73_zero_off_out_187 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_73_dma_init_in_0_26, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73 input ports=1 range=5[2360448,2622720] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_dma_init_in_1_26 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_73_weights */
    .offset_start = 2360448,
    .offset_end = 2362497,
    .offset_limit = 2622784,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_73_dma_init_in_1_26, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_dma_init_in_2_26 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_73_dma_init_in_2_26, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_ca_pipe_1_dma_init_in_0_26 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_73_zero_off_out_187_copy_in_6 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_73_ca_pipe_1_dma_init_in_0_26, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_73_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_73_ca_pipe_1_dma_init_out_0_26 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_73_out_0_cp_in_6 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_73_ca_pipe_1_dma_init_out_0_26, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77_suboff_195 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_suboff_195_dma_init_out_0_26 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_77_zero_off_out_196 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_77_suboff_195_dma_init_out_0_26, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_26[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_73_mul_scale_189 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_off_bias_192 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_195 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_195 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=26 */
  LL_Switch_Init(switch_init_in_26, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_26_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_26_all_units, 11);

}

static void LL_ATON_End_EpochBlock_26(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_26[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_73_mul_scale_189 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_73_off_bias_192 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_195 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_suboff_195 OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=26 */
  LL_Switch_Deinit(switch_deinit_in_26, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_26_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_26_all_units, 11);

}


/* scheduling epoch=27   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_77_conv_identity */

static void LL_ATON_Start_EpochBlock_27(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_77_conv_identity */
  /* node=Conv2D_77_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_conv_identity_dma_init_in_0_27 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_77_zero_off_out_196_copy_in_13 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_77_conv_identity_dma_init_in_0_27, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_conv_identity_dma_init_out_0_27 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_77_zero_off_out_196_cp_in_13 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_77_conv_identity_dma_init_out_0_27, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_27[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_conv_identity OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=27 */
  LL_Switch_Init(switch_init_in_27, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_27_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_27_all_units, 2);

}

static void LL_ATON_End_EpochBlock_27(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_27[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_conv_identity OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 3 out port=0 */
  };


  /* epoch=27 */
  LL_Switch_Deinit(switch_deinit_in_27, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_27_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_27_all_units, 2);

}


/* scheduling epoch=28   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_28(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_77 */
  static const LL_Convacc_InitTypeDef Conv2D_77_init28 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_77_init28);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_77_mul_scale_198 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_mul_scale_198_init28 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3570992) /* Equivalent hex address = 0x704e7d30UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_77_mul_scale_198_init28);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_77_off_bias_201 */
  static const LL_Arithacc_InitTypeDef Conv2D_77_off_bias_201_init28 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 20201,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3551536) /* Equivalent hex address = 0x704e3130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_77_off_bias_201_init28);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_80_suboff_204 */
  static const LL_Arithacc_InitTypeDef Conv2D_80_suboff_204_init28 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_80_suboff_204_init28);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_dma_init_in_0_28 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_77_zero_off_out_196 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_77_dma_init_in_0_28, 1);

  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_77 input ports=1 range=5[3302880,3339744] */

  static const LL_Streng_TensorInitTypeDef Conv2D_77_dma_init_in_1_28 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_77_weights_inflated_280 */
    .offset_start = 3302880,
    .offset_end = 3339744,
    .offset_limit = 3339808,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_77_dma_init_in_1_28, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80_suboff_204 output ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_suboff_204_dma_init_out_0_28 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_80_zero_off_out_205 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_80_suboff_204_dma_init_out_0_28, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_28[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_mul_scale_198 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_off_bias_201 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_suboff_204 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_suboff_204 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=28 */
  LL_Switch_Init(switch_init_in_28, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_28_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_28_all_units, 7);

}

static void LL_ATON_End_EpochBlock_28(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_28[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_mul_scale_198 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_77_off_bias_201 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_suboff_204 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_suboff_204 OUT: in unit=STREAM_ENG_V2 7 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=28 */
  LL_Switch_Deinit(switch_deinit_in_28, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_28_all_units[] = {
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_28_all_units, 7);

}


/* scheduling epoch=29   nodes=5   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_29(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_80 */
  static const LL_Convacc_InitTypeDef Conv2D_80_init29 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 2,
    .afilt_first = 1,
    .afilt_last = 1,
    .kfilt_tot = 32,
    .kfilt_first = 0,
    .kfilt_last = 15,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 7,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 3,
    .shift_o = 0,
    .raw_o = 1,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_80_init29);


  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_80_ca_pipe_1 */
  static const LL_Convacc_InitTypeDef Conv2D_80_ca_pipe_1_init29 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_first = 1,
    .kfilt_tot = 32,
    .kfilt_first = 16,
    .kfilt_last = 31,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 7,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_80_ca_pipe_1_init29);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_80_mul_scale_207 */
  static const LL_Arithacc_InitTypeDef Conv2D_80_mul_scale_207_init29 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 11,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3572016) /* Equivalent hex address = 0x704e8130UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_80_mul_scale_207_init29);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_80_off_bias_210 */
  static const LL_Arithacc_InitTypeDef Conv2D_80_off_bias_210_init29 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 22231,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3553584) /* Equivalent hex address = 0x704e3930UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_80_off_bias_210_init29);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_84_suboff_213 */
  static const LL_Arithacc_InitTypeDef Conv2D_84_suboff_213_init29 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 4,
    .fHeight = 6,
    .fChannels = 512,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_84_suboff_213_init29);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_dma_init_in_0_29 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_80_zero_off_out_205 */
    .offset_start = 24576,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_80_dma_init_in_0_29, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80 input ports=1 range=5[2622720,2884992] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_dma_init_in_1_29 = {
    /* 512x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_80_weights */
    .offset_start = 2622720,
    .offset_end = 2624769,
    .offset_limit = 2885056,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 2049,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_80_dma_init_in_1_29, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80 input ports=2 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_dma_init_in_2_29 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 4,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_80_dma_init_in_2_29, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80_ca_pipe_1 input ports=0 range=0[24576,36864] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_ca_pipe_1_dma_init_in_0_29 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_80_zero_off_out_205_copy_in_7 ca pipe offset=1 */
    .offset_start = 24704,
    .offset_limit = 36928,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 256,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 2,
    .frame_tot_cnt = 64,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_80_ca_pipe_1_dma_init_in_0_29, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 442368 */
  /* octoFlash -> 262144 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_80_ca_pipe_1 output ports=0 range=0[36864,37632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_80_ca_pipe_1_dma_init_out_0_29 = {
    /* partial accumulator 768 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_80_out_0_cp_in_7 */
    .offset_start = 36864,
    .offset_end = 37632,
    .offset_limit = 37696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_80_ca_pipe_1_dma_init_out_0_29, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84_suboff_213 output ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_suboff_213_dma_init_out_0_29 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_84_zero_off_out_214 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 16,
    .batch_offset = 512,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 32,
    .frame_tot_cnt = 32,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_84_suboff_213_dma_init_out_0_29, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 73728 */

  static const LL_Switch_InitTypeDef switch_init_in_29[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_80_mul_scale_207 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_off_bias_210 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_suboff_213 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_suboff_213 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=29 */
  LL_Switch_Init(switch_init_in_29, 11);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_29_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_29_all_units, 11);

}

static void LL_ATON_End_EpochBlock_29(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_29[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 IN: in unit=CONV_ACC_V2 0 in port=2 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_ca_pipe_1 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 1, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_80_mul_scale_207 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_80_off_bias_210 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_suboff_213 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_suboff_213 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=29 */
  LL_Switch_Deinit(switch_deinit_in_29, 11);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_29_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_29_all_units, 11);

}


/* scheduling epoch=30   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_84_conv_identity */

static void LL_ATON_Start_EpochBlock_30(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_84_conv_identity */
  /* node=Conv2D_84_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84_conv_identity input ports=0 range=0[0,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_conv_identity_dma_init_in_0_30 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_84_zero_off_out_214_copy_in_14 */
    .offset_start = 0,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 4,
    .fheight = 6,
    .batch_depth = 4,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 12288,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_84_conv_identity_dma_init_in_0_30, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */

  /* Dma output units from cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84_conv_identity output ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_conv_identity_dma_init_out_0_30 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_84_zero_off_out_214_cp_in_14 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 192,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 64,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_84_conv_identity_dma_init_out_0_30, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 12288 */

  static const LL_Switch_InitTypeDef switch_init_in_30[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_conv_identity OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
  };


  /* epoch=30 */
  LL_Switch_Init(switch_init_in_30, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_30_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_30_all_units, 2);

}

static void LL_ATON_End_EpochBlock_30(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_30[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_conv_identity OUT: in unit=STREAM_ENG_V2 9 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
  };


  /* epoch=30 */
  LL_Switch_Deinit(switch_deinit_in_30, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_30_all_units[] = {
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_30_all_units, 2);

}


/* scheduling epoch=31   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_31(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Conv2D_84 */
  static const LL_Convacc_InitTypeDef Conv2D_84_init31 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 3,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 3,
    .raw_o = 0,
    .fWidth = 4,
    .fHeight = 6,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 2,
    .vstride = 2,
    .left_padding = 0,
    .right_padding = 1,
    .top_padding = 0,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 3,
    .top_crop = 0,
    .bot_crop = 5,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Conv2D_84_init31);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_84_mul_scale_216 */
  static const LL_Arithacc_InitTypeDef Conv2D_84_mul_scale_216_init31 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 9,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3573040) /* Equivalent hex address = 0x704e8530UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_84_mul_scale_216_init31);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_84_off_bias_219 */
  static const LL_Arithacc_InitTypeDef Conv2D_84_off_bias_219_init31 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 23623,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3555632) /* Equivalent hex address = 0x704e4130UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_84_off_bias_219_init31);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_87_suboff_222 */
  static const LL_Arithacc_InitTypeDef Conv2D_87_suboff_222_init31 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 512,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_87_suboff_222_init31);


  /* Dma inputs units to cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84 input ports=0 range=0[12288,24576] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_dma_init_in_0_31 = {
    /* 4x6x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_84_zero_off_out_214 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 24640,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 192,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_84_dma_init_in_0_31, 1);

  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_84 input ports=1 range=5[3339744,3376608] */

  static const LL_Streng_TensorInitTypeDef Conv2D_84_dma_init_in_1_31 = {
    /* 512x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_84_weights_inflated_282 */
    .offset_start = 3339744,
    .offset_end = 3376608,
    .offset_limit = 3376672,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_84_dma_init_in_1_31, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 12288 */
  /* octoFlash -> 36864 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87_suboff_222 output ports=0 range=0[6144,9216] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_suboff_222_dma_init_out_0_31 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_87_zero_off_out_223 */
    .offset_start = 6144,
    .offset_limit = 9280,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 8,
    .batch_offset = 512,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 3072,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_87_suboff_222_dma_init_out_0_31, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 3072 */

  static const LL_Switch_InitTypeDef switch_init_in_31[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_mul_scale_216 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_off_bias_219 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_suboff_222 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_suboff_222 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=31 */
  LL_Switch_Init(switch_init_in_31, 6);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_31_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_31_all_units, 7);

}

static void LL_ATON_End_EpochBlock_31(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_31[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_mul_scale_216 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_84_off_bias_219 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_suboff_222 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_suboff_222 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=31 */
  LL_Switch_Deinit(switch_deinit_in_31, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_31_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_31_all_units, 7);

}


/* scheduling epoch=32   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_32(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 12 [CONV_ACC_V2 2] */
  /* kind=Conv node=Conv2D_87 */
  static const LL_Convacc_InitTypeDef Conv2D_87_init32 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 4,
    .afilt_first = 1,
    .afilt_last = 3,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 7,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 7,
    .raw_o = 0,
    .fWidth = 2,
    .fHeight = 3,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 1,
    .top_crop = 0,
    .bot_crop = 2,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(2, &Conv2D_87_init32);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_87_mul_scale_225 */
  static const LL_Arithacc_InitTypeDef Conv2D_87_mul_scale_225_init32 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 6,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_MUL,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 1,
    .C_scalar = 1,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_87_mul_scale_225_init32);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_87_off_bias_228 */
  static const LL_Arithacc_InitTypeDef Conv2D_87_off_bias_228_init32 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 12,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17771,
    .B_scalar = 17771,
    .C_scalar = -32768,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_87_off_bias_228_init32);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_91_suboff_231 */
  static const LL_Arithacc_InitTypeDef Conv2D_91_suboff_231_init32 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_91_suboff_231_init32);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87 input ports=0 range=0[6144,9216] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_dma_init_in_0_32 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_87_zero_off_out_223 */
    .offset_start = 6144,
    .offset_limit = 9280,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 43,
    .batch_offset = 512,
    .frame_offset = 128,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 4,
    .frame_tot_cnt = 256,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_87_dma_init_in_0_32, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87 input ports=1 range=5[1049088,1573632] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_dma_init_in_1_32 = {
    /* 1024x1x1x512(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_87_weights */
    .offset_start = 1049088,
    .offset_end = 1573632,
    .offset_limit = 1573696,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_87_dma_init_in_1_32, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87 input ports=2 range=0[12288,12480] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_dma_init_in_2_32 = {
    /* partial accumulator 192 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 6,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 12544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 256,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_87_dma_init_in_2_32, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87_mul_scale_225 input ports=1 range=5[3508256,3512352] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_mul_scale_225_dma_init_in_1_32 = {
    /* from memory with batch=16
broadcasting with batch iter=3 outer iter=64 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_87_mul_scale_227 */
    .offset_start = 3508256,
    .offset_end = 3508320,
    .offset_limit = 3512416,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 64,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 192,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_87_mul_scale_225_dma_init_in_1_32, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87_off_bias_228 input ports=1 range=5[3512352,3516448] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_off_bias_228_dma_init_in_1_32 = {
    /* from memory with batch=16
broadcasting with batch iter=3 outer iter=64 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_87_off_bias_230 */
    .offset_start = 3512352,
    .offset_end = 3512416,
    .offset_limit = 3516512,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 64,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 192,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_87_off_bias_228_dma_init_in_1_32, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 245760 */
  /* octoFlash -> 532480 */
  /* CACHE -> 16384 */

  /* Dma output units from cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_87 output ports=0 range=0[12288,12480] */

  static const LL_Streng_TensorInitTypeDef Conv2D_87_dma_init_out_0_32 = {
    /* partial accumulator 192 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_87_out_0 */
    .offset_start = 12288,
    .offset_end = 12480,
    .offset_limit = 12544,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 256,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_87_dma_init_out_0_32, 1);

  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_suboff_231 output ports=0 range=0[0,6144] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_suboff_231_dma_init_out_0_32 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_91_zero_off_out_232 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 16,
    .batch_offset = 1024,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_91_suboff_231_dma_init_out_0_32, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 61440 */

  static const LL_Switch_InitTypeDef switch_init_in_32[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 3, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_87_mul_scale_225 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_mul_scale_225 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_off_bias_228 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_off_bias_228 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_suboff_231 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_suboff_231 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=32 */
  LL_Switch_Init(switch_init_in_32, 10);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_32_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_32_all_units, 11);

}

static void LL_ATON_End_EpochBlock_32(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_32[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 2, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 IN: in unit=CONV_ACC_V2 2 in port=2 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87 OUT: in unit=STREAM_ENG_V2 6 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 3, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 2, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_87_mul_scale_225 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_mul_scale_225 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_off_bias_228 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_87_off_bias_228 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_suboff_231 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_suboff_231 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=32 */
  LL_Switch_Deinit(switch_deinit_in_32, 10);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_32_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {CONVACC, 2} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_32_all_units, 11);

}


/* scheduling epoch=33   nodes=1   ------------------------------------------------------------------- */
/* no resources allocated to kind=Identity node=Conv2D_91_conv_identity */

static void LL_ATON_Start_EpochBlock_33(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 28 [NULL_UNIT 0] */
  /* kind=Identity node=Conv2D_91_conv_identity */
  /* node=Conv2D_91_conv_identity satisfies input and output adjacency (DMA->DMA) and can be omitted */

  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_conv_identity input ports=0 range=0[0,6144] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_conv_identity_dma_init_in_0_33 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_91_zero_off_out_232_copy_in_15 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 4,
    .batch_offset = 1024,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 128,
    .frame_tot_cnt = 128,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_91_conv_identity_dma_init_in_0_33, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 6144 */

  /* Dma output units from cycle: */
  /* Unit= 0 [STREAM_ENG_V2 0] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_conv_identity output ports=0 range=0[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_conv_identity_dma_init_out_0_33 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_91_zero_off_out_232_cp_in_15 */
    .offset_start = 6144,
    .offset_end = 6192,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 48,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(0, &Conv2D_91_conv_identity_dma_init_out_0_33, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_33[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_conv_identity OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=33 */
  LL_Switch_Init(switch_init_in_33, 1);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_33_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_33_all_units, 2);

}

static void LL_ATON_End_EpochBlock_33(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_33[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_conv_identity OUT: in unit=STREAM_ENG_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
  };


  /* epoch=33 */
  LL_Switch_Deinit(switch_deinit_in_33, 1);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_33_all_units[] = {
    { {STRENG, 0} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_33_all_units, 2);

}


/* scheduling epoch=34   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_34(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 10 [CONV_ACC_V2 0] */
  /* kind=Conv node=Conv2D_91 */
  static const LL_Convacc_InitTypeDef Conv2D_91_init34 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 0,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 0,
    .dss2mode = 0,
    .kseten = 0,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 4,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 4,
    .raw_o = 0,
    .fWidth = 2,
    .fHeight = 3,
    .kernelWidth = 3,
    .kernelHeight = 3,
    .nKernels = 8,
    .batchDepth = 8,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 1,
    .right_padding = 1,
    .top_padding = 1,
    .bot_padding = 1,
    .left_crop = 0,
    .right_crop = 1,
    .top_crop = 0,
    .bot_crop = 2,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(0, &Conv2D_91_init34);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Mul node=Conv2D_91_mul_scale_234 */
  static const LL_Arithacc_InitTypeDef Conv2D_91_mul_scale_234_init34 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 9,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_MUL,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 1,
    .C_scalar = 1,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Conv2D_91_mul_scale_234_init34);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_91_off_bias_237 */
  static const LL_Arithacc_InitTypeDef Conv2D_91_off_bias_237_init34 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 12,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 28108,
    .B_scalar = 28108,
    .C_scalar = -32768,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_91_off_bias_237_init34);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Sub node=Conv2D_94_suboff_240 */
  static const LL_Arithacc_InitTypeDef Conv2D_94_suboff_240_init34 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_SCALAR,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &Conv2D_94_suboff_240_init34);


  /* Dma inputs units to cycle: */
  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91 input ports=0 range=0[6144,12288] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_dma_init_in_0_34 = {
    /* 2x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_91_zero_off_out_232 */
    .offset_start = 6144,
    .offset_end = 6192,
    .offset_limit = 12352,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 48,
    .frame_loop_cnt = 1,
    .frame_tot_cnt = 128,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_91_dma_init_in_0_34, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91 input ports=1 range=5[3016128,3089856] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_dma_init_in_1_34 = {
    /* 1024x3x3x8(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_91_weights_inflated_284 */
    .offset_start = 3016128,
    .offset_end = 3089856,
    .offset_limit = 3089920,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_91_dma_init_in_1_34, 1);

  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_mul_scale_234 input ports=1 range=5[3516448,3520544] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_mul_scale_234_dma_init_in_1_34 = {
    /* from memory with batch=8
broadcasting with batch iter=3 outer iter=128 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_91_mul_scale_236 */
    .offset_start = 3516448,
    .offset_end = 3516480,
    .offset_limit = 3520608,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 32,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 384,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Conv2D_91_mul_scale_234_dma_init_in_1_34, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_91_off_bias_237 input ports=1 range=5[3520544,3524640] */

  static const LL_Streng_TensorInitTypeDef Conv2D_91_off_bias_237_dma_init_in_1_34 = {
    /* from memory with batch=8
broadcasting with batch iter=3 outer iter=128 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_91_off_bias_239 */
    .offset_start = 3520544,
    .offset_end = 3520576,
    .offset_limit = 3524704,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 32,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 384,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_91_off_bias_237_dma_init_in_1_34, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 6144 */
  /* octoFlash -> 81920 */
  /* CACHE -> 16384 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94_suboff_240 output ports=0 range=0[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_suboff_240_dma_init_out_0_34 = {
    /* to memory canonical from batch=8 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_94_zero_off_out_241 */
    .offset_start = 12288,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 8,
    .batch_offset = 1024,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 128,
    .frame_tot_cnt = 128,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Conv2D_94_suboff_240_dma_init_out_0_34, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 6144 */

  static const LL_Switch_InitTypeDef switch_init_in_34[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_mul_scale_234 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_mul_scale_234 IN: in unit=ARITH_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_off_bias_237 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_off_bias_237 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_suboff_240 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_suboff_240 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=34 */
  LL_Switch_Init(switch_init_in_34, 8);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_34_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_34_all_units, 9);

}

static void LL_ATON_End_EpochBlock_34(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_34[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91 IN: in unit=CONV_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91 IN: in unit=CONV_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_mul_scale_234 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=CONV_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_mul_scale_234 IN: in unit=ARITH_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_off_bias_237 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_91_off_bias_237 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_suboff_240 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_suboff_240 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
  };


  /* epoch=34 */
  LL_Switch_Deinit(switch_deinit_in_34, 8);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_34_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 0} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_34_all_units, 9);

}


/* scheduling epoch=35   nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_35(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 13 [CONV_ACC_V2 3] */
  /* kind=Conv node=Conv2D_94 */
  static const LL_Convacc_InitTypeDef Conv2D_94_init35 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 8,
    .afilt_first = 1,
    .afilt_last = 7,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 7,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 7,
    .raw_o = 0,
    .fWidth = 2,
    .fHeight = 3,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 16,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 1,
    .top_crop = 0,
    .bot_crop = 2,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(3, &Conv2D_94_init35);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Mul node=Conv2D_94_mul_scale_243 */
  static const LL_Arithacc_InitTypeDef Conv2D_94_mul_scale_243_init35 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 7,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_MUL,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 1,
    .C_scalar = 1,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Conv2D_94_mul_scale_243_init35);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Add node=Conv2D_94_off_bias_246 */
  static const LL_Arithacc_InitTypeDef Conv2D_94_off_bias_246_init35 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 1,
    .dualinput = 1,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_NONE,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 12,
    .fWidth = 2,
    .fHeight = 3,
    .fChannels = 1024,
    .batchDepth = 16,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 27512,
    .B_scalar = 27512,
    .C_scalar = -32768,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Conv2D_94_off_bias_246_init35);


  /* Dma inputs units to cycle: */
  /* Unit= 9 [STREAM_ENG_V2 9] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94 input ports=0 range=0[12288,18432] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_dma_init_in_0_35 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_94_zero_off_out_241 */
    .offset_start = 12288,
    .offset_limit = 18496,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 43,
    .batch_offset = 1024,
    .frame_offset = 128,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 512,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(9, &Conv2D_94_dma_init_in_0_35, 1);

  /* Unit= 2 [STREAM_ENG_V2 2] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94 input ports=1 range=5[0,1049088] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_dma_init_in_1_35 = {
    /* 1024x1x1x1024(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_94_weights */
    .offset_start = 0,
    .offset_end = 1049088,
    .offset_limit = 1049152,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(2, &Conv2D_94_dma_init_in_1_35, 1);

  /* Unit= 7 [STREAM_ENG_V2 7] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94 input ports=2 range=0[7168,7360] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_dma_init_in_2_35 = {
    /* partial accumulator 192 (16 bits) */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 1,
    .sync_with_other = 1,
    .nbits_unsigned = 0,
    .sync_dma = 4,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* ATONN_ACCUMULATOR_PORT */
    .offset_start = 7168,
    .offset_end = 7360,
    .offset_limit = 7424,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 512,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(7, &Conv2D_94_dma_init_in_2_35, 1);

  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94_mul_scale_243 input ports=1 range=5[3524640,3528736] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_mul_scale_243_dma_init_in_1_35 = {
    /* from memory with batch=16
broadcasting with batch iter=3 outer iter=64 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_94_mul_scale_245 */
    .offset_start = 3524640,
    .offset_end = 3524704,
    .offset_limit = 3528800,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 64,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 192,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Conv2D_94_mul_scale_243_dma_init_in_1_35, 1);

  /* Unit= 8 [STREAM_ENG_V2 8] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94_off_bias_246 input ports=1 range=5[3504160,3508256] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_off_bias_246_dma_init_in_1_35 = {
    /* from memory with batch=16
broadcasting with batch iter=3 outer iter=64 num_higher_elem=1
spanning across 4096 bytes */
    .dir = 0,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 1,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Conv2D_94_off_bias_248 */
    .offset_start = 3504160,
    .offset_end = 3504224,
    .offset_limit = 3508320,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 64,
    .frame_loop_cnt = 3,
    .frame_tot_cnt = 192,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(8, &Conv2D_94_off_bias_246_dma_init_in_1_35, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 491520 */
  /* octoFlash -> 1056768 */
  /* CACHE -> 16384 */

  /* Dma output units from cycle: */
  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94 output ports=0 range=0[7168,7360] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_dma_init_out_0_35 = {
    /* partial accumulator 192 (16 bits) */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_94_out_0 */
    .offset_start = 7168,
    .offset_end = 7360,
    .offset_limit = 7424,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 512,
    .nbits_in = 16,
    .nbits_out = 16,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Conv2D_94_dma_init_out_0_35, 1);

  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=Conv2D_94_off_bias_246 output ports=0 range=0[0,6144] */

  static const LL_Streng_TensorInitTypeDef Conv2D_94_off_bias_246_dma_init_out_0_35 = {
    /* to memory canonical from batch=16 */
    .dir = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Conv2D_94_off_bias_out_247 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 16,
    .batch_offset = 1024,
    .frame_offset = 16,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 64,
    .frame_tot_cnt = 64,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &Conv2D_94_off_bias_246_dma_init_out_0_35, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 110592 */

  static const LL_Switch_InitTypeDef switch_init_in_35[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 7, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_94_mul_scale_243 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_mul_scale_243 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
  };


  /* epoch=35 */
  LL_Switch_Init(switch_init_in_35, 9);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_35_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_35_all_units, 10);

}

static void LL_ATON_End_EpochBlock_35(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_35[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 9, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=0 out unit=STREAM_ENG_V2 9 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=1 out unit=STREAM_ENG_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 3, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 7, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 IN: in unit=CONV_ACC_V2 3 in port=2 out unit=STREAM_ENG_V2 7 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94 OUT: in unit=STREAM_ENG_V2 4 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 7, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 3, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Conv2D_94_mul_scale_243 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=CONV_ACC_V2 3 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_mul_scale_243 IN: in unit=ARITH_ACC_V2 2 in port=1 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 8, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 IN: in unit=ARITH_ACC_V2 0 in port=1 out unit=STREAM_ENG_V2 8 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Conv2D_94_off_bias_246 OUT: in unit=STREAM_ENG_V2 5 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
  };


  /* epoch=35 */
  LL_Switch_Deinit(switch_deinit_in_35, 9);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_35_all_units[] = {
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
    { {CONVACC, 3} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 2} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
    { {STRENG, 7} }, /* STREAM_ENG_V2 */
    { {STRENG, 8} }, /* STREAM_ENG_V2 */
    { {STRENG, 9} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_35_all_units, 10);

}


/* scheduling epoch=36   nodes=3   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_36(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 22 [POOL_ACC_V2 0] */
  /* kind=AveragePool node=AveragePool_97 */
  static const LL_Poolacc_InitTypeDef AveragePool_97_init36 = {
    .operation = POOL_GAVG,
    .avgnopad = 0,
    .inputX = 2,
    .inputY = 3,
    .outputX = 3,
    .outputY = 4,
    .poolWinX = 0,
    .poolWinY = 0,
    .strideX = 1,
    .strideY = 1,
    .topCrop = 0,
    .bottomCrop = 2,
    .leftCrop = 0,
    .rightCrop = 1,
    .topPad = 0,
    .bottomPad = 0,
    .leftPad = 0,
    .rightPad = 0,
    .batchSize = 8,
    .shift_f = 0,
    .shift_o = 9,
    .dualLine = 1,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .inbytes_f = 1,
    .outbytes_f = 1,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .mulval = 21845,
    .pad_val_en = 0,
    .pad_val = 0,
  };

  /* Unit=POOL_ACC_V2 */
  LL_Poolacc_Init(0, &AveragePool_97_init36);


  /* Unit= 19 [ARITH_ACC_V2 1] */
  /* kind=Add node=RequantizeLinear_inserted_id414 */
  static const LL_Arithacc_InitTypeDef RequantizeLinear_inserted_id414_init36 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_HEIGHT,
    .Ax_shift = 8,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 1,
    .fHeight = 1,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 19737,
    .B_scalar = 6,
    .C_scalar = (short)36000,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(1, &RequantizeLinear_inserted_id414_init36);


  /* Unit= 21 [ARITH_ACC_V2 3] */
  /* kind=Sub node=Gemm_99_conv_4_suboff_249 */
  static const LL_Arithacc_InitTypeDef Gemm_99_conv_4_suboff_249_init36 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 1,
    .outbytes_x = 1,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 1,
    .outbytes_y = 1,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 0,
    .saturation_o = 0,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 14,
    .scalar = 1,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_HEIGHT,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 1,
    .fHeight = 1,
    .fChannels = 1024,
    .batchDepth = 8,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 16384,
    .B_scalar = 32,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {8, 8, 8},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(3, &Gemm_99_conv_4_suboff_249_init36);


  /* Dma inputs units to cycle: */
  /* Unit= 5 [STREAM_ENG_V2 5] */
  /* Emit conf for STREAM_ENG_V2 node=AveragePool_97 input ports=0 range=0[0,6144] */

  static const LL_Streng_TensorInitTypeDef AveragePool_97_dma_init_in_0_36 = {
    /* memory canonical to batch=8 */
    .dir = 0,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Dequantize_96_out_0 */
    .offset_start = 0,
    .offset_limit = 6208,
    .frame_count = 0,
    .fwidth = 2,
    .fheight = 3,
    .batch_depth = 8,
    .batch_offset = 1024,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 6144,
    .frame_loop_cnt = 128,
    .frame_tot_cnt = 128,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(5, &AveragePool_97_dma_init_in_0_36, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 6144 */

  /* Dma output units from cycle: */
  /* Unit= 1 [STREAM_ENG_V2 1] */
  /* Emit conf for STREAM_ENG_V2 node=Gemm_99_conv_4_suboff_249 output ports=0 range=0[6144,7168] */

  static const LL_Streng_TensorInitTypeDef Gemm_99_conv_4_suboff_249_dma_init_out_0_36 = {
    /* to memory with batch=8 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Gemm_99_conv_4_zero_off_out_250 */
    .offset_start = 6144,
    .offset_end = 6152,
    .offset_limit = 7232,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 8,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 128,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(1, &Gemm_99_conv_4_suboff_249_dma_init_out_0_36, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 1024 */

  static const LL_Switch_InitTypeDef switch_init_in_36[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* AveragePool_97 IN: in unit=POOL_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* RequantizeLinear_inserted_id414 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=POOL_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_suboff_249 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_suboff_249 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=36 */
  LL_Switch_Init(switch_init_in_36, 4);

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_36_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {POOL, 0} }, /* POOL_ACC_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_36_all_units, 5);

}

static void LL_ATON_End_EpochBlock_36(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_36[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 5, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* AveragePool_97 IN: in unit=POOL_ACC_V2 0 in port=0 out unit=STREAM_ENG_V2 5 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, POOL, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* RequantizeLinear_inserted_id414 IN: in unit=ARITH_ACC_V2 1 in port=0 out unit=POOL_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_suboff_249 IN: in unit=ARITH_ACC_V2 3 in port=0 out unit=ARITH_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 3, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_suboff_249 OUT: in unit=STREAM_ENG_V2 1 in port=0 out unit=ARITH_ACC_V2 3 out port=0 */
  };


  /* epoch=36 */
  LL_Switch_Deinit(switch_deinit_in_36, 4);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_36_all_units[] = {
    { {STRENG, 1} }, /* STREAM_ENG_V2 */
    { {ARITH, 1} }, /* ARITH_ACC_V2 */
    { {ARITH, 3} }, /* ARITH_ACC_V2 */
    { {POOL, 0} }, /* POOL_ACC_V2 */
    { {STRENG, 5} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_36_all_units, 5);

}


/* scheduling epoch=37   nodes=4   ------------------------------------------------------------------- */

static void LL_ATON_Start_EpochBlock_37(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  /* Unit= 11 [CONV_ACC_V2 1] */
  /* kind=Conv node=Gemm_99_conv_4 */
  static const LL_Convacc_InitTypeDef Gemm_99_conv_4_init37 = {
    .simd = 1,
    .fsub = 0,
    .accumulate = 1,
    .accumulate_gen_first = 1,
    .accumulate_first = 1,
    .afilt_mode = AFILT_MODE_FRAMEZERO,
    .afilt_tot = 8,
    .afilt_first = 1,
    .afilt_last = 7,
    .rounding_f = 0,
    .saturation_f = 0,
    .round_mode_f = 0,
    .f_unsigned = 1,
    .k_unsigned = 0,
    .deepmode = 1,
    .dss2mode = 0,
    .kseten = 3,
    .zfbias = 0,
    .inbytes_f = 1,
    .shift_f = 0,
    .shift_a = 8,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 8,
    .raw_o = 0,
    .fWidth = 1,
    .fHeight = 1,
    .kernelWidth = 1,
    .kernelHeight = 1,
    .nKernels = 10,
    .batchDepth = 128,
    .hstride = 1,
    .vstride = 1,
    .left_padding = 0,
    .right_padding = 0,
    .top_padding = 0,
    .bot_padding = 0,
    .left_crop = 0,
    .right_crop = 0,
    .top_crop = 0,
    .bot_crop = 0,
  };

  /* Unit=CONV_ACC_V2 */
  LL_Convacc_Init(1, &Gemm_99_conv_4_init37);


  /* Unit= 18 [ARITH_ACC_V2 0] */
  /* kind=Mul node=Gemm_99_conv_4_mul_scale_252 */
  static const LL_Arithacc_InitTypeDef Gemm_99_conv_4_mul_scale_252_init37 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 0,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 2,
    .shift_o = 10,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 1,
    .fHeight = 1,
    .fChannels = 10,
    .batchDepth = 10,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 1,
    .B_scalar = 0,
    .C_scalar = 0,
    .A_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580672) /* Equivalent hex address = 0x704ea300UL */},
    .B_vector = {0},
    .C_vector = {0},
    .vec_precision = {16, 16, 16},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(0, &Gemm_99_conv_4_mul_scale_252_init37);


  /* Unit= 20 [ARITH_ACC_V2 2] */
  /* kind=Add node=Gemm_99_conv_4_off_bias_255 */
  static const LL_Arithacc_InitTypeDef Gemm_99_conv_4_off_bias_255_init37 = {
    .rounding_x = 0,
    .saturation_x = 0,
    .round_mode_x = 0,
    .inbytes_x = 2,
    .outbytes_x = 2,
    .shift_x = 0,
    .rounding_y = 0,
    .saturation_y = 0,
    .round_mode_y = 0,
    .inbytes_y = 2,
    .outbytes_y = 2,
    .combinebc = 1,
    .clipout = 0,
    .shift_y = 0,
    .rounding_o = 1,
    .saturation_o = 1,
    .round_mode_o = 1,
    .relu_mode_o = 0,
    .outbytes_o = 1,
    .shift_o = 20,
    .scalar = 0,
    .dualinput = 0,
    .operation = ARITH_AFFINE,
    .bcast = ARITH_BCAST_CHAN,
    .Ax_shift = 0,
    .By_shift = 0,
    .C_shift = 0,
    .fWidth = 1,
    .fHeight = 1,
    .fChannels = 10,
    .batchDepth = 10,
    .clipmin = 0,
    .clipmax = 0,
    .A_scalar = 17033,
    .B_scalar = 0,
    .C_scalar = (short)0,
    .A_vector = {0},
    .B_vector = {0},
    .C_vector = {(unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580624) /* Equivalent hex address = 0x704ea2d0UL */},
    .vec_precision = {16, 16, 32},
  };

  /* Unit=ARITH_ACC_V2 */
  LL_Arithacc_Init(2, &Gemm_99_conv_4_off_bias_255_init37);


  /* Dma inputs units to cycle: */
  /* Unit= 6 [STREAM_ENG_V2 6] */
  /* Emit conf for STREAM_ENG_V2 node=Gemm_99_conv_4 input ports=0 range=0[6144,7168] */

  static const LL_Streng_TensorInitTypeDef Gemm_99_conv_4_dma_init_in_0_37 = {
    .dir = 0,
    .raw_out = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 1,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Gemm_99_conv_4_zero_off_out_250 */
    .offset_start = 6144,
    .offset_limit = 7232,
    .frame_count = 0,
    .fwidth = 1,
    .fheight = 1,
    .batch_depth = 43,
    .batch_offset = 1024,
    .frame_offset = 128,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 8,
    .frame_tot_cnt = 8,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(6, &Gemm_99_conv_4_dma_init_in_0_37, 1);

  /* Unit= 4 [STREAM_ENG_V2 4] */
  /* Emit conf for STREAM_ENG_V2 node=Gemm_99_conv_4 input ports=1 range=5[3462656,3472904] */

  static const LL_Streng_TensorInitTypeDef Gemm_99_conv_4_dma_init_in_1_37 = {
    /* 10x1x1x1024(8 bits) */
    .dir = 0,
    .raw = 1,
    .continuous = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .cacheable = 1,
    .cache_allocate = 0,
    .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */}, /* Gemm_99_weights_transposed_3 */
    .offset_start = 3462656,
    .offset_end = 3472904,
    .offset_limit = 3472968,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 0,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 24,
    .nbits_out = 24,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(4, &Gemm_99_conv_4_dma_init_in_1_37, 1);


  /* Dma input bandwidth from memory pools: */
  /* npuRAM6 -> 1024 */
  /* octoFlash -> 10240 */

  /* Dma output units from cycle: */
  /* Unit= 3 [STREAM_ENG_V2 3] */
  /* Emit conf for STREAM_ENG_V2 node=Gemm_99_conv_4_off_bias_255 output ports=0 range=0[0,10] */

  static const LL_Streng_TensorInitTypeDef Gemm_99_conv_4_off_bias_255_dma_init_out_0_37 = {
    /* to memory with batch=10 */
    .dir = 1,
    .raw = 1,
    .noblk = 0,
    .align_right = 0,
    .nbits_unsigned = 0,
    .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */}, /* Gemm_99_conv_4_off_bias_out_256 */
    .offset_start = 0,
    .offset_end = 10,
    .offset_limit = 80,
    .frame_count = 0,
    .fwidth = 0,
    .fheight = 0,
    .batch_depth = 0,
    .batch_offset = 0,
    .frame_offset = 10,
    .line_offset = 0,
    .loop_offset = 0,
    .frame_loop_cnt = 0,
    .frame_tot_cnt = 1,
    .nbits_in = 8,
    .nbits_out = 8,
  };

  /* Unit=STREAM_ENG_V2 */
  LL_Streng_TensorInit(3, &Gemm_99_conv_4_off_bias_255_dma_init_out_0_37, 1);


  /* Dma output bandwidth to memory pools: */
  /* npuRAM6 <- 10 */

  static const LL_Switch_InitTypeDef switch_init_in_37[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 7, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Gemm_99_conv_4_mul_scale_252 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_off_bias_255 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_off_bias_255 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=37 */
  LL_Switch_Init(switch_init_in_37, 6);

  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache invalidate (only) operation (HW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 32) */
  mcu_cache_invalidate_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) /* Equivalent hex address = 0x34350000UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 32) /* Equivalent hex address = 0x34350020UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

  static LL_ATON_EnableUnits_InitTypeDef Enable_epoch_37_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_EnableUnits_Init(Enable_epoch_37_all_units, 6);

}

static void LL_ATON_End_EpochBlock_37(const void *epoch_block)
{
  LL_ATON_LIB_UNUSED(epoch_block);

  static const LL_Switch_DeinitTypeDef switch_deinit_in_37[] = {
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 6, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=0 out unit=STREAM_ENG_V2 6 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 1), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, STRENG, 4, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=1 out unit=STREAM_ENG_V2 4 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, CONVACC, 1, 2), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4 IN: in unit=CONV_ACC_V2 1 in port=2 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(0) = 0, LL_Switch_Init_Frames(0) = 7, LL_Switch_Init_Source(1) = ATONN_SRCPORT(STRSWITCH, 0, CONVACC, 1, 0), LL_Switch_Init_Context(1) = 1, LL_Switch_Init_Frames(1) = 1, }, /* Gemm_99_conv_4_mul_scale_252 IN: in unit=ARITH_ACC_V2 0 in port=0 out unit=CONV_ACC_V2 1 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 0, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_off_bias_255 IN: in unit=ARITH_ACC_V2 2 in port=0 out unit=ARITH_ACC_V2 0 out port=0 */
    { LL_Switch_Init_Dest() = ATONN_DSTPORT(STRSWITCH, 0, STRENG, 3, 0), LL_Switch_Init_Source(0) = ATONN_SRCPORT(STRSWITCH, 0, ARITH, 2, 0), LL_Switch_Init_Context(0) = 1, LL_Switch_Init_Frames(0) = 0, }, /* Gemm_99_conv_4_off_bias_255 OUT: in unit=STREAM_ENG_V2 3 in port=0 out unit=ARITH_ACC_V2 2 out port=0 */
  };


  /* epoch=37 */
  LL_Switch_Deinit(switch_deinit_in_37, 6);

  static LL_ATON_DisableUnits_InitTypeDef Disable_epoch_37_all_units[] = {
    { {STRENG, 3} }, /* STREAM_ENG_V2 */
    { {CONVACC, 1} }, /* CONV_ACC_V2 */
    { {ARITH, 0} }, /* ARITH_ACC_V2 */
    { {ARITH, 2} }, /* ARITH_ACC_V2 */
    { {STRENG, 4} }, /* STREAM_ENG_V2 */
    { {STRENG, 6} }, /* STREAM_ENG_V2 */
  };


  LL_ATON_DisableUnits_Init(Disable_epoch_37_all_units, 6);

}


/* scheduling epoch=38   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_38(const void *epoch_block)
{
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache invalidate (only) operation for unaligned buffer start or end address (only line) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1152) */
  mcu_cache_invalidate_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1152) /* Equivalent hex address = 0x34350480UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=DequantizeLinear node=DequantizeLinear_inserted_id416 */
  Dequantizelinear_sw_info dequantizelinear1_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 1,
    .general.input.dim.tensor_w = 1,
    .general.input.dim.tensor_c = 10,
    .general.input.dim.num_elem = 10,
    .general.input.stride.b = 10,
    .general.input.stride.h = 10,
    .general.input.stride.w = 1,
    .general.input.stride.c = 1,
    .general.input.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) /* Equivalent hex address = 0x34350000UL */,
    .general.input.format.is_signed = 1,
    /* "is" tensor-related info: */
    .is.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3580704) /* Equivalent hex address = 0x704ea320UL */,
    .is.format.is_signed = 0,
    .is.dim.num_elem = 1,
    /* "izp" tensor-related info: */
    .izp.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x70180000UL + 3581168) /* Equivalent hex address = 0x704ea4f0UL */,
    .izp.format.is_signed = 1,
    .izp.dim.num_elem = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 1,
    .general.output.dim.tensor_w = 1,
    .general.output.dim.tensor_c = 10,
    .general.output.dim.num_elem = 10,
    .general.output.stride.b = 40,
    .general.output.stride.h = 40,
    .general.output.stride.w = 4,
    .general.output.stride.c = 4,
    .general.output.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */,
    .general.output.format.is_signed = 0,
    .general.type = LL_SW_DEQUANTIZELINEAR,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node DequantizeLinear_inserted_id416 mapped on EmbedNets (INTEGER) as DequantizeLinear | Category: Format-Converter */
  ll_sw_forward_dequantizelinear(&dequantizelinear1_sw_info);
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1152) */
  mcu_cache_clean_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1152) /* Equivalent hex address = 0x34350480UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

}


/* scheduling epoch=39   nodes=1   ------------------------------------------------------------------- */

static void LL_ATON_End_EpochBlock_39(const void *epoch_block)
{
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache invalidate (only) operation for unaligned buffer end address (last line) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1056) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) */
  mcu_cache_invalidate_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1056) /* Equivalent hex address = 0x34350420UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

  LL_ATON_LIB_UNUSED(epoch_block);


/* Unit= 27 [PROCESSOR 0] */
/* kind=Softmax node=Softmax_102 */
  Softmax_sw_info softmax2_sw_info = {
    /* "general.input" tensor-related info: */
    .general.input.dim.tensor_b = 1,
    .general.input.dim.tensor_h = 1,
    .general.input.dim.tensor_w = 10,
    .general.input.dim.tensor_c = 1,
    .general.input.dim.num_elem = 10,
    .general.input.stride.b = 40,
    .general.input.stride.h = 40,
    .general.input.stride.w = 4,
    .general.input.stride.c = 4,
    .general.input.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */,
    .general.input.format.is_signed = 0,
    /* "scratch" tensor-related info: */
    .scratch.dim.tensor_b = 1,
    .scratch.dim.tensor_h = 1,
    .scratch.dim.tensor_w = 257,
    .scratch.dim.tensor_c = 1,
    .scratch.dim.num_elem = 257,
    .scratch.stride.b = 1028,
    .scratch.stride.h = 1028,
    .scratch.stride.w = 4,
    .scratch.stride.c = 4,
    .scratch.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) /* Equivalent hex address = 0x34350000UL */,
    .scratch.format.is_signed = 1,
    /* "general.output" tensor-related info: */
    .general.output.dim.tensor_b = 1,
    .general.output.dim.tensor_h = 1,
    .general.output.dim.tensor_w = 10,
    .general.output.dim.tensor_c = 1,
    .general.output.dim.num_elem = 10,
    .general.output.stride.b = 40,
    .general.output.stride.h = 40,
    .general.output.stride.w = 4,
    .general.output.stride.c = 4,
    .general.output.mem.start_offset = (unsigned char *)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1040) /* Equivalent hex address = 0x34350410UL */,
    .general.output.format.is_signed = 1,
    /* Node-specific Hyper-parameters: */
    .axis = 3,
    .general.type = LL_SW_SOFTMAX,
  };

  /* Low Level SW Layer function invocation. This will exploit EmbedNets libs) */
  /* Node Softmax_102 mapped on EmbedNets (FLOAT) as Softmax | Category: Computational */
  ll_sw_forward_softmax(&softmax2_sw_info);
  // Lock MCU cache
  LL_ATON_LOCK_MCU_CACHE();

#if (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)
  /* *** MCU cache clean (only) operation (SW, whole range) *** */
  /*     memory pool: 0 */
  /*     start: (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) */
  /*     end:   (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) */
  mcu_cache_clean_range((uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 0) /* Equivalent hex address = 0x34350000UL */, (uintptr_t)__LL_ATON_LIB_PHYSICAL_TO_VIRTUAL_ADDR(0x34350000UL + 1088) /* Equivalent hex address = 0x34350440UL */);
#endif // (LL_ATON_PLATFORM == LL_ATON_PLAT_STM32N6)

  // Un-lock MCU cache
  LL_ATON_UNLOCK_MCU_CACHE();

}


/* scheduling epoch=40   nodes=1   ------------------------------------------------------------------- */

/* scheduling DONE                 ------------------------------------------------------------------- */

const EpochBlock_ItemTypeDef *LL_ATON_EpochBlockItems_Default(void) {

  static const EpochBlock_ItemTypeDef ll_atonn_rt_epoch_block_array[] = {
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_1,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_hybrid,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 1,
      .last_epoch_num = 1,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_2,
      .end_epoch_block = LL_ATON_End_EpochBlock_2,
      .wait_mask = 0x00000040,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 2,
      .last_epoch_num = 2,
      .in_streng_mask = 0x00000108,
      .out_streng_mask = 0x00000040,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_3,
      .end_epoch_block = LL_ATON_End_EpochBlock_3,
      .wait_mask = 0x00000080,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 3,
      .last_epoch_num = 3,
      .in_streng_mask = 0x00000006,
      .out_streng_mask = 0x00000080,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_4,
      .end_epoch_block = LL_ATON_End_EpochBlock_4,
      .wait_mask = 0x00000002,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 4,
      .last_epoch_num = 4,
      .in_streng_mask = 0x00000021,
      .out_streng_mask = 0x00000002,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_5,
      .end_epoch_block = LL_ATON_End_EpochBlock_5,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 5,
      .last_epoch_num = 5,
      .in_streng_mask = 0x00000044,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_6,
      .end_epoch_block = LL_ATON_End_EpochBlock_6,
      .wait_mask = 0x00000010,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 6,
      .last_epoch_num = 6,
      .in_streng_mask = 0x00000208,
      .out_streng_mask = 0x00000010,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_7,
      .end_epoch_block = LL_ATON_End_EpochBlock_7,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 7,
      .last_epoch_num = 7,
      .in_streng_mask = 0x00000041,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_8,
      .end_epoch_block = LL_ATON_End_EpochBlock_8,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 8,
      .last_epoch_num = 8,
      .in_streng_mask = 0x00000210,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_9,
      .end_epoch_block = LL_ATON_End_EpochBlock_9,
      .wait_mask = 0x00000040,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 9,
      .last_epoch_num = 9,
      .in_streng_mask = 0x00000081,
      .out_streng_mask = 0x00000040,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_10,
      .end_epoch_block = LL_ATON_End_EpochBlock_10,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 10,
      .last_epoch_num = 10,
      .in_streng_mask = 0x00000048,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_11,
      .end_epoch_block = LL_ATON_End_EpochBlock_11,
      .wait_mask = 0x00000100,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 11,
      .last_epoch_num = 11,
      .in_streng_mask = 0x00000005,
      .out_streng_mask = 0x00000100,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_12,
      .end_epoch_block = LL_ATON_End_EpochBlock_12,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 12,
      .last_epoch_num = 12,
      .in_streng_mask = 0x0000004a,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_13,
      .end_epoch_block = LL_ATON_End_EpochBlock_13,
      .wait_mask = 0x00000020,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 13,
      .last_epoch_num = 13,
      .in_streng_mask = 0x00000204,
      .out_streng_mask = 0x00000020,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_14,
      .end_epoch_block = LL_ATON_End_EpochBlock_14,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 14,
      .last_epoch_num = 14,
      .in_streng_mask = 0x00000188,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_15,
      .end_epoch_block = LL_ATON_End_EpochBlock_15,
      .wait_mask = 0x00000040,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 15,
      .last_epoch_num = 15,
      .in_streng_mask = 0x00000008,
      .out_streng_mask = 0x00000040,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_16,
      .end_epoch_block = LL_ATON_End_EpochBlock_16,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 16,
      .last_epoch_num = 16,
      .in_streng_mask = 0x00000030,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_17,
      .end_epoch_block = LL_ATON_End_EpochBlock_17,
      .wait_mask = 0x0000000c,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 17,
      .last_epoch_num = 17,
      .in_streng_mask = 0x00000232,
      .out_streng_mask = 0x0000000c,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_18,
      .end_epoch_block = LL_ATON_End_EpochBlock_18,
      .wait_mask = 0x00000004,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 18,
      .last_epoch_num = 18,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000004,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_19,
      .end_epoch_block = LL_ATON_End_EpochBlock_19,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 19,
      .last_epoch_num = 19,
      .in_streng_mask = 0x00000030,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_20,
      .end_epoch_block = LL_ATON_End_EpochBlock_20,
      .wait_mask = 0x00000220,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 20,
      .last_epoch_num = 20,
      .in_streng_mask = 0x00000158,
      .out_streng_mask = 0x00000220,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_21,
      .end_epoch_block = LL_ATON_End_EpochBlock_21,
      .wait_mask = 0x00000002,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 21,
      .last_epoch_num = 21,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000002,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_22,
      .end_epoch_block = LL_ATON_End_EpochBlock_22,
      .wait_mask = 0x00000020,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 22,
      .last_epoch_num = 22,
      .in_streng_mask = 0x00000104,
      .out_streng_mask = 0x00000020,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_23,
      .end_epoch_block = LL_ATON_End_EpochBlock_23,
      .wait_mask = 0x00000060,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 23,
      .last_epoch_num = 23,
      .in_streng_mask = 0x0000018a,
      .out_streng_mask = 0x00000060,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_24,
      .end_epoch_block = LL_ATON_End_EpochBlock_24,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 24,
      .last_epoch_num = 24,
      .in_streng_mask = 0x00000100,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_25,
      .end_epoch_block = LL_ATON_End_EpochBlock_25,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 25,
      .last_epoch_num = 25,
      .in_streng_mask = 0x00000088,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_26,
      .end_epoch_block = LL_ATON_End_EpochBlock_26,
      .wait_mask = 0x00000003,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 26,
      .last_epoch_num = 26,
      .in_streng_mask = 0x0000028c,
      .out_streng_mask = 0x00000003,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_27,
      .end_epoch_block = LL_ATON_End_EpochBlock_27,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 27,
      .last_epoch_num = 27,
      .in_streng_mask = 0x00000008,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_28,
      .end_epoch_block = LL_ATON_End_EpochBlock_28,
      .wait_mask = 0x00000080,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 28,
      .last_epoch_num = 28,
      .in_streng_mask = 0x00000021,
      .out_streng_mask = 0x00000080,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_29,
      .end_epoch_block = LL_ATON_End_EpochBlock_29,
      .wait_mask = 0x00000018,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 29,
      .last_epoch_num = 29,
      .in_streng_mask = 0x00000226,
      .out_streng_mask = 0x00000018,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_30,
      .end_epoch_block = LL_ATON_End_EpochBlock_30,
      .wait_mask = 0x00000200,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 30,
      .last_epoch_num = 30,
      .in_streng_mask = 0x00000004,
      .out_streng_mask = 0x00000200,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_31,
      .end_epoch_block = LL_ATON_End_EpochBlock_31,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 31,
      .last_epoch_num = 31,
      .in_streng_mask = 0x00000202,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_32,
      .end_epoch_block = LL_ATON_End_EpochBlock_32,
      .wait_mask = 0x00000048,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 32,
      .last_epoch_num = 32,
      .in_streng_mask = 0x000003a4,
      .out_streng_mask = 0x00000048,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_33,
      .end_epoch_block = LL_ATON_End_EpochBlock_33,
      .wait_mask = 0x00000001,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 33,
      .last_epoch_num = 33,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000001,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_34,
      .end_epoch_block = LL_ATON_End_EpochBlock_34,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 34,
      .last_epoch_num = 34,
      .in_streng_mask = 0x00000116,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_35,
      .end_epoch_block = LL_ATON_End_EpochBlock_35,
      .wait_mask = 0x00000030,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 35,
      .last_epoch_num = 35,
      .in_streng_mask = 0x000003c4,
      .out_streng_mask = 0x00000030,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_36,
      .end_epoch_block = LL_ATON_End_EpochBlock_36,
      .wait_mask = 0x00000002,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 36,
      .last_epoch_num = 36,
      .in_streng_mask = 0x00000020,
      .out_streng_mask = 0x00000002,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = LL_ATON_Start_EpochBlock_37,
      .end_epoch_block = LL_ATON_End_EpochBlock_37,
      .wait_mask = 0x00000008,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_hw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 37,
      .last_epoch_num = 37,
      .in_streng_mask = 0x00000050,
      .out_streng_mask = 0x00000008,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_38,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 38,
      .last_epoch_num = 38,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .start_epoch_block = NULL,
      .end_epoch_block = LL_ATON_End_EpochBlock_39,
      .wait_mask = 0x00000000,
      .flags = EpochBlock_Flags_epoch_start | EpochBlock_Flags_epoch_end | EpochBlock_Flags_pure_sw,
#ifdef LL_ATON_EB_DBG_INFO
      .epoch_num = 39,
      .last_epoch_num = 39,
      .in_streng_mask = 0x00000000,
      .out_streng_mask = 0x00000000,
      .estimated_npu_cycles = 0,
      .estimated_tot_cycles = 0,
#endif // LL_ATON_EB_DBG_INFO
    },
    {
      .flags = EpochBlock_Flags_last_eb,
    },
  };


  return ll_atonn_rt_epoch_block_array;
}

const LL_Buffer_InfoTypeDef *LL_ATON_Input_Buffers_Info_Default(void)
{
  static const uint32_t buff_info__shape_1_64_96_1[] = { 1, 96, 1, 64 };
  static const uint32_t buff_info__mem_shape_F_1_64_96_1[] = { 1, 64, 96, 1 };
  static const float buff_info_Input_0_out_0_quant_scale[] = { 0.0305305421352386 };
  static const int16_t buff_info_Input_0_out_0_quant_offset[] = { 33 };
#if LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
  static const uint32_t buff_info__shape_32_1_3_3[] = { 32, 3, 3, 1 };
  static const uint32_t buff_info__mem_shape_F_32_1_3_3[] = { 32, 1, 3, 3 };
  static const float buff_info_Conv2D_3_weights_quant_scale[] = { 0.00626897206529975, 0.0046222978271544, 0.0100087206810713, 0.00517054507508874, 0.00358932092785835, 0.00155779113993049, 0.0135920038446784, 0.00789016112685204, 0.00517411855980754, 0.00507117714732885, 0.00150987925007939, 0.00564915174618363, 0.00947471614927053, 0.00764951016753912, 0.00163400988094509, 0.00420439569279552, 0.00152235582936555, 0.00839320477098227, 0.00202963058836758, 0.00111313490197062, 0.00638923095539212, 0.00867924559861422, 0.0067128068767488, 0.00329195009544492, 0.00755669130012393, 0.0051219966262579, 0.00382484262809157, 0.0140052763745189, 0.00370991439558566, 0.00130085658747703, 0.0111170820891857, 0.00391393760219216 };
  static const int16_t buff_info_Conv2D_3_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_64_32_1_1[] = { 64, 1, 1, 32 };
  static const uint32_t buff_info__mem_shape_F_64_32_1_1[] = { 64, 32, 1, 1 };
  static const float buff_info_Conv2D_10_weights_quant_scale[] = { 0.00562722748145461, 0.00832801964133978, 0.00415196316316724, 0.00585262477397919, 0.00573461595922709, 0.00405091000720859, 0.00657293573021889, 0.005204186309129, 0.00509126018732786, 0.00517529714852571, 0.00453430972993374, 0.00635979929938912, 0.0060672047547996, 0.00477528758347034, 0.00606812676414847, 0.00487526366487145, 0.0081150783225894, 0.0039207749068737, 0.00827221386134624, 0.00469491584226489, 0.00661261798813939, 0.00495399534702301, 0.00396728748455644, 0.00538828084245324, 0.00549903279170394, 0.00545777101069689, 0.00492843799293041, 0.0067694135941565, 0.00477647269144654, 0.00625960761681199, 0.0055371867492795, 0.0054158759303391, 0.00868832971900702, 0.0060040196403861, 0.00460439641028643, 0.00575540866702795, 0.00650021806359291, 0.0038700713776052, 0.00388706335797906, 0.00749730505049229, 0.00529725570231676, 0.00476505700498819, 0.00605395575985312, 0.00845680013298988, 0.00677733169868588, 0.00548348994925618, 0.00935820955783129, 0.00627560447901487, 0.0062874392606318, 0.00670995144173503, 0.00396116590127349, 0.00432475190609694, 0.00428309105336666, 0.00759849697351456, 0.00500470446422696, 0.00651363376528025, 0.00624201912432909, 0.0043207430280745, 0.00448291562497616, 0.0059825237840414, 0.00443126494064927, 0.00810106005519629, 0.00510126352310181, 0.00437597697600722 };
  static const int16_t buff_info_Conv2D_10_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_128_64_1_1[] = { 128, 1, 1, 64 };
  static const uint32_t buff_info__mem_shape_F_128_64_1_1[] = { 128, 64, 1, 1 };
  static const float buff_info_Conv2D_17_weights_quant_scale[] = { 0.00295649748295546, 0.00484178960323334, 0.00577195826917887, 0.00236292439512908, 0.00503820180892944, 0.00341038056649268, 0.00345891295000911, 0.00271302368491888, 0.00436115451157093, 0.00486356811597943, 0.00426245015114546, 0.00274381134659052, 0.00344242248684168, 0.00531062623485923, 0.00441018538549542, 0.00281471386551857, 0.00466712936758995, 0.00251945154741406, 0.00898927543312311, 0.00474657909944654, 0.00405066926032305, 0.00288035348057747, 0.00263422378338873, 0.00583195965737104, 0.00423706509172916, 0.00438118353486061, 0.00495159905403852, 0.0040714587084949, 0.00289736874401569, 0.00287328683771193, 0.00266494182869792, 0.00270361569710076, 0.00359933660365641, 0.00402878923341632, 0.0031438865698874, 0.00445074355229735, 0.00480238627642393, 0.00490131881088018, 0.0038182083517313, 0.00349325267598033, 0.00279143685474992, 0.00388982915319502, 0.00351295107975602, 0.00308870896697044, 0.004775061737746, 0.00524631608277559, 0.00619377754628658, 0.0045825345441699, 0.00336861819960177, 0.00471811601892114, 0.00260016554966569, 0.00409543048590422, 0.00309767690487206, 0.00428005401045084, 0.00340496608987451, 0.00346250925213099, 0.00367293390445411, 0.00479969102889299, 0.00345236854627728, 0.00270732352510095, 0.00384916947223246, 0.00268200878053904, 0.00379324099048972, 0.00409584678709507, 0.00244957651011646, 0.00398023007437587, 0.00323413824662566, 0.00235169567167759, 0.00555854151025414, 0.00313096819445491, 0.00488313194364309, 0.0038647532928735, 0.00570503668859601, 0.0038333295378834, 0.00323229422792792, 0.00254804617725313, 0.00408108718693256, 0.00330300047062337, 0.00249144388362765, 0.00515611981973052, 0.00502776727080345, 0.00431282818317413, 0.00378773920238018, 0.00297962874174118, 0.00339762936346233, 0.00646358029916883, 0.00244737346656621, 0.00358896725811064, 0.00426999013870955, 0.0024636397138238, 0.0050320471636951, 0.00604240596294403, 0.0026381800416857, 0.0036795933265239, 0.00292876944877207, 0.0037990843411535, 0.00361739657819271, 0.00493568787351251, 0.00604721996933222, 0.00364457187242806, 0.00509009789675474, 0.00336664193309844, 0.00330160185694695, 0.0041907369159162, 0.00532449129968882, 0.0037840090226382, 0.00343758263625205, 0.00232433853670955, 0.00244659371674061, 0.00335515174083412, 0.00493389973416924, 0.00351531920023263, 0.00409651361405849, 0.00563671067357063, 0.00303807226009667, 0.00451473286375403, 0.00651145214214921, 0.0047148740850389, 0.00524017959833145, 0.0025336155667901, 0.00387763860635459, 0.00296803493984044, 0.003402917413041, 0.00216013472527266, 0.00286576035432518, 0.00467273220419884, 0.00311535666696727, 0.00357057759538293 };
  static const int16_t buff_info_Conv2D_17_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_128_128_1_1[] = { 128, 1, 1, 128 };
  static const uint32_t buff_info__mem_shape_F_128_128_1_1[] = { 128, 128, 1, 1 };
  static const float buff_info_Conv2D_24_weights_quant_scale[] = { 0.00315357558429241, 0.00263031153008342, 0.00202489062212408, 0.00322324223816395, 0.00251029012724757, 0.00262458645738661, 0.00268010632134974, 0.00296129006892443, 0.00472715869545937, 0.00356559222564101, 0.00267888139933348, 0.00255902600474656, 0.00284527288749814, 0.00384862930513918, 0.00364589295350015, 0.00308887800201774, 0.00287016830407083, 0.00277444231323898, 0.00326992175541818, 0.00283062225207686, 0.00419613439589739, 0.0028910303954035, 0.00280646118335426, 0.00440798932686448, 0.00514747202396393, 0.00244078366085887, 0.00329420412890613, 0.00307501433417201, 0.00209096656180918, 0.00406174594536424, 0.00206745462492108, 0.00270254421047866, 0.00259936694055796, 0.00255235517397523, 0.00353967980481684, 0.00207696715369821, 0.00257785199210048, 0.00338710797950625, 0.0031986441463232, 0.00328385876491666, 0.0041537694633007, 0.00334970746189356, 0.00214014039374888, 0.00298392213881016, 0.00423576775938272, 0.00221712328493595, 0.00216309004463255, 0.00326141435652971, 0.00256359693594277, 0.0030844637658447, 0.00318000069819391, 0.00242756539955735, 0.00344899110496044, 0.00370752881281078, 0.00351346540264785, 0.002447813982144, 0.00294823991134763, 0.0023821210488677, 0.00395725062116981, 0.00243138941004872, 0.00292032328434289, 0.00238288869149983, 0.00294034788385034, 0.00229425309225917, 0.00305647868663073, 0.00309046893380582, 0.00307172397151589, 0.00247296155430377, 0.00289072375744581, 0.0040754028595984, 0.00299835810437799, 0.00431076576933265, 0.00361005309969187, 0.00344427698291838, 0.00341645698063076, 0.00323593756183982, 0.00340608996339142, 0.00226395111531019, 0.00238894112408161, 0.00201731827110052, 0.00289563811384141, 0.00209938851185143, 0.00351582490839064, 0.00353129603900015, 0.00207520672120154, 0.00308654014952481, 0.00308184861205518, 0.00236017047427595, 0.00288161658681929, 0.00315137789584696, 0.00308215455152094, 0.00312437489628792, 0.00227873236872256, 0.00253437319770455, 0.00251838844269514, 0.00248165801167488, 0.00260884780436754, 0.00298756710253656, 0.00322559149935842, 0.00457671191543341, 0.00248601380735636, 0.00310723902657628, 0.00469274632632732, 0.00254300958476961, 0.00280972593463957, 0.00317782303318381, 0.00240446184761822, 0.00199070456437767, 0.00288087804801762, 0.00236437655985355, 0.00220897514373064, 0.00228543067350984, 0.00223077205009758, 0.00389388157054782, 0.00258874474093318, 0.00415413919836283, 0.00228573638014495, 0.002569385105744, 0.00424344837665558, 0.00348601210862398, 0.00254689832217991, 0.00193100690376014, 0.00290106725879014, 0.00210232846438885, 0.00294532207772136, 0.0039154440164566, 0.00279599172063172, 0.00225685001350939 };
  static const int16_t buff_info_Conv2D_24_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_256_128_1_1[] = { 256, 1, 1, 128 };
  static const uint32_t buff_info__mem_shape_F_256_128_1_1[] = { 256, 128, 1, 1 };
  static const float buff_info_Conv2D_31_weights_quant_scale[] = { 0.00201528077013791, 0.00288273300975561, 0.00196698727086186, 0.00495688896626234, 0.00183155201375484, 0.00224979710765183, 0.00250610476359725, 0.00229765917174518, 0.00235354015603662, 0.00319046317599714, 0.0023287502117455, 0.00179980834946036, 0.00281861517578363, 0.00329340971074998, 0.00207509566098452, 0.00205328944139183, 0.0020809827838093, 0.00381144159473479, 0.00284884171560407, 0.0020386939868331, 0.00193375675007701, 0.0017707129009068, 0.00269047543406487, 0.00240791868418455, 0.00210288050584495, 0.00202623172663152, 0.00132969487458467, 0.00256411451846361, 0.00249036494642496, 0.00188673741649836, 0.00172253674827516, 0.00350338709540665, 0.00252336054109037, 0.00226005422882736, 0.00267112324945629, 0.00166901771444827, 0.00243163201957941, 0.00252330582588911, 0.00247819605283439, 0.0020441587548703, 0.00186204875353724, 0.00230086478404701, 0.00216070865280926, 0.00243641762062907, 0.00169568369165063, 0.00313214049674571, 0.00189304049126804, 0.00247492687776685, 0.00227775704115629, 0.00237623136490583, 0.00231591495685279, 0.00218384643085301, 0.00247606728225946, 0.00203462201170623, 0.00238630641251802, 0.00254168477840722, 0.00344357895664871, 0.00470249401405454, 0.00195922097191215, 0.0038481829687953, 0.00221254327334464, 0.00233092275448143, 0.00209471047855914, 0.00273717055097222, 0.00278024096041918, 0.00225112168118358, 0.0018297954229638, 0.00147368165198714, 0.00272392644546926, 0.00203098519705236, 0.00302121252752841, 0.00363591546192765, 0.00322394259274006, 0.00226235063746572, 0.00286107696592808, 0.00289312587119639, 0.00205329852178693, 0.00223947642371058, 0.00205144984647632, 0.00169356272090226, 0.00211694836616516, 0.00257295370101929, 0.00304121593944728, 0.00226264563389122, 0.00218629161827266, 0.0030775882769376, 0.00258843507617712, 0.00232517905533314, 0.00265025021508336, 0.00221163500100374, 0.00275635090656579, 0.00229756976477802, 0.00271291052922606, 0.00289871613495052, 0.00328261661343277, 0.00193942978512496, 0.00268520973622799, 0.0023376455064863, 0.00331077189184725, 0.00376972486265004, 0.00197107018902898, 0.00321690179407597, 0.0032027312554419, 0.00272562052123249, 0.00253147585317492, 0.00262845400720835, 0.00240303250029683, 0.00256257248111069, 0.00252459477633238, 0.00188486790284514, 0.00357435713522136, 0.0022456725127995, 0.00179474882315844, 0.0031023514457047, 0.00176450842991471, 0.00316076981835067, 0.00218575331382453, 0.00225974479690194, 0.00186800002120435, 0.00227758754044771, 0.00211722124367952, 0.00162441155407578, 0.00194908597040921, 0.00221836590208113, 0.00305639812722802, 0.00252181803807616, 0.00225339666940272, 0.00175826949998736, 0.00205556536093354, 0.00235718488693237, 0.00185312086250633, 0.00200791377574205, 0.00168720714282244, 0.00273383245803416, 0.00268727564252913, 0.00308557064272463, 0.00217615906149149, 0.00290461420081556, 0.00268883653916419, 0.00390676269307733, 0.00216325838118792, 0.00175251043401659, 0.00240152259357274, 0.00421968707814813, 0.00268438644707203, 0.00242653884924948, 0.00234961067326367, 0.00234224041923881, 0.00233038770966232, 0.00240013003349304, 0.00260126823559403, 0.0033263168297708, 0.00230975006707013, 0.00273990351706743, 0.00215684622526169, 0.00350097962655127, 0.00307207088917494, 0.00225197616964579, 0.00284272548742592, 0.00165281887166202, 0.00211980519816279, 0.00306043517775834, 0.00236171553842723, 0.00288415397517383, 0.00233277515508235, 0.00184969766996801, 0.00295641389675438, 0.00201449682936072, 0.00251390575431287, 0.00252624927088618, 0.00247268262319267, 0.00233172019943595, 0.00206414796411991, 0.00207769148983061, 0.00247421860694885, 0.00259565934538841, 0.00222787586972117, 0.00192674272693694, 0.00277949124574661, 0.00223582470789552, 0.0024814223870635, 0.00173186650499701, 0.00189318123739213, 0.00276327319443226, 0.00258588884025812, 0.00212837825529277, 0.00267975218594074, 0.00148580479435623, 0.00197596056386828, 0.00177717104088515, 0.00207074452191591, 0.00279643456451595, 0.00194423960056156, 0.00273394864052534, 0.00183266843669116, 0.00359104061499238, 0.00369406607933342, 0.00218677427619696, 0.00227535399608314, 0.00458960933610797, 0.0022985260002315, 0.00230744807049632, 0.00237587536685169, 0.00240498478524387, 0.00198939419351518, 0.00249368813820183, 0.00245747459121048, 0.0019516124157235, 0.00209016725420952, 0.00296937790699303, 0.00219524395652115, 0.00232652458362281, 0.00254884944297373, 0.00281098973937333, 0.00163822423201054, 0.00206983182579279, 0.00224700244143605, 0.00253528007306159, 0.00204165140166879, 0.00238719419576228, 0.00272936536930501, 0.00328488019295037, 0.00237798038870096, 0.00283539923839271, 0.00206784438341856, 0.0023280952591449, 0.00236873491667211, 0.00203633424825966, 0.00235087820328772, 0.00325379311107099, 0.00168892403598875, 0.00244310824200511, 0.00343336793594062, 0.0019273990765214, 0.00269801588729024, 0.00167002948001027, 0.00312959938310087, 0.00224025291390717, 0.00224807811900973, 0.00193295441567898, 0.00200207158923149, 0.00247654411941767, 0.0035401254426688, 0.00202340446412563, 0.00368244270794094, 0.00230352650396526, 0.00221582688391209, 0.00260476698167622, 0.00300121516920626, 0.0030133998952806, 0.00182112224865705, 0.00239077350124717, 0.00248791952617466, 0.00257425359450281, 0.00201537576504052, 0.00207166513428092 };
  static const int16_t buff_info_Conv2D_31_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_256_256_1_1[] = { 256, 1, 1, 256 };
  static const uint32_t buff_info__mem_shape_M_256_256_1_1[] = { 256, 2, 1, 1, 128 };
  static const float buff_info_Conv2D_38_weights_quant_scale[] = { 0.00173901882953942, 0.00181256257928908, 0.00166511465795338, 0.00174282700754702, 0.00253074779175222, 0.00223539141006768, 0.00217419862747192, 0.00191277381964028, 0.00194539537187666, 0.00166779500432312, 0.00232587591744959, 0.00168492319062352, 0.00231045577675104, 0.00173600995913148, 0.0016427175141871, 0.00207957136444747, 0.0017366970423609, 0.00253563304431736, 0.00186537206172943, 0.0022979115601629, 0.00184252089820802, 0.00199307361617684, 0.00217611296102405, 0.00230171182192862, 0.00187199772335589, 0.00201599788852036, 0.00218371651135385, 0.00146625831257552, 0.00191553018521518, 0.00229324749670923, 0.00189579965081066, 0.00138365721795708, 0.00197157659567893, 0.00171632971614599, 0.00197446788661182, 0.0025805423501879, 0.00265075569041073, 0.00201020995154977, 0.00222525955177844, 0.00317115732468665, 0.00208530900999904, 0.00288912863470614, 0.0016403318149969, 0.00203225621953607, 0.00197792774997652, 0.00199207034893334, 0.00264899013563991, 0.00180110463406891, 0.00213284161873162, 0.00321552716195583, 0.0016194973140955, 0.00163379462901503, 0.00235749548301101, 0.00230302452109754, 0.00194710586220026, 0.00189399928785861, 0.00280816433951259, 0.00270972773432732, 0.00179300690069795, 0.00226701935753226, 0.00258767581544816, 0.00204112799838185, 0.003272122470662, 0.00276395957916975, 0.00246991286985576, 0.00275420863181353, 0.00256599276326597, 0.00196118140593171, 0.00192604726180434, 0.00215449230745435, 0.00154703145381063, 0.00242097093723714, 0.00195875437930226, 0.00238596252165735, 0.00208268174901605, 0.00279226689599454, 0.00223221303895116, 0.00198488566093147, 0.00229077506810427, 0.00220632227137685, 0.00186334201134741, 0.00220281491056085, 0.00308577949181199, 0.00239706225693226, 0.00211292831227183, 0.00199115672148764, 0.00236874213442206, 0.00166961259674281, 0.0018815565854311, 0.0029896218329668, 0.00203923624940217, 0.00234970473684371, 0.00204741186462343, 0.00158979173284024, 0.00175010063685477, 0.00273179518990219, 0.00238777627237141, 0.00184309354517609, 0.0014734665164724, 0.00206410349346697, 0.0022812713868916, 0.00177366065327078, 0.00191517383791506, 0.00160589825827628, 0.00175383209716529, 0.00164957600645721, 0.00249259383417666, 0.00225887773558497, 0.00228833383880556, 0.00182447477709502, 0.00207720370963216, 0.00254012015648186, 0.00191567675210536, 0.0018394363578409, 0.0019425981445238, 0.00174073851667345, 0.00218676240183413, 0.00167037756182253, 0.00194094539619982, 0.00214063259772956, 0.00199795956723392, 0.00280456733889878, 0.00233922526240349, 0.00232465169392526, 0.0020143857691437, 0.00258563621900976, 0.00159036600962281, 0.0028238738887012, 0.00228423229418695, 0.00216343766078353, 0.00156715128105134, 0.00192462047562003, 0.00226567802019417, 0.00192617508582771, 0.00193520309403539, 0.00209303945302963, 0.00183364294935018, 0.00200222968123853, 0.00163647497538477, 0.00270739197731018, 0.00161410612054169, 0.00175242882687598, 0.00217416253872216, 0.00221135350875556, 0.00193295662757009, 0.00299974228255451, 0.00205737305805087, 0.00193380226846784, 0.00222514988854527, 0.00182310095988214, 0.00267441268078983, 0.00242184265516698, 0.00297470251098275, 0.00203995988704264, 0.00182639190461487, 0.00296255247667432, 0.00199888460338116, 0.00205933768302202, 0.00238938233815134, 0.0038304440677166, 0.00263491249643266, 0.00198411056771874, 0.00211298931390047, 0.00167851033620536, 0.00223264563828707, 0.00202780496329069, 0.00203827791847289, 0.00212354259565473, 0.00196930975653231, 0.00232797954231501, 0.00220737443305552, 0.00242823944427073, 0.00199605571106076, 0.00157117086928338, 0.00187857495620847, 0.00231650588102639, 0.00245703244581819, 0.00189409009180963, 0.00197627814486623, 0.00247813109308481, 0.00546324299648404, 0.00202939985319972, 0.00200545624829829, 0.00165201083291322, 0.00253250799141824, 0.00271496293134987, 0.00216942676343024, 0.00226786523126066, 0.00228373799473047, 0.00228270911611617, 0.00218817498534918, 0.00232525705359876, 0.00286717992275953, 0.0028193264734, 0.00257835164666176, 0.00171236391179264, 0.00292547815479338, 0.00149605644401163, 0.00216976925730705, 0.00220489362254739, 0.00210258737206459, 0.00138902908656746, 0.00178598461207002, 0.00175930245313793, 0.00192004395648837, 0.00220578373409808, 0.00293446215800941, 0.00174108485225588, 0.00180151034146547, 0.00242426828481257, 0.00211253738962114, 0.00256780022755265, 0.00224750908091664, 0.00166290649212897, 0.00240081246010959, 0.0024342976976186, 0.00176012190058827, 0.00175185210537165, 0.00224336259998381, 0.00150290259625763, 0.00178829091601074, 0.00203690701164305, 0.00189256388694048, 0.00196989229880273, 0.00201282976195216, 0.00303902802988887, 0.00211400305852294, 0.00199526594951749, 0.00284908316098154, 0.00195127387996763, 0.00346351671032608, 0.00282360310666263, 0.00187315151561052, 0.00205110781826079, 0.00276073021814227, 0.0018441992579028, 0.00218542362563312, 0.00226406031288207, 0.00200454518198967, 0.002236153697595, 0.00224586320109665, 0.00162602763157338, 0.00264561828225851, 0.00175973179284483, 0.00189636775758117, 0.00181215500924736, 0.00244869687594473, 0.00183239241596311, 0.00249248859472573, 0.00188447395339608, 0.00246787047944963, 0.00190011132508516, 0.00208766851574183, 0.00201508891768754, 0.00207570963539183, 0.00200412888079882 };
  static const int16_t buff_info_Conv2D_38_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_512_256_1_1[] = { 512, 1, 1, 256 };
  static const uint32_t buff_info__mem_shape_M_512_256_1_1[] = { 512, 2, 1, 1, 128 };
  static const float buff_info_Conv2D_45_weights_quant_scale[] = { 0.002156374277547, 0.00312270480208099, 0.00249686185270548, 0.00184946646913886, 0.00202950462698936, 0.0017297548474744, 0.00173560588154942, 0.00184232031460851, 0.00176202470902354, 0.00206059403717518, 0.00234007951803505, 0.00185438303742558, 0.00145795498974621, 0.00277350982651114, 0.00173413788434118, 0.00173983070999384, 0.00183168903458863, 0.00239410670474172, 0.00173990672919899, 0.00198426493443549, 0.00187221833039075, 0.00173837807960808, 0.00236377259716392, 0.0020864587277174, 0.00127014191821218, 0.00187095475848764, 0.00178188108839095, 0.0023090208414942, 0.00170508306473494, 0.00179893907625228, 0.00204893783666193, 0.00195250462274998, 0.00233917310833931, 0.00231930590234697, 0.00173114752396941, 0.002611800795421, 0.00248448993079364, 0.00230300729162991, 0.00197934568859637, 0.00265229027718306, 0.00199646246619523, 0.00170874467585236, 0.00279879407025874, 0.00192696042358875, 0.00236215023323894, 0.00225124042481184, 0.00186891877092421, 0.00250964588485658, 0.00232493341900408, 0.00187154428567737, 0.00268445466645062, 0.0023604747839272, 0.0020999985281378, 0.00148050230927765, 0.00175588193815202, 0.0027288303244859, 0.00205734372138977, 0.00201927381567657, 0.00205970206297934, 0.00221522198989987, 0.00186206144280732, 0.00267723156139255, 0.00165606033988297, 0.00212702178396285, 0.00158188387285918, 0.00154977606143802, 0.00175451475661248, 0.00133301608730108, 0.00194796884898096, 0.00189141486771405, 0.0023560831323266, 0.00177803100086749, 0.00140232150442898, 0.00237856712192297, 0.00292151561006904, 0.00190736853983253, 0.00197852007113397, 0.00160182651598006, 0.00146906333975494, 0.00216204463504255, 0.00225120782852173, 0.00250333570875227, 0.0018915148684755, 0.00167013017926365, 0.00169645179994404, 0.00226607313379645, 0.00206281198188663, 0.00228390539996326, 0.0027307525742799, 0.00158880394883454, 0.00194512004964054, 0.00161172833759338, 0.0029473970644176, 0.00181127060204744, 0.00316557753831148, 0.00162261945661157, 0.00197305879555643, 0.00224811187945306, 0.00228031724691391, 0.00205427804030478, 0.00206143478862941, 0.00188845198135823, 0.00209961691871285, 0.00203817267902195, 0.0019806323107332, 0.00197808304801583, 0.00213299412280321, 0.00202935305424035, 0.00232920073904097, 0.00242409389466047, 0.0020809390116483, 0.00200463156215847, 0.00175878242589533, 0.00168201269116253, 0.00169828010257334, 0.00206868187524378, 0.00220538210123777, 0.00165083049796522, 0.00221406342461705, 0.00242754770442843, 0.00203541340306401, 0.00211821170523763, 0.00171494646929204, 0.00207653967663646, 0.00203511537984014, 0.00120878499001265, 0.00231133121997118, 0.00211939564906061, 0.00180323224049062, 0.0025011938996613, 0.00204508122988045, 0.00179644837044179, 0.00189353199675679, 0.00181673839688301, 0.002166289370507, 0.00175695412326604, 0.00290885055437684, 0.0016997754573822, 0.00196167919784784, 0.00216919463127851, 0.00313741806894541, 0.0018151521217078, 0.00151756114792079, 0.00232824240811169, 0.00191492936573923, 0.00269099161960185, 0.00190548098180443, 0.00262646237388253, 0.00195418274961412, 0.00176477548666298, 0.00177918188273907, 0.00269880727864802, 0.00259490986354649, 0.00170859869103879, 0.00181274290662259, 0.00203465623781085, 0.00195566029287875, 0.00202756049111485, 0.00210642488673329, 0.00193644932005554, 0.00150945561472327, 0.00168835883960128, 0.00192820245865732, 0.00190719612874091, 0.00251541659235954, 0.0021428691688925, 0.00198281486518681, 0.00217559351585805, 0.00190321204718202, 0.00248885247856379, 0.00220550107769668, 0.00238697021268308, 0.00235967664048076, 0.00187594222370535, 0.00213898695074022, 0.00218551582656801, 0.001736193546094, 0.00249418220482767, 0.00212248298339546, 0.0024724577087909, 0.00199513789266348, 0.00167918123770505, 0.0015473571838811, 0.00257779401727021, 0.00181576190516353, 0.00193396979011595, 0.00178532430436462, 0.00170659541618079, 0.00176519004162401, 0.00203339965082705, 0.00206954265013337, 0.00211148825474083, 0.00248346757143736, 0.00241471244953573, 0.00230654841288924, 0.00194318871945143, 0.00190938345622271, 0.00196157721802592, 0.00189160893205553, 0.00220509222708642, 0.00194547593127936, 0.00224610394798219, 0.00208324263803661, 0.00251464243046939, 0.00270774052478373, 0.00169552082661539, 0.00183528906200081, 0.00198701815679669, 0.00197620945982635, 0.001941779977642, 0.00179705105256289, 0.00179326604120433, 0.00246318196877837, 0.00190348678734154, 0.00166305596940219, 0.00265715876594186, 0.00178174278698862, 0.00256659276783466, 0.00207575224339962, 0.00164458143990487, 0.00210215547122061, 0.00196953397244215, 0.00226020906120539, 0.00239916401915252, 0.00173677259590477, 0.00211266078986228, 0.0015753626357764, 0.00194121163804084, 0.00215339288115501, 0.00212930073030293, 0.00182049174327403, 0.00216908333823085, 0.00203670794144273, 0.00185060128569603, 0.00190322578419, 0.00185256113763899, 0.00182584405411035, 0.00272103329189122, 0.00188516138587147, 0.00186386948917061, 0.00182663078885525, 0.00230798521079123, 0.00174795172642916, 0.00258219824172556, 0.00209290347993374, 0.00182474649045616, 0.00220772996544838, 0.00166990037541837, 0.00188694044481963, 0.00194447499234229, 0.00189125910401344, 0.00212247064337134, 0.00176868657581508, 0.00191272015217692, 0.00192101730499417, 0.00201126234605908, 0.00198722002096474, 0.00247531989589334, 0.00267085153609514, 0.00242839613929391, 0.00200778571888804, 0.0025818629655987, 0.0020030525047332, 0.00244759977795184, 0.00213277712464333, 0.00255312002263963, 0.00188571703620255, 0.00221988628618419, 0.00163610139861703, 0.00190759659744799, 0.00214438373222947, 0.00185404112562537, 0.00347025040537119, 0.00189845601562411, 0.00178053497802466, 0.00203140289522707, 0.00194853090215474, 0.00179175578523427, 0.00195665145292878, 0.00200052885338664, 0.00161395943723619, 0.00200744811445475, 0.00170807389076799, 0.00159162143245339, 0.00223042163997889, 0.00198422838002443, 0.00156886305194348, 0.00184559857007116, 0.00255794334225357, 0.00183887232560664, 0.00171982788015157, 0.00176947691943496, 0.0020076350774616, 0.0022754380479455, 0.00233188015408814, 0.00188301096204668, 0.00259475014172494, 0.00249827490188181, 0.00194278452545404, 0.00209344527684152, 0.0019725221209228, 0.00194249686319381, 0.00186564028263092, 0.00236366270110011, 0.00163308158516884, 0.00173233810346574, 0.00196775048971176, 0.00232445006258786, 0.00184281659312546, 0.00185071513988078, 0.0018996027065441, 0.00188153109047562, 0.00169775227550417, 0.00260862498544157, 0.00185166427399963, 0.00202390528284013, 0.00244472222402692, 0.00233620358631015, 0.00212929584085941, 0.00214718701317906, 0.00179395405575633, 0.00170086789876223, 0.00184540543705225, 0.00164313870482147, 0.00176694511901587, 0.00222458876669407, 0.00179261644370854, 0.00219348794780672, 0.00152797787450254, 0.00184387376066297, 0.00193261064123362, 0.00274638109840453, 0.00180224794894457, 0.00172587623819709, 0.0023636466357857, 0.00164274452254176, 0.00153643300291151, 0.00223750248551369, 0.0023269159719348, 0.00153151887934655, 0.00167654233518988, 0.00154584343545139, 0.00217065378092229, 0.00224659941159189, 0.0027591532561928, 0.00151939503848553, 0.0015274565666914, 0.00191180617548525, 0.00208494998514652, 0.00240993220359087, 0.00201600464060903, 0.00206322711892426, 0.00165318395011127, 0.00186595181003213, 0.00192459544632584, 0.00208487454801798, 0.00221393606625497, 0.00216267025098205, 0.00247740931808949, 0.00165866722818464, 0.00191475136671215, 0.0018475572578609, 0.00279422011226416, 0.00205792556516826, 0.00189490814227611, 0.00218886788934469, 0.00199261284433305, 0.00204246072098613, 0.0018615024164319, 0.00266136694699526, 0.00205619260668755, 0.00218574656173587, 0.00223550340160728, 0.00193069688975811, 0.00238095596432686, 0.0015058076241985, 0.00172328995540738, 0.00178919301833957, 0.0027707009576261, 0.00164659309666604, 0.00193824665620923, 0.00192237901501358, 0.00200469885021448, 0.00198522745631635, 0.00169522955548018, 0.00217834347859025, 0.00195578951388597, 0.00203207624144852, 0.00230965716764331, 0.00152013020124286, 0.00234263855963945, 0.00227708206512034, 0.00183391070459038, 0.00215483410283923, 0.00216851592995226, 0.00152192206587642, 0.0020699230954051, 0.00175582803785801, 0.00166885007638484, 0.00294613768346608, 0.00162208534311503, 0.00160079775378108, 0.00185480795335025, 0.00168370408937335, 0.00195403071120381, 0.00215432653203607, 0.0026767416857183, 0.00159911892842501, 0.00282375304959714, 0.00199643266387284, 0.00214389944449067, 0.00245152949355543, 0.0032611966598779, 0.00210184557363391, 0.00222747214138508, 0.00195778836496174, 0.00189689395483583, 0.00183871819172055, 0.0023871585726738, 0.00258022686466575, 0.00149058515671641, 0.00173046288546175, 0.00200267275795341, 0.00232111033983529, 0.00170119886752218, 0.0024741985835135, 0.00227446225471795, 0.00212440779432654, 0.00165763415861875, 0.00173233961686492, 0.00197840016335249, 0.00207685981877148, 0.00195544632151723, 0.00224813004024327, 0.00193794583901763, 0.0015373817877844, 0.00219601718708873, 0.00221646437421441, 0.00130683602765203, 0.00173751055262983, 0.00219852011650801, 0.0025187514256686, 0.00173475942574441, 0.00214065960608423, 0.00166536751203239, 0.00192404293920845, 0.00196369457989931, 0.00205823103897274, 0.00211401632986963, 0.00194557791110128, 0.00241621327586472, 0.00183549255598336, 0.00171789154410362, 0.00214233039878309, 0.00184482324402779, 0.00187763094436377, 0.0022375846747309, 0.00194550736341625, 0.00184959557373077, 0.00201429170556366, 0.00169291358906776, 0.001785957836546, 0.0016914785373956, 0.00195150205399841, 0.00169667112641037, 0.00229848059825599, 0.00175286957528442, 0.00216899951919913, 0.00227193301543593, 0.00161661102902144, 0.00176538003142923, 0.00178051390685141, 0.00175908242817968, 0.00217915046960115, 0.00238922424614429, 0.00397395109757781, 0.00259755761362612, 0.00210639811120927, 0.00155157339759171, 0.00231267209164798, 0.00176578434184194, 0.0017812717705965, 0.0022756471298635, 0.00219570728950202, 0.00219850218854845, 0.00210277549922466, 0.00181901489850134, 0.00215318892151117, 0.00253828940913081, 0.00183945742901415, 0.00221466482616961, 0.00208366359584033, 0.00235458300448954, 0.00164936506189406, 0.0019705209415406, 0.00180981343146414, 0.00196820334531367, 0.00304698920808733, 0.0021415229421109, 0.00191740866284817, 0.00148132152389735, 0.00157106120605022, 0.00153499329462647, 0.00188887922558933, 0.00223163864575326, 0.00187450111843646, 0.00187928520608693, 0.00193940219469368, 0.00216356501914561, 0.00228531821630895, 0.00210559088736773, 0.00172468542587012 };
  static const int16_t buff_info_Conv2D_45_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_512_512_1_1[] = { 512, 1, 1, 512 };
  static const uint32_t buff_info__mem_shape_M_512_512_1_1[] = { 512, 4, 1, 1, 128 };
  static const float buff_info_Conv2D_52_weights_quant_scale[] = { 0.00155609974171966, 0.0013831474352628, 0.00224945787340403, 0.00171323295217007, 0.00160757661797106, 0.00143090530764312, 0.0019976245239377, 0.00169917847961187, 0.0012675552861765, 0.00127845932729542, 0.0013774037361145, 0.00188370712567121, 0.00175944238435477, 0.00176550494506955, 0.00205619470216334, 0.00155724852811545, 0.00162443611770868, 0.00326557504013181, 0.00151440349873155, 0.00161757017485797, 0.00167425232939422, 0.00131904112640768, 0.0011862872634083, 0.0017879466759041, 0.00164529390167445, 0.00150303181726485, 0.00171171000692993, 0.00229700095951557, 0.002121951431036, 0.00168040592689067, 0.00149047665763646, 0.00135741231497377, 0.00164075288921595, 0.00137128657661378, 0.00132086535450071, 0.00165748700965196, 0.00133288186043501, 0.00157330988440663, 0.00179673440288752, 0.00145290698856115, 0.00164832698646933, 0.00199897866696119, 0.00190345977898687, 0.0016534790629521, 0.00161498319357634, 0.0014778811018914, 0.00145263038575649, 0.00138186488766223, 0.00178915762808174, 0.00144024565815926, 0.00142651027999818, 0.00136389094404876, 0.00161767401732504, 0.00220438838005066, 0.00169660267420113, 0.00141822663135827, 0.00188199593685567, 0.00156321574468166, 0.0016986730042845, 0.0016257333336398, 0.00102409534156322, 0.00147487502545118, 0.00138435140252113, 0.00173980614636093, 0.00116666546091437, 0.00156306091230363, 0.00147346255835146, 0.00176582799758762, 0.00157268880866468, 0.00181715155486017, 0.00246009789407253, 0.00172501162160188, 0.00134494050871581, 0.00143938907422125, 0.00170843221712857, 0.00148339569568634, 0.00150265754200518, 0.00180968281347305, 0.00169351499062032, 0.0019181378884241, 0.00110082607716322, 0.00152461382094771, 0.00185763987246901, 0.00209622993133962, 0.00156075565610081, 0.00130464206449687, 0.00176456430926919, 0.00159683031961322, 0.00124865269754082, 0.00167618994601071, 0.00160928047262132, 0.00123308866750449, 0.00146565050818026, 0.00121854851022363, 0.00170490029267967, 0.00175048958044499, 0.00135833129752427, 0.00123363896273077, 0.00160468835383654, 0.00181929697282612, 0.00140978861600161, 0.00217637955211103, 0.00193066778592765, 0.00181311182677746, 0.00140864425338805, 0.00154587428551167, 0.00149242975749075, 0.0018268033163622, 0.0012813990470022, 0.00152421486563981, 0.00158933352213353, 0.0016561581287533, 0.00177719013299793, 0.00146012951154262, 0.00129664002452046, 0.00135901314206421, 0.00145152199547738, 0.00203082337975502, 0.00224576937034726, 0.00150645361281931, 0.00157737149856985, 0.00157891458366066, 0.002076699398458, 0.0017422727541998, 0.00139807490631938, 0.00160107505507767, 0.00130974990315735, 0.00177774077747017, 0.00171586370561272, 0.00144017382990569, 0.00148200977127999, 0.00200744671747088, 0.00112778542097658, 0.00144811300560832, 0.00189758080523461, 0.00137810292653739, 0.00236686924472451, 0.00139489176217467, 0.00138656026683748, 0.00145567627623677, 0.00112488097511232, 0.00137637089937925, 0.00151696335524321, 0.00140229519456625, 0.00134235981386155, 0.00162698503118008, 0.00178316724486649, 0.001785924192518, 0.00136128615122288, 0.00144402938894928, 0.00209236354567111, 0.00175887893419713, 0.00142575288191438, 0.00174601539038122, 0.00143492454662919, 0.00150959263555706, 0.00146696588490158, 0.00124785909429193, 0.0017631568480283, 0.00122118403669447, 0.00130069022998214, 0.00129712698981166, 0.00134775042533875, 0.00172239192761481, 0.00148255820386112, 0.00151156168431044, 0.00131633691489697, 0.00125531130470335, 0.00135055382270366, 0.00113510806113482, 0.00156691088341177, 0.00158894772175699, 0.00169958511833102, 0.00122974056284875, 0.00144043273758143, 0.00184500473551452, 0.00159889052156359, 0.00134219869505614, 0.00195945496670902, 0.0013568124268204, 0.00178301031701267, 0.00138760090339929, 0.00209830119274557, 0.00133134017232805, 0.00148216879460961, 0.00175478914752603, 0.0014110307674855, 0.00153698481153697, 0.00162043736781925, 0.0019640966784209, 0.00158880488015711, 0.00135749077890068, 0.00206295540556312, 0.00154995534103364, 0.00166275806259364, 0.00179993116762489, 0.00177581363823265, 0.00128573994152248, 0.00139507942367345, 0.00163353071548045, 0.00143384956754744, 0.00177624146454036, 0.00145533587783575, 0.00157430523540825, 0.00134488777257502, 0.0017562685534358, 0.00130782520864159, 0.00180966965854168, 0.00140519964043051, 0.00146155257243663, 0.00182762171607465, 0.00131019006948918, 0.00140884902793914, 0.00111418194137514, 0.00187811278738081, 0.00185533799231052, 0.00136399979237467, 0.00144429306965321, 0.00135225558187813, 0.00186195445712656, 0.00118400948122144, 0.00214425195008516, 0.00116745778359473, 0.00165712181478739, 0.0014087277231738, 0.00148686754982919, 0.00146786135155708, 0.00157297716941684, 0.0018254368333146, 0.00153503136243671, 0.00169333128724247, 0.00230462080799043, 0.00193194637540728, 0.00188250548671931, 0.00138771941419691, 0.00155976414680481, 0.00132084521465003, 0.00204016943462193, 0.00182636163663119, 0.00146628508809954, 0.00178308773320168, 0.00142476835753769, 0.00149427424184978, 0.00167445954866707, 0.00141879916191101, 0.00193469505757093, 0.00148778641596437, 0.00137115956749767, 0.00149388192221522, 0.00114684109576046, 0.00164095626678318, 0.00152672489639372, 0.00157586601562798, 0.00187219528015703, 0.00147527270019054, 0.00202862685546279, 0.00199763220734894, 0.00163039797917008, 0.00152036838699132, 0.00150706118438393, 0.00196950254030526, 0.00175071379635483, 0.00129532534629107, 0.00168370536994189, 0.00123536959290504, 0.00165388081222773, 0.00158658518921584, 0.00169709254987538, 0.00155752943828702, 0.00158480589743704, 0.00178765109740198, 0.00154435122385621, 0.00170421600341797, 0.00151324307080358, 0.00174999050796032, 0.00120059656910598, 0.00144881545566022, 0.00166340637952089, 0.00151455379091203, 0.00116120709571987, 0.00145260128192604, 0.0017443218966946, 0.00173253729008138, 0.0012056224513799, 0.00160769314970821, 0.00148097879718989, 0.00207645259797573, 0.0020024417899549, 0.00184315722435713, 0.0013310955837369, 0.00147207209374756, 0.00162277766503394, 0.00140418054070324, 0.00214003887958825, 0.00149649172089994, 0.00144557317253202, 0.00162240804638714, 0.00217659468762577, 0.0014490281464532, 0.00208954676054418, 0.00192292488645762, 0.0015016287798062, 0.00166207435540855, 0.00147166766691953, 0.00137646519578993, 0.00178413256071508, 0.0015366249717772, 0.00170763477217406, 0.00139146018773317, 0.00147547863889486, 0.00169037689920515, 0.00129180622752756, 0.00116294214967638, 0.00135740451514721, 0.00158143392764032, 0.00193318084347993, 0.0013344461331144, 0.0017190306680277, 0.00122464238665998, 0.00193413079250604, 0.00161681731697172, 0.00179097300861031, 0.00270947953686118, 0.00176505732815713, 0.00135339295957237, 0.00146034534554929, 0.0014668443473056, 0.00205482938326895, 0.00208048149943352, 0.00149284000508487, 0.00149087118916214, 0.00119221140630543, 0.00139833404682577, 0.00141053961124271, 0.00145067158155143, 0.00123809871729463, 0.00150004413444549, 0.00174650445114821, 0.00160342629533261, 0.00155507284216583, 0.00148023886140436, 0.00169044581707567, 0.00132473302073777, 0.00127274647820741, 0.00152277527377009, 0.0014195527182892, 0.00140102533623576, 0.00177134480327368, 0.00167417258489877, 0.0018079032888636, 0.00124795944429934, 0.00145146169234067, 0.0014521679840982, 0.00130343460477889, 0.00224217609502375, 0.0014161285944283, 0.00173679692670703, 0.00140752666629851, 0.00167446455452591, 0.00180097995325923, 0.00175793387461454, 0.00120537937618792, 0.00178559427149594, 0.0013429872924462, 0.0014813591260463, 0.00159225682727993, 0.00151978724170476, 0.00156555592548102, 0.00142876454629004, 0.0015662630321458, 0.00129102682694793, 0.00170133553911, 0.00164942687842995, 0.0016093326266855, 0.00149609299842268, 0.00180953356903046, 0.00158198969438672, 0.00158431858289987, 0.0013838290469721, 0.00184657413046807, 0.00117250101175159, 0.00171075027901679, 0.00166466215159744, 0.00232929061166942, 0.00159090512897819, 0.00163449218962342, 0.00169240240938962, 0.00217218487523496, 0.00192574644461274, 0.00113518291618675, 0.00143950572237372, 0.0014035957865417, 0.00139623554423451, 0.00161330995615572, 0.00160182709805667, 0.00148303271271288, 0.00159733847249299, 0.0018128965748474, 0.00152914959471673, 0.00146671023685485, 0.00125260965432972, 0.00140857801306993, 0.00145424983929843, 0.00192927871830761, 0.00128311081789434, 0.00169918790925294, 0.00196346477605402, 0.00133472669404, 0.00129840325098485, 0.00146257551386952, 0.00168990390375257, 0.00138427328784019, 0.00153315113857388, 0.00150512484833598, 0.00204414851032197, 0.00170932954642922, 0.00204263022169471, 0.00169751199427992, 0.00158244476187974, 0.00165062875021249, 0.00132239423692226, 0.00163699837867171, 0.00176620972342789, 0.00222603278234601, 0.00137041823472828, 0.00171322864480317, 0.00118605559691787, 0.00134092848747969, 0.00126383791211993, 0.00135661603417248, 0.00140865542925894, 0.00145941867958754, 0.00213387259282172, 0.00165761599782854, 0.00149540277197957, 0.00168356602080166, 0.00237690890207887, 0.00185496057383716, 0.00160926731768996, 0.00116936338599771, 0.00145636091474444, 0.00149449019227177, 0.00169768498744816, 0.00186510861385614, 0.0017448659054935, 0.0022930905688554, 0.001506143133156, 0.00148622319102287, 0.00141744443681091, 0.00161095231305808, 0.00120596133638173, 0.0017182530136779, 0.00184877763967961, 0.00177628779783845, 0.00120319705456495, 0.00195570033974946, 0.00162074214313179, 0.00199964386411011, 0.00136822077911347, 0.00130959379021078, 0.00198704353533685, 0.00125743157695979, 0.00192668661475182, 0.00192369963042438, 0.00133075239136815, 0.00147316080983728, 0.00155585166066885, 0.00138589809648693, 0.00171022291760892, 0.00160620280075818, 0.00135411869268864, 0.00124583556316793, 0.00144680798985064, 0.00165376008953899, 0.00210326607339084, 0.00183177611324936, 0.00165879249107093, 0.00165980716701597, 0.00192533573135734, 0.00157471757847816, 0.00149508018512279, 0.00211957818828523, 0.00175543630030006, 0.00173384451773018, 0.00116002024151385, 0.00177767698187381, 0.00136725523043424, 0.00139057182241231, 0.00160627043806016, 0.00158241158351302, 0.00128076726105064, 0.0023048494476825, 0.00135113124269992, 0.00134790653828532, 0.00127258885186166, 0.00171153398696333, 0.00148477486800402, 0.00158749439287931, 0.00140107527840883, 0.00120339123532176, 0.00142185494769365, 0.00205114739947021, 0.00208307965658605, 0.00157824787311256, 0.0015464152675122, 0.00152455200441182, 0.00136707711499184, 0.0019906593952328, 0.00165120442397892, 0.00156299187801778, 0.0015761605463922, 0.00169254699721932 };
  static const int16_t buff_info_Conv2D_52_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_59_weights_quant_scale[] = { 0.00157305842731148, 0.00179404742084444, 0.00169046223163605, 0.00166916206944734, 0.0016621466493234, 0.00136497139465064, 0.0014439671067521, 0.00148243654984981, 0.00190366909373552, 0.00169632048346102, 0.00198932061903179, 0.00163735600654036, 0.00196828995831311, 0.00183490919880569, 0.00176200375426561, 0.00183490256313235, 0.00165601063054055, 0.0023802372161299, 0.00198692386038601, 0.00167916540522128, 0.00223349127918482, 0.00165914138779044, 0.00134299136698246, 0.00162116752471775, 0.00186109927017242, 0.00154654704965651, 0.00167790008708835, 0.00147370353806764, 0.00159322074614465, 0.0015716883353889, 0.00206622248515487, 0.00160131836310029, 0.00165004096925259, 0.00150291190948337, 0.00134248146787286, 0.0017026518471539, 0.00179493159521371, 0.00171579176094383, 0.00160403724294156, 0.00160384189803153, 0.00156108394730836, 0.00172995880711824, 0.00150979636237025, 0.00175980583298951, 0.00183189415838569, 0.00142849166877568, 0.00149628345388919, 0.00144468701910228, 0.00156292866449803, 0.00183044595178217, 0.00170959485694766, 0.00178456678986549, 0.0019953188020736, 0.00159546639770269, 0.00180569663643837, 0.00163707335013896, 0.00210306723602116, 0.00159620540216565, 0.00150478933937848, 0.00193421915173531, 0.00195408915169537, 0.00132237048819661, 0.00204859953373671, 0.00160201964899898, 0.00152138434350491, 0.00160084350500256, 0.00139501201920211, 0.00166521652135998, 0.00134593190159649, 0.00225421669892967, 0.00153580249752849, 0.00188177439849824, 0.00144848681520671, 0.00175777613185346, 0.00142560945823789, 0.00140478077810258, 0.00216629030182958, 0.00215279660187662, 0.00138653279282153, 0.00181667483411729, 0.00173160678241402, 0.0015584189677611, 0.00208147591911256, 0.00143382011447102, 0.00218003359623253, 0.00117263372521847, 0.00157969899009913, 0.00154881435446441, 0.00182696501724422, 0.0014734094729647, 0.00155827426351607, 0.00156803883146495, 0.00148368091322482, 0.00142217369284481, 0.00154536275658756, 0.0015187521930784, 0.00181509228423238, 0.00135018129367381, 0.00145180651452392, 0.00174513715319335, 0.00172385212499648, 0.00163919618353248, 0.00184602674562484, 0.0014888474252075, 0.00168174447026104, 0.00166576995979995, 0.00136796105653048, 0.00187146256212145, 0.00141766155138612, 0.00186620582826436, 0.00195508496835828, 0.001597173162736, 0.00157864554785192, 0.00152641697786748, 0.00182574905920774, 0.00212566438131034, 0.00142202957067639, 0.00176402379292995, 0.0013724488671869, 0.00181164417881519, 0.00149110378697515, 0.00207344559021294, 0.00212416029535234, 0.00172129552811384, 0.00173934968188405, 0.00131180603057146, 0.00155931746121496, 0.00151257333345711, 0.00191079406067729, 0.00167022924870253, 0.00202981382608414, 0.00146951875649393, 0.00160572037566453, 0.00165233202278614, 0.00170755630824715, 0.00158222415484488, 0.00183507322799414, 0.00185176345985383, 0.00136201572604477, 0.00128432246856391, 0.00160885869991034, 0.00209456775337458, 0.00120150437578559, 0.00167310307733715, 0.00223407056182623, 0.00153976038563997, 0.00198629102669656, 0.00149665598291904, 0.0021706148982048, 0.00143361696973443, 0.00142276997212321, 0.00143631256651133, 0.00152112694922835, 0.000965958286542445, 0.00153634685557336, 0.00243895454332232, 0.00204033055342734, 0.00166737218387425, 0.00203790189698339, 0.00159922463353723, 0.0017843326786533, 0.00130786816589534, 0.0020172162912786, 0.00119657989125699, 0.00139755464624614, 0.00168267195113003, 0.00177130242809653, 0.00163311720825732, 0.00133293040562421, 0.00151831447146833, 0.001379061373882, 0.00170821626670659, 0.00146005558781326, 0.00147422275040299, 0.00231032888405025, 0.00236167130060494, 0.00160902773495764, 0.00183392560575157, 0.00185931194573641, 0.00163321592845023, 0.00185404892545193, 0.00174875871744007, 0.00192907440941781, 0.00164544128347188, 0.0017610089853406, 0.00154931272845715, 0.00152401404920965, 0.0016235220246017, 0.00158735178411007, 0.00200308277271688, 0.00176209735218436, 0.00153466151095927, 0.00146791560109705, 0.00211169756948948, 0.00148185133002698, 0.00134376541245729, 0.00151130009908229, 0.00162007962353528, 0.00140829407609999, 0.00192525947932154, 0.00132955564185977, 0.00161186628974974, 0.00135053182020783, 0.00145917199552059, 0.00138150714337826, 0.0017224611947313, 0.00208580587059259, 0.00195125304162502, 0.00189341639634222, 0.00187064835336059, 0.00150958565063775, 0.00168398080859333, 0.00158915284555405, 0.00173537363298237, 0.00183738593477756, 0.00148248102050275, 0.00147489970549941, 0.00175676506478339, 0.00189035153016448, 0.0017860735533759, 0.00156834698282182, 0.00165673799347132, 0.00222797645255923, 0.00128535518888384, 0.00147637561894953, 0.0023955344222486, 0.00136977422516793, 0.00209350767545402, 0.00181019294541329, 0.00202334439381957, 0.00155942048877478, 0.00227624783292413, 0.00191350746899843, 0.00186144898179919, 0.00138922547921538, 0.00141829042695463, 0.00154497369658202, 0.00212288252077997, 0.00168079463765025, 0.00160278426483274, 0.00175546144600958, 0.00196041935123503, 0.00174579070881009, 0.00154878478497267, 0.00181819731369615, 0.00192953075747937, 0.00211767735891044, 0.00131235073786229, 0.00150733802001923, 0.00163400638848543, 0.00249303062446415, 0.00130559410899878, 0.00165532762184739, 0.00162002618890256, 0.00173734535928816, 0.00236418377608061, 0.0020409740973264, 0.00136470748111606, 0.00153633672744036, 0.00207891431637108, 0.00164891057647765, 0.00188237021211535, 0.0012259065406397, 0.00159546465147287, 0.00157754716929048, 0.00176273216493428, 0.00213871989399195, 0.00176091399043798, 0.00186860968824476, 0.00170533207710832, 0.00167045136913657, 0.00172388006467372, 0.00205166079103947, 0.00154090696014464, 0.00130776059813797, 0.00151313818059862, 0.00171425845474005, 0.00132591964211315, 0.00216349447146058, 0.0015847614267841, 0.00148680887650698, 0.00175892317201942, 0.00164314394351095, 0.001931854756549, 0.00163839140441269, 0.00211589667014778, 0.00147377070970833, 0.00158813036978245, 0.00143871502950788, 0.00184288097079843, 0.00155988719779998, 0.0015749066369608, 0.00176162447314709, 0.0018403404392302, 0.00131528300698847, 0.00204578367993236, 0.0018659345805645, 0.0015621033962816, 0.00159098394215107, 0.00200018682517111, 0.00170013390015811, 0.00140935834497213, 0.00158970209304243, 0.0015877439873293, 0.00143084372393787, 0.00139895791653544, 0.00161336944438517, 0.00178543361835182, 0.00138711335603148, 0.00144855980761349, 0.00210707075893879, 0.00185712624806911, 0.00171390676405281, 0.00191321095917374, 0.00163789943326265, 0.00194393272977322, 0.0014486035797745, 0.00198712921701372, 0.00121146836318076, 0.00188958272337914, 0.00145368347875774, 0.00163895264267921, 0.00133946014102548, 0.00140347518026829, 0.00141677085775882, 0.00208407803438604, 0.00181697926018387, 0.00198027584701777, 0.00165778736118227, 0.00146660127211362, 0.0013639263343066, 0.00138470635283738, 0.00176049361471087, 0.00152969127520919, 0.00162371515762061, 0.00197226810269058, 0.00172802980523556, 0.00163675751537085, 0.00182853639125824, 0.00170030526351184, 0.00120447063818574, 0.00149805250111967, 0.00172819010913372, 0.00211863894946873, 0.00138108804821968, 0.00185541296377778, 0.00155452894978225, 0.00156112993136048, 0.00148817058652639, 0.00151537335477769, 0.00145908759441227, 0.00171380792744458, 0.00204994832165539, 0.0021302024833858, 0.001637491164729, 0.00133079348597676, 0.0021850592456758, 0.00163744518067688, 0.00155261461623013, 0.00221482664346695, 0.00157960248179734, 0.00151484762318432, 0.00199232832528651, 0.00135028921067715, 0.00178965635132045, 0.0022489819675684, 0.00126253755297512, 0.00191967585124075, 0.00176471704617143, 0.00159627362154424, 0.00179632438812405, 0.00174958794377744, 0.00145942938979715, 0.00140272872522473, 0.00173171272035688, 0.00139131164178252, 0.0015069677028805, 0.00147007312625647, 0.0018200958147645, 0.00167065858840942, 0.00170585769228637, 0.00140564900357276, 0.00180197937879711, 0.0014052331680432, 0.00170314975548536, 0.00149476027581841, 0.0013450663536787, 0.00169660383835435, 0.00166238588280976, 0.00180516589898616, 0.00161663733888417, 0.00177830015309155, 0.00150382216088474, 0.00145912659354508, 0.00190061586908996, 0.00129111320711672, 0.00138543546199799, 0.00176471762824804, 0.00164993375074118, 0.00135784968733788, 0.00139933975879103, 0.00171082455199212, 0.00155536981765181, 0.00177996419370174, 0.0017931085312739, 0.00150351214688271, 0.00159219396300614, 0.00226813484914601, 0.00193963991478086, 0.00148520467337221, 0.00173118629027158, 0.00189744296949357, 0.00167905702255666, 0.00168309186119586, 0.00170598854310811, 0.00208173040300608, 0.0015587592497468, 0.0013830695534125, 0.00211227242834866, 0.00176029501017183, 0.00160329753998667, 0.00144430936779827, 0.00150957820005715, 0.00166098866611719, 0.00168128125369549, 0.00177570281084627, 0.00137505342718214, 0.00161231297533959, 0.00192461640108377, 0.00154120498336852, 0.00156951800454408, 0.00192231545224786, 0.00144111190456897, 0.00176715175621212, 0.00182050501462072, 0.00175995228346437, 0.00188884150702506, 0.00163941166829318, 0.0013178059598431, 0.00179317675065249, 0.00147848878987134, 0.00157220428809524, 0.00193974399007857, 0.00182243064045906, 0.00136494042817503, 0.00129319273401052, 0.00150873442180455, 0.00149957102257758, 0.00145552097819746, 0.00160184444393963, 0.00174696813337505, 0.0020357605535537, 0.00189970340579748, 0.001492865732871, 0.00134701782371849, 0.0017118186224252, 0.00161452684551477, 0.00141528516542166, 0.0025676884688437, 0.00168202829081565, 0.00171265623066574, 0.00128978595603257, 0.00209574704058468, 0.00139040092471987, 0.0017565373564139, 0.00181911943946034, 0.00136631284840405, 0.00222867075353861, 0.00165398791432381, 0.00163396715652198, 0.00164975109510124, 0.00243280665017664, 0.00135397852864116, 0.00160968385171145, 0.00118756911251694, 0.00166854355484247, 0.00174154574051499, 0.00157258892431855, 0.00167539261747152, 0.00162896339315921, 0.00140428019221872, 0.00180464400909841, 0.00177083082962781, 0.00145110068842769, 0.00136158475652337, 0.00160884065553546, 0.0015071015805006, 0.00159067183267325, 0.00166156841441989, 0.00149435875937343, 0.0018675661412999, 0.00183905416633934, 0.00155943050049245, 0.00141444383189082, 0.00202386011369526, 0.00152870139572769, 0.00189707474783063, 0.00133065937552601, 0.00163651292677969, 0.00162749644368887, 0.00242108525708318, 0.00160940922796726, 0.0018762102117762, 0.00168525543995202, 0.00159908970817924, 0.00199047476053238, 0.00158549041952938, 0.00137630430981517, 0.00184482801705599, 0.00202854606322944, 0.0017332574352622, 0.00192714773584157 };
  static const int16_t buff_info_Conv2D_59_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_66_weights_quant_scale[] = { 0.0012981885811314, 0.00239438493736088, 0.00152626959607005, 0.00140156561974436, 0.00183545181062073, 0.00156323472037911, 0.00180042430292815, 0.0016223544953391, 0.00158575118985027, 0.00123268621973693, 0.00154657964594662, 0.00155130459461361, 0.00196608528494835, 0.00157375785056502, 0.00163355935364962, 0.00167958135716617, 0.00166810187511146, 0.00190848251804709, 0.00162821041885763, 0.00135431031230837, 0.00138592545408756, 0.00178931036498398, 0.00149928161408752, 0.00187290750909597, 0.00168504437897354, 0.00146248482633382, 0.00175853399559855, 0.00184318004176021, 0.00149918650276959, 0.00180360593367368, 0.00175188004504889, 0.00179602135904133, 0.00163693935610354, 0.00190672604367137, 0.00180890061892569, 0.00207973644137383, 0.00156142632476985, 0.00220586871728301, 0.00121758633758873, 0.00156787107698619, 0.00226559699513018, 0.00169116887263954, 0.00145514460746199, 0.00124126777518541, 0.00178303255233914, 0.00167290377430618, 0.00155815214384347, 0.00148481468204409, 0.0022587445564568, 0.00148001138586551, 0.00205848459154367, 0.00192515389062464, 0.0017385637620464, 0.00126918987371027, 0.00119821622502059, 0.00145028240513057, 0.00197134097106755, 0.00151423527859151, 0.00190327875316143, 0.00144690449815243, 0.00147373101208359, 0.00130826234817505, 0.00219979835674167, 0.00166810385417193, 0.0016546257538721, 0.00205053179524839, 0.00162706803530455, 0.00144348538015038, 0.00154934893362224, 0.00160133861936629, 0.00175153627060354, 0.00167858984787017, 0.00142947735730559, 0.00153113121632487, 0.00171944021712989, 0.00219390913844109, 0.00179454148747027, 0.00178683164995164, 0.0014902075054124, 0.00148407591041178, 0.00145367695949972, 0.00149090948980302, 0.00169713434297591, 0.00165303586982191, 0.00159429421182722, 0.00212508789263666, 0.00135848578065634, 0.00247105164453387, 0.00133298942819238, 0.00205033225938678, 0.00159664067905396, 0.00196740147657692, 0.00206434656865895, 0.0015892576193437, 0.00162077008280903, 0.00198452197946608, 0.00164003716781735, 0.001838079537265, 0.00138146604876965, 0.00160996103659272, 0.00181078677996993, 0.00150261423550546, 0.00126181927043945, 0.00138680683448911, 0.00175512011628598, 0.00170754420105368, 0.00133216578979045, 0.00175217154901475, 0.00164760265033692, 0.00190125009976327, 0.00129827542696148, 0.00160743191372603, 0.00146289833355695, 0.00175071833655238, 0.00126726098824292, 0.00183608068618923, 0.00127659598365426, 0.00180495891254395, 0.00143206212669611, 0.00158636295236647, 0.0015930604422465, 0.00178276363294572, 0.00145160756073892, 0.00169679464306682, 0.0021487872581929, 0.00193470763042569, 0.00135666714049876, 0.0015190796693787, 0.00171102653257549, 0.00160805019550025, 0.00266829738393426, 0.00300515978597105, 0.00164101202972233, 0.00269204494543374, 0.00185795547440648, 0.00159376615192741, 0.00162024004384875, 0.00165197136811912, 0.00211896537803113, 0.00174362666439265, 0.00198241230100393, 0.00127518910448998, 0.00154691818170249, 0.00166443991474807, 0.00168208696413785, 0.00183623575139791, 0.00141206604894251, 0.00211712904274464, 0.00163823610637337, 0.00160733121447265, 0.00130502006504685, 0.00199585827067494, 0.00243315752595663, 0.00136602064594626, 0.00290789571590722, 0.0014455335913226, 0.00157018378376961, 0.0014899306697771, 0.00158149609342217, 0.00159138650633395, 0.00160920352209359, 0.00171016668900847, 0.00136891379952431, 0.00236913212575018, 0.00133234995882958, 0.0013099170755595, 0.00181501696351916, 0.0016825859202072, 0.00147452903911471, 0.00122779933735728, 0.00195088144391775, 0.00146282208152115, 0.00160081556532532, 0.00133919774089009, 0.00164799077901989, 0.00174985162448138, 0.00141049607191235, 0.00158848089631647, 0.00182554742787033, 0.00148599478416145, 0.00135418632999063, 0.00184450892265886, 0.00123044394422323, 0.00169064768124372, 0.00155404722318053, 0.00186952366493642, 0.00150423462036997, 0.00128693145234138, 0.00137920712586492, 0.00172532827127725, 0.00144343182910234, 0.00148264819290489, 0.00130053597968072, 0.00162951636593789, 0.00119206972885877, 0.00123919639736414, 0.00170843151863664, 0.00176801579073071, 0.00133051618468016, 0.00134371570311487, 0.0017385488608852, 0.00162023969460279, 0.00159056845586747, 0.00160034094005823, 0.00191110349260271, 0.0015411990461871, 0.00128616206347942, 0.00149709836114198, 0.00182047998532653, 0.00178740057162941, 0.00141399819403887, 0.00130856991745532, 0.00189203093759716, 0.00155695166904479, 0.00138479005545378, 0.0015609523979947, 0.00150472123641521, 0.00163084827363491, 0.00282357190735638, 0.0013860248727724, 0.00172994763124734, 0.00216283230111003, 0.00140635308343917, 0.00190335011575371, 0.00293445959687233, 0.00208911579102278, 0.00152485480066389, 0.00160068017430604, 0.00138062203768641, 0.00179870380088687, 0.00146003277041018, 0.00149381498340517, 0.00184672977775335, 0.0013503081863746, 0.0013932881411165, 0.00187210342846811, 0.00169513293076307, 0.00286173331551254, 0.00210469891317189, 0.00196185451932251, 0.00240249536000192, 0.00128979433793575, 0.00167527771554887, 0.00173759961035103, 0.00157555798068643, 0.00187917344737798, 0.00169369205832481, 0.00131223967764527, 0.00151646381709725, 0.00170459679793566, 0.00171613227576017, 0.00156843871809542, 0.00163565203547478, 0.00182932335883379, 0.00160617590881884, 0.00151635939255357, 0.00172688078600913, 0.00158601440489292, 0.00197632587514818, 0.00152919231913984, 0.00154934136662632, 0.00182672613300383, 0.00120356807019562, 0.00157195376232266, 0.00167938810773194, 0.00180960574653, 0.00147064891643822, 0.00160326668992639, 0.0015019002603367, 0.00164094637148082, 0.0029270036611706, 0.00174839666578919, 0.0025145944673568, 0.00157125492114574, 0.00148257671389729, 0.00171417801175267, 0.00174212025012821, 0.00131066096946597, 0.00192362756934017, 0.00124336953740567, 0.00132631044834852, 0.00136398093309253, 0.00123984448146075, 0.00155558146070689, 0.00248455628752708, 0.00216225883923471, 0.00175365153700113, 0.00191434263251722, 0.00206463877111673, 0.00162733625620604, 0.00152814830653369, 0.00187411450315267, 0.0017220564186573, 0.00139960553497076, 0.00147069804370403, 0.00149682280607522, 0.00123155675828457, 0.00177989213261753, 0.00243995198979974, 0.00198441906832159, 0.00153302762191743, 0.00150559016037732, 0.00135385023895651, 0.00190749322064221, 0.00176215509418398, 0.00161516852676868, 0.00165243179071695, 0.00152247282676399, 0.00126572092995048, 0.00154509081039578, 0.00163606426212937, 0.00139716442208737, 0.00176141271367669, 0.00153334171045572, 0.00179839145857841, 0.0016774944961071, 0.00229023513384163, 0.00145919714123011, 0.00170167034957558, 0.00182441843207926, 0.00176888226997107, 0.00311400997452438, 0.00161527539603412, 0.00205068429931998, 0.00205040280707181, 0.00113173690624535, 0.00180173548869789, 0.00160675868391991, 0.00152313953731209, 0.00205520330928266, 0.00162264576647431, 0.0015197170432657, 0.00127276848070323, 0.00159715290647, 0.00180246797390282, 0.00154661666601896, 0.00138254615012556, 0.00176464044488966, 0.00158893037587404, 0.00140876381192356, 0.00190602487418801, 0.00170548690948635, 0.00171134271658957, 0.00218399381265044, 0.00154764635954052, 0.00151733704842627, 0.00164493266493082, 0.00176998530514538, 0.0019200328970328, 0.00170674384571612, 0.00153827329631895, 0.00176385743543506, 0.00257334671914577, 0.00170871231239289, 0.0017229279037565, 0.00104951288085431, 0.00145342061296105, 0.00183552829548717, 0.00182708376087248, 0.00137692980933934, 0.00188605068251491, 0.00145431503187865, 0.0011787397088483, 0.00192303326912224, 0.00173386547248811, 0.00151120929513127, 0.00159339152742177, 0.00294793909415603, 0.00146693724673241, 0.00159440108109266, 0.00179652986116707, 0.0015409238403663, 0.00166180857922882, 0.00139666884206235, 0.00169598695356399, 0.00205333181656897, 0.00148655567318201, 0.00147743837442249, 0.00152275047730654, 0.00133984512649477, 0.00129727739840746, 0.00138818961568177, 0.00185377092566341, 0.00206511048600078, 0.0020198414567858, 0.00135978264734149, 0.00199075578711927, 0.00196747877635062, 0.00164245581254363, 0.00183432269841433, 0.00130614673253149, 0.00191467918921262, 0.00155434524640441, 0.00163481337949634, 0.00131620664615184, 0.00174000475089997, 0.00175632257014513, 0.00131085549946874, 0.0018134901765734, 0.00127357000019401, 0.00148986128624529, 0.00139862485229969, 0.00183077796828002, 0.00157940259668976, 0.00155539624392986, 0.00165352574549615, 0.00207063090056181, 0.0016577560454607, 0.00169553759042174, 0.0011951697524637, 0.00183134025428444, 0.00181749288458377, 0.00174882833380252, 0.00158108188770711, 0.00159015611279756, 0.00170279142912477, 0.00195422512479126, 0.0014117977116257, 0.00126196793280542, 0.00186211755499244, 0.00200766720809042, 0.00265697087161243, 0.00143359659705311, 0.00146797788329422, 0.00187174184247851, 0.00188550888560712, 0.00187817064579576, 0.00393244856968522, 0.00177808245643973, 0.00128028471954167, 0.00176411087159067, 0.00131959794089198, 0.00139537802897394, 0.0017871402669698, 0.00180464668665081, 0.00197509489953518, 0.00145503098610789, 0.00143536925315857, 0.00137300626374781, 0.00158644234761596, 0.00158692372497171, 0.00160847301594913, 0.00153021339792758, 0.00147642067167908, 0.00173245125915855, 0.00198691315017641, 0.00146013731136918, 0.00185397057794034, 0.00158376269973814, 0.00139818643219769, 0.00204809219576418, 0.00175532570574433, 0.00135937076993287, 0.00144715490750968, 0.00193101144395769, 0.00155885948333889, 0.00146644364576787, 0.00190556200686842, 0.00173953373450786, 0.00145124841947109, 0.00125975743867457, 0.00172087165992707, 0.00142375950235873, 0.00174262525979429, 0.00236288737505674, 0.00130277767311782, 0.00140417774673551, 0.00156124425120652, 0.00128598767332733, 0.00147095252759755, 0.00166421139147133, 0.0021408898755908, 0.00203430908732116, 0.00161921710241586, 0.00170587538741529, 0.0014337960164994, 0.00153700960800052, 0.00129925180226564, 0.00145980122033507, 0.00145095004700124, 0.00164512486662716, 0.00173797702882439, 0.00158855738118291, 0.00166606879793108, 0.00166927080135792, 0.00169589789584279, 0.00176572916097939, 0.0029285685159266, 0.00188337138388306, 0.00163994694594294, 0.00190473685506731, 0.00130802683997899, 0.00133249559439719, 0.00245493720285594, 0.00152028864249587, 0.00169000530149788, 0.00121251004748046, 0.00190103438217193, 0.00137324421666563, 0.00191536359488964, 0.00158783851657063, 0.00150789541658014, 0.0014713485725224, 0.00147797388490289, 0.0019233871717006, 0.00123256770893931, 0.00160702131688595, 0.00216449284926057, 0.00201196828857064, 0.00242297980003059, 0.00145774451084435, 0.00137920351698995 };
  static const int16_t buff_info_Conv2D_66_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_73_weights_quant_scale[] = { 0.00040585472015664, 0.000421692442614585, 0.000432567612733692, 0.000405370374210179, 0.000595254590734839, 0.000421721517341211, 0.000647987413685769, 0.000508082390297204, 0.000310863659251481, 0.000507696706335992, 0.000358537101419643, 0.000522356014698744, 0.000431553868111223, 0.000406215171096846, 0.000427182589191943, 0.000329208211041987, 0.000541296438314021, 0.00042662036139518, 0.000338913407176733, 0.00034928452805616, 0.000374470371752977, 0.000460040697362274, 0.000391795911127701, 0.000396754272514954, 0.000398682721424848, 0.00052327464800328, 0.000428956293035299, 0.000558597908820957, 0.00052938744192943, 0.000691513589117676, 0.000533897196874022, 0.000817518448457122, 0.00114324747119099, 0.00036920586717315, 0.000342325132805854, 0.00053029548143968, 0.000494553183671087, 0.000444203586084768, 0.000533549929969013, 0.000560885178856552, 0.000496362801641226, 0.000529579410795122, 0.000484490097733214, 0.000416621711337939, 0.000542502966709435, 0.000540108478162438, 0.000691482331603765, 0.000292315758997574, 0.000487352372147143, 0.000573676370549947, 0.000466565601527691, 0.000501213944517076, 0.000426245300332084, 0.000395706039853394, 0.000456625013612211, 0.000458808994153515, 0.000523823022376746, 0.000533537997398525, 0.000435520749306306, 0.000500396941788495, 0.000537352287210524, 0.000438534654676914, 0.000580370891839266, 0.000401149329263717, 0.000686630082782358, 0.000360944133717567, 0.00052230159053579, 0.000553966558072716, 0.000558189349249005, 0.000415367481764406, 0.000604607630521059, 0.000538622203748673, 0.000491974875330925, 0.000498212699312717, 0.000696152274031192, 0.000611275143455714, 0.000632430252153426, 0.000641403603367507, 0.000444041070295498, 0.000602903717663139, 0.000397689844248816, 0.000635053787846118, 0.000872332020662725, 0.000390884233638644, 0.000500570167787373, 0.000501256668940187, 0.000645535998046398, 0.000548525946214795, 0.000450472696684301, 0.000420143711380661, 0.000364671141142026, 0.000540837529115379, 0.0004162184195593, 0.00035849298001267, 0.000432728207670152, 0.000564297602977604, 0.000668429187498987, 0.000567280512768775, 0.000467000994831324, 0.000563270470593125, 0.000428225699579343, 0.000645947176963091, 0.000566271890420467, 0.000482613249914721, 0.000513400475028902, 0.000463151198346168, 0.000467100442619994, 0.000499105313792825, 0.00089191849110648, 0.000738031463697553, 0.000529416953213513, 0.000364762090612203, 0.000542971130926162, 0.000576406018808484, 0.000502413546200842, 0.000663823971990496, 0.000462431547930464, 0.000421014439780265, 0.000775707710999995, 0.000471922801807523, 0.000566359492950141, 0.000361533282557502, 0.000377344927983359, 0.000818482250906527, 0.000599340943153948, 0.00037675624480471, 0.000446458288934082, 0.0005566023173742, 0.000462180323665962, 0.000808324490208179, 0.000654856965411454, 0.000440831470768899, 0.000326587061863393, 0.000440176430856809, 0.000377253658371046, 0.000448496954049915, 0.000573344179429114, 0.000420414406107739, 0.000505014788359404, 0.00065797456772998, 0.000569031457416713, 0.000613563926890492, 0.000431287044193596, 0.000446358491899446, 0.00056632497580722, 0.000558956118766218, 0.000608047062996775, 0.000419196003349498, 0.000583175802603364, 0.000439108203863725, 0.0007175441714935, 0.000535113271325827, 0.00055363355204463, 0.00049676070921123, 0.000578914885409176, 0.000617350451648235, 0.000556689803488553, 0.000704673060681671, 0.000585434201639146, 0.000490648031700402, 0.000392867863411084, 0.00045905724982731, 0.000486770702991635, 0.000408515508752316, 0.000663977058138698, 0.000430298532592133, 0.000429874024121091, 0.000534088409040123, 0.000404040038120002, 0.000567116949241608, 0.000390758563298732, 0.000583325396291912, 0.000542005524039268, 0.000626077700871974, 0.000404357851948589, 0.000472007552161813, 0.000464319920865819, 0.000477638910524547, 0.000510725891217589, 0.000491948158014566, 0.000545375281944871, 0.000428986386395991, 0.000547849806025624, 0.000449979561381042, 0.000325804052408785, 0.000411651242757216, 0.000449461047537625, 0.000416070368373767, 0.000495174492243677, 0.000401355471694842, 0.000481070135720074, 0.000366914377082139, 0.000495976535603404, 0.000417160365032032, 0.000480098911793903, 0.000513888313435018, 0.000353950075805187, 0.00039046467281878, 0.000643886800389737, 0.000536766310688108, 0.000379710108973086, 0.000478800560813397, 0.000445987534476444, 0.00036500915302895, 0.00107803102582693, 0.000607297755777836, 0.000448832346592098, 0.000736704678274691, 0.000593730073887855, 0.00046042405301705, 0.000361064332537353, 0.000344587344443426, 0.000601865584030747, 0.000446038931841031, 0.000512467348016798, 0.0004425794177223, 0.000415144866565242, 0.000713512767106295, 0.000633429677691311, 0.00063488824525848, 0.000489967875182629, 0.000677325646393001, 0.00045634902198799, 0.000580668449401855, 0.000603067863266915, 0.000329795613652095, 0.000539392873179168, 0.000402250268962234, 0.000526060233823955, 0.000478300265967846, 0.000373855436919257, 0.000478236208437011, 0.000671700981911272, 0.000414453126722947, 0.000526319839991629, 0.000403211393859237, 0.000471411913167685, 0.000418715499108657, 0.000413608417147771, 0.000506364565808326, 0.000664386490825564, 0.000363052997272462, 0.00040812129736878, 0.000409361236961558, 0.000628663459792733, 0.00038540008245036, 0.000531918369233608, 0.000466935132863, 0.000556056387722492, 0.000781074282713234, 0.000402264180593193, 0.000438931601820514, 0.000450641789939255, 0.000450372201157734, 0.00039463781286031, 0.000416471681091934, 0.000489063328132033, 0.00041643573786132, 0.000576237333007157, 0.000577454164158553, 0.000728872255422175, 0.000473330757813528, 0.000459322356618941, 0.000442359159933403, 0.000365672924090177, 0.000549581600353122, 0.000626451626885682, 0.000328557216562331, 0.000559806474484503, 0.000461601244751364, 0.000707027735188603, 0.000422785902628675, 0.000846994866151363, 0.000401111436076462, 0.000437816343037412, 0.000630211434327066, 0.000602080544922501, 0.000454590830486268, 0.000469947990495712, 0.000489142199512571, 0.000772590981796384, 0.000597915553953499, 0.000404788937885314, 0.000579232932068408, 0.000357114098733291, 0.000435713853221387, 0.000469415390398353, 0.000580058782361448, 0.000384433340514079, 0.000446674792328849, 0.000339353573508561, 0.000357161974534392, 0.000608838454354554, 0.000505772011820227, 0.000420610915170982, 0.000473813066491857, 0.000465787365101278, 0.000439809169620275, 0.000529451353941113, 0.000455504661658779, 0.000406735402066261, 0.000416253344155848, 0.000468386453576386, 0.000495662039611489, 0.000514399434905499, 0.000574772013351321, 0.00051328050903976, 0.000956173404119909, 0.000411369401263073, 0.000565079040825367, 0.00039686998934485, 0.000361759244697168, 0.000459330767625943, 0.00053316872799769, 0.000584490655455738, 0.000487224984681234, 0.000416865426814184, 0.000558027299121022, 0.000422557670390233, 0.000375976349459961, 0.000490471604280174, 0.000547987234313041, 0.000499075918924063, 0.000964085222221911, 0.000527508440427482, 0.000679962569847703, 0.000398284144466743, 0.000441287877038121, 0.000575116893742234, 0.000394228147342801, 0.000609822804108262, 0.000412590685300529, 0.000358998368028551, 0.000511311402078718, 0.000408087129471824, 0.000540094915777445, 0.000520708272233605, 0.000584861729294062, 0.000856155005749315, 0.000613585696555674, 0.000479707552585751, 0.000412247551139444, 0.00048875855281949, 0.000588475784752518, 0.000387375330319628, 0.000465156277641654, 0.00039381391252391, 0.000473249063361436, 0.000570702773984522, 0.000531449972186238, 0.000704116420820355, 0.000568035233300179, 0.000376177980797365, 0.00036891913623549, 0.000423390330979601, 0.000426557555329055, 0.000439209776232019, 0.000454330729553476, 0.000521603622473776, 0.000453110464150086, 0.000415526796132326, 0.000339845428243279, 0.000493421452119946, 0.000723408011253923, 0.000485132361063734, 0.00047599509707652, 0.000693303707521409, 0.000437940587289631, 0.000447493803221732, 0.000562189903575927, 0.000399436190491542, 0.000408557214541361, 0.00047527565038763, 0.000470319704618305, 0.000483114650705829, 0.000671057554427534, 0.000411192246247083, 0.000613452633842826, 0.000387940526707098, 0.000597008038312197, 0.000467173173092306, 0.000762437412049621, 0.000586486421525478, 0.00037202361272648, 0.000713491928763688, 0.000433159933891147, 0.00102652667555958, 0.000481707626022398, 0.000498315668664873, 0.000360990263288841, 0.000420890050008893, 0.000356486794771627, 0.000448193837655708, 0.00043389547499828, 0.00053420930635184, 0.000306724017718807, 0.000432958331657574, 0.000401855679228902, 0.000569590949453413, 0.000808274548035115, 0.000456412235507742, 0.000476487213745713, 0.000462992844404653, 0.000371745525626466, 0.000443282362539321, 0.000826445058919489, 0.000480397837236524, 0.000628310430329293, 0.000424739002482966, 0.000710398075170815, 0.000368557433830574, 0.000404772057663649, 0.000470520841190591, 0.000449981453130022, 0.00105341139715165, 0.000663198530673981, 0.000442900636699051, 0.000423087301896885, 0.000367320229997858, 0.000363439496140927, 0.000539412489160895, 0.000328943220665678, 0.000420472584664822, 0.000362808495992795, 0.000460744922747836, 0.000378269440261647, 0.000386832776712254, 0.000278178660664707, 0.000635536678601056, 0.000389314111089334, 0.000414049427490681, 0.000673803442623466, 0.000355044816387817, 0.000660472607705742, 0.000413103873142973, 0.000480325281387195, 0.000440842763055116, 0.000674412120133638, 0.00059053604491055, 0.000469697028165683, 0.000559849548153579, 0.000514038896653801, 0.000441134616266936, 0.000450280320364982, 0.000432370317867026, 0.000394840113585815, 0.000364571547834203, 0.000458888040157035, 0.000506645417772233, 0.000498811015859246, 0.000641565478872508, 0.00058071018429473, 0.000335713964886963, 0.000364936568075791, 0.000439492607256398, 0.000427258375566453, 0.000300557643640786, 0.000608503120020032, 0.000421247299527749, 0.000451715401140973, 0.000531778379809111, 0.000516447005793452, 0.000564645568374544, 0.000596857920754701, 0.000477881170809269, 0.00052413169760257, 0.000426672806497663, 0.0004549904842861, 0.000421426928369328, 0.00039259810000658, 0.000318238220643252, 0.000497627072036266, 0.000419675838202238, 0.000423792196670547, 0.000435646157711744, 0.00051630224334076, 0.000409098080126569, 0.000699694035574794, 0.000579345505684614, 0.000693950045388192, 0.000575025915168226, 0.000452222797321156, 0.000539236643817276, 0.000510310870595276, 0.000472497020382434, 0.000450815132353455, 0.000719277828466147, 0.00043446576455608, 0.000756296678446233, 0.00108426518272609, 0.000623930420260876, 0.000474465050501749, 0.000595053366851062, 0.000463076372398064, 0.000400066142901778, 0.000500523310620338, 0.000548403069842607, 0.000612210889812559, 0.000444562349002808, 0.000488611112814397, 0.000466768862679601, 0.000384597253287211, 0.000387630541808903, 0.000922084553167224, 0.000405102502554655, 0.000388513319194317, 0.000481220020446926, 0.000467869569547474, 0.000441799958935007, 0.00053577619837597, 0.000976470008026809, 0.00063126627355814 };
  static const int16_t buff_info_Conv2D_73_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_80_weights_quant_scale[] = { 0.000326907174894586, 0.000497323053423315, 0.000595420249737799, 0.000357907789293677, 0.000243833128479309, 0.000172316707903519, 0.000397160940337926, 0.000309409166220576, 0.000260143540799618, 0.000173226115293801, 0.000496987893711776, 0.000425996171543375, 0.000259661464951932, 0.000415931193856522, 0.000371974194422364, 0.000343664578394964, 0.000191097948118113, 0.000372481968952343, 0.000625082233455032, 0.000322454376146197, 0.000472998770419508, 0.000181970739504322, 0.000505775678902864, 0.000471385399578139, 0.000435087335063145, 0.000139311261591502, 0.000323275453411043, 0.000274858757620677, 0.000403911602916196, 0.000413042871514335, 0.00037784522282891, 0.000328498834278435, 0.000178139744093642, 0.000500069523695856, 0.00031150400172919, 0.000157304748427123, 0.000416872324422002, 0.000350171234458685, 0.000320987630402669, 0.000453391432529315, 0.000397462747059762, 0.000408101914217696, 0.000391776993637905, 0.000154488094267435, 0.000168987913639285, 0.000178038520971313, 0.000388268497772515, 0.000292118493234739, 0.000298396218568087, 0.000638214231003076, 0.000255147053394467, 0.000170811981661245, 0.000161220101290382, 0.000178260073880665, 0.00039565417682752, 0.000178479633177631, 0.0003008751955349, 0.000253790087299421, 0.000443191762315109, 0.000449025304988027, 0.000348804605891928, 0.000263864581938833, 0.00025842385366559, 0.00107618083711714, 0.000237031636061147, 0.000152953187352978, 0.000510819081682712, 0.000286659080302343, 0.000379138917196542, 0.000292210257612169, 0.000538772728759795, 0.000268441188381985, 0.000304326211335137, 0.000401792087359354, 0.000293734396109357, 0.000244748633122072, 0.000394028582377359, 0.000367973232641816, 0.000443614058895037, 0.000312502757878974, 0.000261874549323693, 0.000367686618119478, 0.000191307786735706, 0.000952526112087071, 0.000322905543725938, 0.000510236597619951, 0.000340937782311812, 0.000160556170158088, 0.000295244361041114, 0.000377506774384528, 0.000605935230851173, 0.000380317913368344, 0.000157193571794778, 0.000309907831251621, 0.000556584098376334, 0.000400501565309241, 0.000407487415941432, 0.000309891358483583, 0.000183993193786591, 0.000548480253200978, 0.000395449751522392, 0.00025801282026805, 0.000266752438619733, 0.000284684356302023, 0.000290021067485213, 0.000306062574964017, 0.000274314865237102, 0.000598836631979793, 0.000313700147671625, 0.000342860323144123, 0.00042642856715247, 0.000204549476620741, 0.000352206639945507, 0.000435033027315512, 0.000352961709722877, 0.000520378933288157, 0.000150147927342914, 0.000464170152554289, 0.00048556545516476, 0.000332706898916513, 0.000164765122462995, 0.000264504546066746, 0.000253439851803705, 0.000275366619462147, 0.000273511657724157, 0.000302318570902571, 0.000276929436950013, 0.000734415429178625, 0.000433501059887931, 0.000630165974143893, 0.000348599220160395, 0.000364450912456959, 0.000467396050225943, 0.000254365702858195, 0.00199804967269301, 0.000305730092804879, 0.000307029287796468, 0.000407859130064026, 0.00039812017348595, 0.000283175177173689, 0.000340634433086962, 0.000295105011900887, 0.000179051319719292, 0.000380669254809618, 0.00035807240055874, 0.000399620272219181, 0.00041037512710318, 0.000294284749543294, 0.000338043464580551, 0.000573345983866602, 0.000180571500095539, 0.000547834788449109, 0.000329530274029821, 0.000509130186401308, 0.000316883815685287, 0.000578876992221922, 0.000319964980008081, 0.000442765187472105, 0.00016566964040976, 0.000516637694090605, 0.000299076607916504, 0.000141646974952891, 0.000298300932627171, 0.00041923692333512, 0.000402343430323526, 0.000481677707284689, 0.000406881648814306, 0.00031717011006549, 0.000330397131619975, 0.000283679983112961, 0.000825479160994291, 0.000343093182891607, 0.000503305869642645, 0.000282529392279685, 0.000382072612410411, 0.000534144521225244, 0.00020082997798454, 0.000379143806640059, 0.000399624754209071, 0.000352608505636454, 0.000277645624009892, 0.000569687457755208, 0.000457001238828525, 0.000378360942704603, 0.000312923395540565, 0.000943379185628146, 0.000412333785789087, 0.000349316804204136, 0.000188443344086409, 0.000287120841676369, 0.00018950218509417, 0.000265168375335634, 0.000366403546649963, 0.000301874184515327, 0.000163492586580105, 0.000624936539679766, 0.000330532202497125, 0.000306044588796794, 0.000357833079760894, 0.000177268782863393, 0.000170440354850143, 0.000244664959609509, 0.000309758703224361, 0.000195706335944124, 0.000353086128598079, 0.000369300978491083, 0.000350664398865774, 0.000493794563226402, 0.000556202838197351, 0.000281012005871162, 0.000305095192743465, 0.00028541442588903, 0.000219078836380504, 0.000261707580648363, 0.000452358886832371, 0.000384700280847028, 0.000387592852348462, 0.000397912925109267, 0.000243920178036205, 0.00031842160387896, 0.000386168598197401, 0.000304509594570845, 0.00058176030870527, 0.000376309821149334, 0.000429662934038788, 0.000362045801011845, 0.000360327743692324, 0.000366181891877204, 0.000266249960986897, 0.000402585632400587, 0.000357935932697728, 0.000191618542885408, 0.000179218710400164, 0.000556229380890727, 0.000399698998080567, 0.000482592469779775, 0.000205674135941081, 0.000423907797085121, 0.00040239212103188, 0.000441347598098218, 0.000411107699619606, 0.000341794453561306, 0.00052574957953766, 0.000216134314541705, 0.000380159122869372, 0.000340694969054312, 0.00060966465389356, 0.000362389895599335, 0.000604373344685882, 0.000208496174309403, 0.000306958187138662, 0.000287577393464744, 0.000451254687504843, 0.000465599179733545, 0.000375271105440333, 0.000412438268540427, 0.000196166060050018, 0.000625495158601552, 0.000372935581253842, 0.000195522487047128, 0.000297701015369967, 0.000232674705330282, 0.000377484451746568, 0.000392597343306988, 0.000188044185051695, 0.0018988874508068, 0.000205839140107855, 0.000156642257934436, 0.000225250129005872, 0.000533407379407436, 0.000363990635378286, 0.000162989366799593, 0.000243481626966968, 0.000335399148752913, 0.000391569279599935, 0.000481997180031613, 0.000316180841764435, 0.000710411521140486, 0.000254381011473015, 0.000523561961017549, 0.000166468438692391, 0.000314451463054866, 0.000357156124664471, 0.000291153788566589, 0.000288028008071706, 0.000399232550989836, 0.000185573298949748, 0.000222997652599588, 0.000321936677210033, 0.000470819097245112, 0.000295139907393605, 0.000327443267451599, 0.000306666654068977, 0.0005432348116301, 0.000439184543211013, 0.000180005314177833, 0.00042065538582392, 0.000314128585159779, 0.000539843458682299, 0.000293692428385839, 0.000457611109595746, 0.000332560128299519, 0.000322672654874623, 0.000255624589044601, 0.000166545534739271, 0.000557853549253196, 0.000380303041310981, 0.000320406106766313, 0.000351419468643144, 0.00043126565287821, 0.000293943041469902, 0.000372278300346807, 0.000229445940931328, 0.000257567182416096, 0.000353892944986001, 0.000483618699945509, 0.000411019718740135, 0.000415162969147786, 0.00047893010196276, 0.000574494246393442, 0.000310833944240585, 0.000251586228841916, 0.000298669998301193, 0.000396955787437037, 0.000365179672371596, 0.000175132881850004, 0.000348827423295006, 0.000198016496142372, 0.00036312363226898, 0.000446136982645839, 0.000419160147430375, 0.000446346792159602, 0.000330733950249851, 0.000213646417250857, 0.000316061486955732, 0.0003758545499295, 0.00038481832598336, 0.000186771299922839, 0.000271317549049854, 0.000316535733873025, 0.000261508685071021, 0.000412912369938567, 0.000444331264588982, 0.00066388858249411, 0.000248376134550199, 0.000421817792812362, 0.000178565067471936, 0.000304446613881737, 0.000180267903488129, 0.000291010510409251, 0.000327390822349116, 0.000209163263207301, 0.00033566149068065, 0.000341251870850101, 0.000212282742722891, 0.000350305606843904, 0.000292305601760745, 0.000336680328473449, 0.000324485066812485, 0.000227011114475317, 0.000157798378495499, 0.000273265672149137, 0.000188614460057579, 0.000374572147848085, 0.000197761750314385, 0.000679269840475172, 0.000368684850400314, 0.000385353283490986, 0.000376077339751646, 0.00016818506992422, 0.000493315688800067, 0.000251661636866629, 0.000318279722705483, 0.000304437562590465, 0.000384272279916331, 0.000351946655428037, 0.000353049428667873, 0.00050922081572935, 0.000327638263115659, 0.000179663460585289, 0.0001868558319984, 0.000487660785438493, 0.000276493199635297, 0.000321909377817065, 0.000276503793429583, 0.000324869150063023, 0.000498427601996809, 0.000164215671247803, 0.000519714900292456, 0.000412921712268144, 0.00024548705550842, 0.000229505822062492, 0.00049856147961691, 0.000238480381085537, 0.000155710440594703, 0.000391210312955081, 0.000280430860584602, 0.000279064639471471, 0.000500474299769849, 0.000151280284626409, 0.00028914661379531, 0.000334411219228059, 0.000279167521512136, 0.000770026410464197, 0.00015924651233945, 0.000149284445797093, 0.000488016550661996, 0.000439468829426914, 0.000174603628693148, 0.000276784528978169, 0.000653832918033004, 0.00032708264188841, 0.000606299960054457, 0.000362441845936701, 0.000334044685587287, 0.000528253440279514, 0.000501470582094043, 0.00028431267128326, 0.000170781757333316, 0.000471754261525348, 0.000363388215191662, 0.000437742361100391, 0.000371068104868755, 0.000169758699485101, 0.000354532210621983, 0.00044480970245786, 0.000351023918483406, 0.000176055385963991, 0.000310517702018842, 0.000451735424576327, 0.000510528101585805, 0.000387699052225798, 0.000350078393239528, 0.000384725630283356, 0.000511448248289526, 0.00048205949133262, 0.000422155164415017, 0.000515625346451998, 0.000292073935270309, 0.000587282527703792, 0.000383384729502723, 0.000745442463085055, 0.000365355488611385, 0.000152030537719838, 0.000303735258057714, 0.000162700525834225, 0.000536288018338382, 0.000342836487106979, 0.000355847005266696, 0.000357177894329652, 0.000227538126637228, 0.000441295502241701, 0.000509393343236297, 0.000454806024208665, 0.000518307671882212, 0.000358115386916324, 0.000156437468831427, 0.000371422822354361, 0.000270652497420087, 0.000678388634696603, 0.000180104674655013, 0.00015438356786035, 0.00054394529433921, 0.000220707137486897, 0.000316996884066612, 0.000376878801034763, 0.000606038840487599, 0.000368678185623139, 0.000359724770532921, 0.000241016925428994, 0.000403161131544039, 0.000460598763311282, 0.000651236914563924, 0.000641019491013139, 0.000492201070301235, 0.000186902529094368, 0.000287917617242783, 0.000289663177682087, 0.000165671794093214, 0.000409405416576192, 0.000304020271869376, 0.000333618983859196, 0.000355425901943818, 0.000547413714230061, 0.000284782465314493, 0.000384107610443607, 0.000487939425511286, 0.000546690367627889, 0.000478215719340369, 0.000382180820452049, 0.000210261874599382, 0.000349663896486163, 0.000289012619759887, 0.00037273287307471, 0.000353557144990191, 0.000287911127088591, 0.000480757706100121, 0.000511946622282267, 0.000489757861942053, 0.000373121583834291, 0.00037570099812001, 0.000345919921528548, 0.000475717621156946, 0.00107910519000143, 0.000437605631304905, 0.000290824042167515, 0.000318199978210032, 0.000541061977855861, 0.000192995503311977, 0.000312577205477282, 0.000289659074041992, 0.000431725871749222 };
  static const int16_t buff_info_Conv2D_80_weights_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_1024_512_1_1[] = { 1024, 1, 1, 512 };
  static const uint32_t buff_info__mem_shape_M_1024_512_1_1[] = { 1024, 4, 1, 1, 128 };
  static const float buff_info_Conv2D_87_weights_quant_scale[] = { 0.00462535256519914, 0.00359768373891711, 0.00495904497802258, 0.000711903674528003, 0.00123979803174734, 0.00315991835668683, 0.0453635342419147, 0.00273647555150092, 0.00294965552166104, 0.00316524365916848, 0.00157540128566325, 0.000634844647720456, 0.00350032956339419, 0.00142993789631873, 0.00285004684701562, 0.00131396949291229, 0.00400131475180387, 0.00807374995201826, 0.00392155814915895, 0.00321619282476604, 0.00577946053817868, 0.00504346983507276, 0.00375190121121705, 0.00156795571092516, 0.00099537440109998, 0.00345586193725467, 0.00215672561898828, 0.0075472379103303, 0.00110756908543408, 0.002889608964324, 0.0066612996160984, 0.00680200755596161, 0.00508214114233851, 0.000790050369687378, 0.00510112196207047, 0.00194249849300832, 0.00366893527098, 0.00323212146759033, 0.00134918314870447, 0.00211985991336405, 0.00251242215745151, 0.00460411421954632, 0.00959247909486294, 0.0025893438141793, 0.0010699782287702, 0.00710769090801477, 0.00104864337481558, 0.00100103241857141, 0.00276359170675278, 0.00372786796651781, 0.00560451485216618, 0.00321638444438577, 0.00292987190186977, 0.00307942554354668, 0.00427433615550399, 0.00419298745691776, 0.0042666899971664, 0.000839916232507676, 0.00186027400195599, 0.00365607347339392, 0.00105189951136708, 0.00083493470447138, 0.00220153434202075, 0.00301956152543426, 0.00370639772154391, 0.0038255276158452, 0.00431931437924504, 0.00491644442081451, 0.00207401695661247, 0.00316385948099196, 0.00468948436900973, 0.00696969404816628, 0.000958875520154834, 0.00257817143574357, 0.00901655200868845, 0.0011372568551451, 0.00225869682617486, 0.00372893013991416, 0.00485488679260015, 0.00409365026280284, 0.00161766039673239, 0.0028746728785336, 0.000955515133682638, 0.00551349017769098, 0.000989733380265534, 0.00539563223719597, 0.00166265771258622, 0.00251714419573545, 0.00538726430386305, 0.00366042018868029, 0.00264905812218785, 0.000859265390317887, 0.00627402169629931, 0.00562659278512001, 0.002437210874632, 0.00291738309897482, 0.00421517575159669, 0.00347253936342895, 0.00322691584005952, 0.00402478314936161, 0.00106781837530434, 0.000764814612921327, 0.00497095193713903, 0.00264405622147024, 0.00159686233382672, 0.00349554186686873, 0.00354217062704265, 0.00533162802457809, 0.00259828055277467, 0.000822544679977, 0.00262838997878134, 0.00408596731722355, 0.000961333396844566, 0.00607735989615321, 0.00113750679884106, 0.00414965022355318, 0.00616634031757712, 0.00239399448037148, 0.00499462615698576, 0.00597773864865303, 0.00195529544726014, 0.00195365096442401, 0.00642998097464442, 0.00280017452314496, 0.000880638719536364, 0.00457004457712173, 0.00296295830048621, 0.00434079393744469, 0.00407925294712186, 0.00329144205898046, 0.00571881979703903, 0.00153522985056043, 0.00561491306871176, 0.00422783149406314, 0.00337575259618461, 0.00197138404473662, 0.00319207273423672, 0.00154756510164589, 0.0048467512242496, 0.0032965992577374, 0.00378277874551713, 0.00209907977841794, 0.004125967156142, 0.0040065492503345, 0.000816366809885949, 0.00293491058982909, 0.00464287307113409, 0.00205259188078344, 0.00897566881030798, 0.000844818074256182, 0.000841871835291386, 0.00133596477098763, 0.00306750973686576, 0.00262698205187917, 0.0032641883008182, 0.00352230225689709, 0.00390625046566129, 0.00338329561054707, 0.0042630354873836, 0.000944702711421996, 0.0043352940119803, 0.00344345532357693, 0.00462927110493183, 0.00422047777101398, 0.00379822100512683, 0.000786402786616236, 0.00782033521682024, 0.00317461555823684, 0.0041623692959547, 0.00248548877425492, 0.00154890702106059, 0.00211688806302845, 0.00301837967708707, 0.00211294461041689, 0.00315813557244837, 0.00253616040572524, 0.00469242734834552, 0.00338802626356483, 0.0044056223705411, 0.00205518421716988, 0.00248098815791309, 0.0017492554616183, 0.00311160320416093, 0.00409289170056581, 0.00713967625051737, 0.00345282070338726, 0.00493539497256279, 0.000999970594421029, 0.00057619612198323, 0.00276568834669888, 0.00378754618577659, 0.00671583972871304, 0.00508944783359766, 0.00351512595079839, 0.000621064042206854, 0.000689837441314012, 0.00540743768215179, 0.00292505999095738, 0.00253288680687547, 0.00332572287879884, 0.00202323286794126, 0.00269887363538146, 0.00354441022500396, 0.00443047238513827, 0.00789611600339413, 0.00124292238615453, 0.00159676442854106, 0.00292032491415739, 0.00239969813264906, 0.000919572659768164, 0.00409997953101993, 0.00303700589574873, 0.00156508455984294, 0.00321470876224339, 0.00247282371856272, 0.000840220076497644, 0.00277557596564293, 0.000888407928869128, 0.0046037151478231, 0.00626145582646132, 0.000736811140086502, 0.00769275752827525, 0.0031905451323837, 0.00499269552528858, 0.00572629831731319, 0.00339510152116418, 0.00469281431287527, 0.00392518658190966, 0.00286497408524156, 0.000984312384389341, 0.00224724900908768, 0.00273563317023218, 0.00470971735194325, 0.00676061771810055, 0.00101143959909678, 0.00269897864200175, 0.0030572006944567, 0.00606036419048905, 0.00473733386024833, 0.00351300160400569, 0.00273936265148222, 0.00467201741412282, 0.00449764728546143, 0.00356144388206303, 0.00110820506233722, 0.00302113173529506, 0.00174058577977121, 0.00632587028667331, 0.000741060532163829, 0.0030179510358721, 0.00216965423896909, 0.00450132507830858, 0.00539113022387028, 0.00259686587378383, 0.00326528050936759, 0.00417169369757175, 0.00356870517134666, 0.00315953441895545, 0.00365201220847666, 0.00295857386663556, 0.00227008294314146, 0.00916530378162861, 0.00218038936145604, 0.00454078149050474, 0.00512055866420269, 0.00146242883056402, 0.00324082421138883, 0.00351583329029381, 0.00509869446977973, 0.00484210392460227, 0.000633738993201405, 0.00379599584266543, 0.00253706122748554, 0.00453722942620516, 0.00364693254232407, 0.00314649031497538, 0.00208988529630005, 0.00437652925029397, 0.00128150929231197, 0.00332038989290595, 0.00123160670045763, 0.00414197565987706, 0.00527317216619849, 0.0376321785151958, 0.00380459148436785, 0.00838909763842821, 0.0025228641461581, 0.00296410406008363, 0.00344455777667463, 0.00267495191656053, 0.000561110500711948, 0.00660167448222637, 0.0027833532076329, 0.00415597390383482, 0.00300451717339456, 0.00300970068201423, 0.00544915115460753, 0.00462556071579456, 0.000808010692708194, 0.00577673222869635, 0.00192532420624048, 0.00424331054091454, 0.000748482882045209, 0.00351089937612414, 0.00280525907874107, 0.00448641134425998, 0.00363472988829017, 0.00399745721369982, 0.00346522103063762, 0.00109574676025659, 0.0286310669034719, 0.00395904248580337, 0.00267551676370203, 0.00701992167159915, 0.00239708134904504, 0.00658471882343292, 0.000872698030434549, 0.0014048075536266, 0.00445396918803453, 0.00387484789825976, 0.00129311333876103, 0.00356160826049745, 0.00459129083901644, 0.00332804466597736, 0.00693507818505168, 0.0101350266486406, 0.00222496222704649, 0.000792606384493411, 0.00493812840431929, 0.00533595029264688, 0.003249432425946, 0.00424653105437756, 0.00432322034612298, 0.00402677245438099, 0.00287222163751721, 0.00474952440708876, 0.000988766318187118, 0.00578316813334823, 0.00257847108878195, 0.00256251846440136, 0.00342617323622108, 0.00333928363397717, 0.00528521742671728, 0.00766812730580568, 0.000823183683678508, 0.00288503034971654, 0.00225550192408264, 0.00240020127967, 0.00275349710136652, 0.00522942515090108, 0.00313366274349391, 0.000552496290765703, 0.00544228265061975, 0.0033284102100879, 0.00377724110148847, 0.00320446374826133, 0.000838034320622683, 0.00402505043894053, 0.00546950986608863, 0.00383891444653273, 0.000824600574560463, 0.00255544716492295, 0.00391202606260777, 0.00187640113290399, 0.00198148633353412, 0.00455730827525258, 0.000926421605981886, 0.00379071664065123, 0.003613036358729, 0.00610353378579021, 0.0027436981908977, 0.00864974223077297, 0.00645913649350405, 0.000768581463489681, 0.00369816529564559, 0.00292475731112063, 0.00218026177026331, 0.00546523416414857, 0.00350629002787173, 0.00409610802307725, 0.00444863643497229, 0.00585246551781893, 0.00275641353800893, 0.00338465976528823, 0.00290829408913851, 0.000892228679731488, 0.00140960165299475, 0.00115067197475582, 0.00343559635803103, 0.00234855292364955, 0.00305163022130728, 0.00414673425257206, 0.000761761912144721, 0.00273368321359158, 0.0075574298389256, 0.00244876369833946, 0.00350030278787017, 0.00438548112288117, 0.00306358863599598, 0.00332440412603319, 0.00130757747683674, 0.00341252936050296, 0.0015232062432915, 0.000928569003008306, 0.00141543452627957, 0.00232706032693386, 0.00336877722293139, 0.00333752972073853, 0.00203178799711168, 0.000744173885323107, 0.00446489360183477, 0.00412454828619957, 0.00268131378106773, 0.00621385267004371, 0.00343518680892885, 0.00361245404928923, 0.00360969617031515, 0.00280535570345819, 0.00422084797173738, 0.0041959430091083, 0.00657402444630861, 0.000694743648637086, 0.00124649645294994, 0.00411363039165735, 0.00095985975349322, 0.00299312127754092, 0.000649041670840234, 0.00667670834809542, 0.000704026489984244, 0.00485583674162626, 0.00269289268180728, 0.00160469254478812, 0.00429066503420472, 0.00302519672550261, 0.00573992729187012, 0.000817045685835183, 0.00218826765194535, 0.00538074085488915, 0.00168972369283438, 0.00115340354386717, 0.00304816639982164, 0.00517434347420931, 0.00351229263469577, 0.0030886447057128, 0.00338910729624331, 0.0038271201774478, 0.00830257497727871, 0.00367713649757206, 0.0063156895339489, 0.00397181743755937, 0.00348073034547269, 0.00854347366839647, 0.00303519540466368, 0.00333047588355839, 0.000752325635403395, 0.00596828805282712, 0.000644310144707561, 0.00289483927190304, 0.000952791539020836, 0.000736013986170292, 0.00275578396394849, 0.0025505218654871, 0.0027467489708215, 0.000766127835959196, 0.0020138556137681, 0.00319122546352446, 0.000642168626654893, 0.00273298961110413, 0.00251331413164735, 0.00291469809599221, 0.00354752875864506, 0.00286096311174333, 0.00215664436109364, 0.00399666465818882, 0.00343426340259612, 0.0022224395070225, 0.00122992147225887, 0.00184150109998882, 0.00423750188201666, 0.00597935728728771, 0.00599492015317082, 0.00115633546374738, 0.0045239869505167, 0.00298527209088206, 0.00713986903429031, 0.00952878594398499, 0.00312310364097357, 0.000845558242872357, 0.00272699375636876, 0.0018666279502213, 0.00286397337913513, 0.0067499247379601, 0.00243986002169549, 0.00371176050975919, 0.00476865051314235, 0.00564376637339592, 0.000660853926092386, 0.00272232107818127, 0.00423971563577652, 0.0039835125207901, 0.00423334306105971, 0.00155963108409196, 0.00395622057840228, 0.00479877600446343, 0.00313212419860065, 0.00342691433615983, 0.00553170777857304, 0.00108501350041479, 0.0036884299479425, 0.000831744575407356, 0.00338585092686117, 0.00534493895247579, 0.0037513729184866, 0.00509285554289818, 0.00754149537533522, 0.00269965478219092, 0.00275576417334378, 0.00300674303434789, 0.00151951122097671, 0.00105875800363719, 0.002104188548401, 0.00340075860731304, 0.00108375167474151, 0.000910598842892796, 0.00704568205401301, 0.004531379789114, 0.0020264417398721, 0.00250486377626657, 0.00347554078325629, 0.00137875764630735, 0.00395117979496717, 0.00255764275789261, 0.00533093186095357, 0.00690004136413336, 0.00281847245059907, 0.00666640885174274, 0.0034947395324707, 0.00249178009107709, 0.00104637246113271, 0.00405107624828815, 0.00426735309883952, 0.00568806752562523, 0.000836054445244372, 0.00395601848140359, 0.00125289126299322, 0.00366179225966334, 0.00139179744292051, 0.00445633428171277, 0.00698213884606957, 0.00162937759887427, 0.00262796436436474, 0.00251052272506058, 0.00161646597553045, 0.00365620851516724, 0.00273605808615685, 0.00225557270459831, 0.00368389044888318, 0.0141669996082783, 0.00102284108288586, 0.00246999133378267, 0.00356650841422379, 0.00465203449130058, 0.0068866997025907, 0.000737909867893904, 0.00452368520200253, 0.00730853527784348, 0.00297511578537524, 0.00259811640717089, 0.00107842951547354, 0.00357059016823769, 0.00307108508422971, 0.00355906318873167, 0.00293453154154122, 0.00087898300262168, 0.00421483814716339, 0.0033682722132653, 0.00348329893313348, 0.0423673801124096, 0.00298547232523561, 0.000861053529661149, 0.00246802275069058, 0.000984737882390618, 0.00502258213236928, 0.00271972804330289, 0.0011655620764941, 0.00287515111267567, 0.00353072304278612, 0.00312859937548637, 0.00215609767474234, 0.000631476228591055, 0.00385423796251416, 0.00260078208521008, 0.000752670457586646, 0.00344421435147524, 0.000698816147632897, 0.00332642369903624, 0.00109882850665599, 0.00279696192592382, 0.0029634244274348, 0.00237864325754344, 0.00445791427046061, 0.00334612932056189, 0.00365417590364814, 0.00261989096179605, 0.00265407515689731, 0.00444897031411529, 0.0028751571662724, 0.00182039896026254, 0.0343683995306492, 0.00118484778795391, 0.0078295124694705, 0.00513057364150882, 0.0031149610877037, 0.000816700689028949, 0.00308379204943776, 0.00849283207207918, 0.00397597020491958, 0.0057681635953486, 0.00380419217981398, 0.00296857277862728, 0.00378313777036965, 0.00387023063376546, 0.00301348394714296, 0.00127802300266922, 0.00187488808296621, 0.00185132760088891, 0.00456395233049989, 0.00310158380307257, 0.00509758852422237, 0.00155645480845124, 0.00278170360252261, 0.00436110747978091, 0.00230850116349757, 0.00427691452205181, 0.00446687499061227, 0.0475088953971863, 0.000737823022063822, 0.000741820491384715, 0.00217993138357997, 0.00083596131298691, 0.00329027557745576, 0.00300162890926003, 0.00634213909506798, 0.00486268941313028, 0.00436380412429571, 0.00497780693694949, 0.00256957788951695, 0.00132450368255377, 0.00325923319905996, 0.00423699710518122, 0.00297448085620999, 0.00542865786701441, 0.00301709794439375, 0.00333445961587131, 0.00705975107848644, 0.00215149624273181, 0.00130932196043432, 0.00365496636368334, 0.0034080280456692, 0.00392480008304119, 0.00414343131706119, 0.00495434133335948, 0.000622397928964347, 0.00385593669489026, 0.00136632146313787, 0.00073343247640878, 0.000852843746542931, 0.00342457555234432, 0.00446349661797285, 0.0037932840641588, 0.00132401019800454, 0.00786495022475719, 0.00232241000048816, 0.00367010710760951, 0.00136553507763892, 0.000777826411649585, 0.003583999350667, 0.00164185534231365, 0.0031852216925472, 0.0044513470493257, 0.00439159292727709, 0.00229907711036503, 0.00771232973784208, 0.00271756970323622, 0.000713879999238998, 0.00104712892789394, 0.00346827693283558, 0.00382220791652799, 0.00505681475624442, 0.00962192285805941, 0.00554860103875399, 0.0016679234104231, 0.00611934252083302, 0.00344211724586785, 0.00425104331225157, 0.00246209069155157, 0.00335303135216236, 0.00342736230231822, 0.00168877525720745, 0.000800157082267106, 0.00171810179017484, 0.00405407976359129, 0.00355440238490701, 0.00311855552718043, 0.00272622052580118, 0.00458309752866626, 0.00448841601610184, 0.00321926851756871, 0.00316051207482815, 0.028465747833252, 0.00331564107909799, 0.00351264816708863, 0.000700686417985708, 0.00549482833594084, 0.00140990561340004, 0.00258021731860936, 0.000804500537924469, 0.00475421687588096, 0.00553013198077679, 0.00374755193479359, 0.00257418630644679, 0.00103091262280941, 0.00350763695314527, 0.00492148520424962, 0.00436515966430306, 0.00377587601542473, 0.00458144256845117, 0.00118855992332101, 0.00480445334687829, 0.00487756449729204, 0.00226432154886425, 0.00271515152417123, 0.00386911234818399, 0.000626087072305381, 0.000610634451732039, 0.000709979794919491, 0.00283681228756905, 0.00229011825285852, 0.00382219976745546, 0.00375460600480437, 0.0017202019225806, 0.00792756676673889, 0.00515272002667189, 0.00288125220686197, 0.0034782662987709, 0.000842962530441582, 0.00854989513754845, 0.00350778270512819, 0.00188782985787839, 0.00782520230859518, 0.00264912168495357, 0.00364819727838039, 0.00519345607608557, 0.000801839923951775, 0.00372290192171931, 0.00345413130708039, 0.00266100699082017, 0.00429630558937788, 0.000801217393018305, 0.00473354896530509, 0.00283036846667528, 0.00229045120067894, 0.00460071954876184, 0.00514376070350409, 0.00462663965299726, 0.00293289986439049, 0.00644222972914577, 0.00226051406934857, 0.00383006571792066, 0.00407685525715351, 0.00291605363599956, 0.0064492579549551, 0.00304488465189934, 0.00216371077112854, 0.00334347505122423, 0.00280207558535039, 0.00269858166575432, 0.00434076972305775, 0.00228473404422402, 0.00248412694782019, 0.00825154688209295, 0.0025077851023525, 0.00223763403482735, 0.00227002310566604, 0.0019483877113089, 0.00210300902836025, 0.00344686559401453, 0.0070193950086832, 0.0034636405762285, 0.00375044369138777, 0.00584187777712941, 0.00364426290616393, 0.00294313859194517, 0.00243377569131553, 0.00318251806311309, 0.00309744407422841, 0.0019323832821101, 0.00467353686690331, 0.00399041920900345, 0.00384290679357946, 0.00330951414071023, 0.00385609688237309, 0.00114196224603802, 0.00349327200092375, 0.00310907699167728, 0.00202270341105759, 0.00335086393170059, 0.00306588388048112, 0.00398585153743625, 0.00554291484877467, 0.00265904539264739, 0.00375314499251544, 0.00179971638135612, 0.00341439736075699, 0.000701637181919068, 0.00315725291147828, 0.0034023062326014, 0.00338675058446825, 0.0030485475435853, 0.00234511774033308, 0.00236948579549789, 0.00288591510616243, 0.00440967688336968, 0.00094192021060735, 0.00402583600953221, 0.00655410066246986, 0.00366740534082055, 0.000826299772597849, 0.0082346498966217, 0.00878383778035641, 0.00466469628736377, 0.00124916946515441, 0.000558437779545784, 0.00282274396158755, 0.00089351914357394, 0.00321103516034782, 0.00436482625082135, 0.0037475295830518, 0.000765274337027222, 0.00318226008675992, 0.000904837739653885, 0.00169916497543454, 0.00221499730832875, 0.00322116888128221, 0.00210356363095343, 0.00372678996063769, 0.0311007034033537, 0.00479283649474382, 0.00251588597893715, 0.00868088938295841, 0.00278685381636024, 0.00104629609268159, 0.00340048037469387, 0.0359960421919823, 0.00515947164967656, 0.00289080361835659, 0.00448253331705928, 0.00429312326014042, 0.00648302771151066, 0.00493642315268517, 0.0022856337018311, 0.00382611667737365, 0.0026995490770787, 0.00288231135345995, 0.000914269883651286, 0.00194216403178871, 0.00335528119467199, 0.00490211509168148, 0.000885544461198151, 0.00403269706293941, 0.00101230409927666, 0.00261209299787879, 0.000928431865759194, 0.00140788871794939, 0.00317707029171288, 0.00471102213487029, 0.00455250963568687, 0.00561049394309521, 0.00186693575233221, 0.00353414774872363, 0.00111041427589953, 0.00068655057111755, 0.00287382467649877, 0.00311848428100348, 0.00146322138607502, 0.00134516495745629, 0.00174272630829364, 0.0040397415868938, 0.00482395524159074, 0.003626664634794, 0.0072463396936655, 0.00326314195990562, 0.00119934929534793, 0.00410866271704435, 0.00174001650884748, 0.000662860926240683, 0.00237029185518622, 0.00339183234609663, 0.00524590816348791, 0.00383121916092932, 0.00662017986178398, 0.00305488682352006, 0.00619421247392893, 0.00278632715344429, 0.000840069202240556, 0.00389502197504044, 0.00432346854358912, 0.00183800177183002, 0.00537616200745106, 0.000782458577305079, 0.00255595496855676, 0.00306632160209119, 0.0010243080323562, 0.000891892588697374, 0.00602000951766968, 0.00286026578396559, 0.00237577478401363, 0.00140719884075224, 0.000844930589664727, 0.000882661493960768, 0.00330187077634037, 0.00428473949432373, 0.00337365921586752, 0.00444166269153357, 0.00305156479589641, 0.00528485374525189, 0.00278439628891647, 0.0353877805173397, 0.00436138035729527, 0.000643043604213744, 0.00118293729610741, 0.00330449407920241, 0.00187497143633664, 0.000665244122501463, 0.00282973097637296, 0.002838866552338, 0.00672785006463528, 0.00145568000152707, 0.00236006244085729, 0.00793666206300259, 0.00327462633140385, 0.00603323662653565, 0.0014473011251539, 0.00249393051490188, 0.00655083172023296, 0.000867998576723039, 0.0034396848641336, 0.00292735127732158, 0.00464606378227472, 0.000709449057467282, 0.00136571074835956, 0.00422333413735032, 0.00410754838958383, 0.00537200784310699, 0.00318962545134127, 0.00597198819741607, 0.00101971672847867, 0.00380458030849695, 0.0046472973190248, 0.00389218609780073, 0.00676004914566875, 0.000934022769797593, 0.00338642415590584, 0.00421988312155008, 0.00310996500775218, 0.00548060750588775, 0.00758437067270279, 0.00786004588007927, 0.00171437859535217, 0.00319829722866416, 0.000648915185593069, 0.00332365673966706, 0.00324839213863015, 0.0021516343113035, 0.000739027746021748, 0.0025428042281419, 0.00190195720642805, 0.000690926273819059, 0.00353967747651041, 0.000881446409039199, 0.00233384361490607, 0.0034918780438602, 0.00273115700110793, 0.00179752521216869, 0.00292410980910063, 0.00137113186065108, 0.00394466891884804, 0.00420795707032084, 0.00379699096083641, 0.00400337669998407, 0.00297945272177458, 0.00138715212233365, 0.00717505160719156, 0.00280405720695853, 0.0025750957429409, 0.00338790263049304, 0.00133941369131207, 0.00748940417543054, 0.00585306528955698, 0.00706601655110717, 0.0038605856243521, 0.00339374900795519, 0.00228692055679858, 0.00133580167312175, 0.00294501893222332, 0.000707352068275213, 0.00332882697694004, 0.00337832281365991, 0.000892012729309499, 0.00318797421641648, 0.00267135328613222, 0.00408496195450425, 0.00295892427675426, 0.00207166699692607, 0.00472917780280113, 0.000792791717685759, 0.00084886810509488, 0.00260705850087106, 0.00379325496032834, 0.00220103934407234, 0.00294145871885121, 0.0118291499093175, 0.00341977248899639, 0.00163262919522822 };
  static const int16_t buff_info_Conv2D_87_weights_quant_offset[] = {};
  static const uint32_t buff_info__shape_1024_1024_1_1[] = { 1024, 1, 1, 1024 };
  static const uint32_t buff_info__mem_shape_M_1024_1024_1_1[] = { 1024, 8, 1, 1, 128 };
  static const float buff_info_Conv2D_94_weights_quant_scale[] = { 0.0507130362093449, 0.0438524223864079, 0.057576235383749, 0.0359631516039371, 0.041677825152874, 0.0128985131159425, 0.0275429747998714, 0.0460656620562077, 0.0443954393267632, 0.049456212669611, 0.0183421708643436, 0.0415503568947315, 0.0669321715831757, 0.0366818010807037, 0.0124395014718175, 0.0510298274457455, 0.00935655273497105, 0.0650353506207466, 0.0493167154490948, 0.018198573961854, 0.0486636273562908, 0.0104213561862707, 0.0410019606351852, 0.0370666868984699, 0.0492082200944424, 0.0461904369294643, 0.0394875034689903, 0.0534436404705048, 0.0136040430516005, 0.039848193526268, 0.0567151717841625, 0.0590253472328186, 0.0117879919707775, 0.0546368099749088, 0.04794030636549, 0.0109152654185891, 0.0494059808552265, 0.0106896162033081, 0.00877704937011003, 0.0440360680222511, 0.0424029268324375, 0.0332399681210518, 0.0111455330625176, 0.0144756734371185, 0.0125863989815116, 0.0445867255330086, 0.0127524193376303, 0.0116915851831436, 0.0482926890254021, 0.0143149541690946, 0.0413287691771984, 0.0124179627746344, 0.0415538884699345, 0.0125080719590187, 0.00953804329037666, 0.0696494355797768, 0.0498925112187862, 0.0500149242579937, 0.0124656818807125, 0.0400802381336689, 0.0103896297514439, 0.0782435461878777, 0.0519901886582375, 0.0604517050087452, 0.0621903911232948, 0.0485420301556587, 0.0132027985528111, 0.0101622473448515, 0.00837882235646248, 0.0107882721349597, 0.0445427410304546, 0.0259006768465042, 0.0104742590337992, 0.0484617464244366, 0.00854749139398336, 0.0592161044478416, 0.0134144118055701, 0.0422861874103546, 0.0316543355584145, 0.0369910076260567, 0.0892334282398224, 0.0524904541671276, 0.044387012720108, 0.0337046757340431, 0.0377496927976608, 0.0126860029995441, 0.0126870954409242, 0.0110429227352142, 0.0435327589511871, 0.0534664914011955, 0.0120487054809928, 0.0492401495575905, 0.0135152833536267, 0.0469950251281261, 0.0337478183209896, 0.0375095196068287, 0.0132597414776683, 0.0283354055136442, 0.0502007156610489, 0.0111924456432462, 0.0118032349273562, 0.012533943168819, 0.0576620176434517, 0.04430977627635, 0.0487857051193714, 0.0488333031535149, 0.0441075600683689, 0.0566134564578533, 0.0122130261734128, 0.0140998428687453, 0.012274818494916, 0.0542621836066246, 0.0694299936294556, 0.0539300926029682, 0.0588399395346642, 0.0127897700294852, 0.0138600943610072, 0.0612829439342022, 0.0507274381816387, 0.0636087134480476, 0.0105970930308104, 0.0126093411818147, 0.0405237786471844, 0.0395932085812092, 0.0433811768889427, 0.0117510380223393, 0.0583044141530991, 0.0306306388229132, 0.0101639945060015, 0.0527426190674305, 0.0108068333938718, 0.0123766614124179, 0.033845316618681, 0.0115574849769473, 0.0724242702126503, 0.0100080585107207, 0.011780047789216, 0.0559540688991547, 0.0121910003945231, 0.0404362939298153, 0.0327578820288181, 0.039469450712204, 0.00780465640127659, 0.0400956124067307, 0.0549208968877792, 0.0405681766569614, 0.0433802977204323, 0.0432049371302128, 0.00905929878354073, 0.05732187256217, 0.076546385884285, 0.00989694241434336, 0.0671656206250191, 0.00765947485342622, 0.0385554321110249, 0.0495542548596859, 0.0410086922347546, 0.0521046780049801, 0.0595380254089832, 0.0365815386176109, 0.0121597042307258, 0.0600462853908539, 0.0138064939528704, 0.0348735600709915, 0.0526230409741402, 0.0132715692743659, 0.0107481479644775, 0.0505165904760361, 0.00944840349256992, 0.0460220463573933, 0.0387196764349937, 0.0122041283175349, 0.0442799888551235, 0.0141802225261927, 0.0461407266557217, 0.0671272054314613, 0.00909165106713772, 0.0499116294085979, 0.0124446237459779, 0.00944945774972439, 0.00983627885580063, 0.0633437633514404, 0.0574339739978313, 0.0389745347201824, 0.0450746044516563, 0.0803692191839218, 0.0462549030780792, 0.0401070415973663, 0.0758696645498276, 0.0573232620954514, 0.0093733137473464, 0.0633507594466209, 0.0130897480994463, 0.0486002005636692, 0.032003503292799, 0.0511917769908905, 0.0179381333291531, 0.0114166298881173, 0.0116941137239337, 0.0117064183577895, 0.0337458029389381, 0.0374573431909084, 0.0437228046357632, 0.0213682092726231, 0.0487740337848663, 0.0525446645915508, 0.0124258762225509, 0.0369063727557659, 0.0404927060008049, 0.0522315762937069, 0.0117773888632655, 0.0408923029899597, 0.0642758905887604, 0.0421665385365486, 0.0109245087951422, 0.0745622366666794, 0.0507568679749966, 0.0742946937680244, 0.0545170418918133, 0.00828275829553604, 0.0112009523436427, 0.0130276484414935, 0.0112341670319438, 0.0130187338218093, 0.0402098819613457, 0.0105398902669549, 0.0133259017020464, 0.0459705479443073, 0.00882954616099596, 0.0283102840185165, 0.0116762118414044, 0.0293460916727781, 0.04430116340518, 0.0084469597786665, 0.0436937473714352, 0.0431269034743309, 0.0359457768499851, 0.0657489150762558, 0.0130419945344329, 0.0395540967583656, 0.0440880171954632, 0.00889253616333008, 0.0412253923714161, 0.0395135544240475, 0.059554185718298, 0.0524020828306675, 0.00967314839363098, 0.010953570716083, 0.046558003872633, 0.0363123789429665, 0.0429528616368771, 0.0449820198118687, 0.0523578301072121, 0.00959134940057993, 0.0388323329389095, 0.0492059737443924, 0.0105918170884252, 0.010271780192852, 0.00921941176056862, 0.0640698075294495, 0.0481622666120529, 0.0601559728384018, 0.0388818047940731, 0.0496110282838345, 0.00922321528196335, 0.032249428331852, 0.0560328029096127, 0.0443285405635834, 0.0530749447643757, 0.0370198972523212, 0.0108809815719724, 0.0111284945160151, 0.0565299987792969, 0.0521248616278172, 0.0545187070965767, 0.0546451844274998, 0.0136899594217539, 0.0429964326322079, 0.0128785623237491, 0.065184697508812, 0.0641376748681068, 0.0335653237998486, 0.0581040270626545, 0.0110074570402503, 0.0534527450799942, 0.0117741003632545, 0.0454941429197788, 0.0574842020869255, 0.0423522852361202, 0.0457508601248264, 0.0118712792173028, 0.0306864827871323, 0.0446464531123638, 0.0425748117268085, 0.010351306758821, 0.0555703155696392, 0.0584717988967896, 0.0462877713143826, 0.0448659025132656, 0.045467559248209, 0.0428531542420387, 0.0123917404562235, 0.0102945370599627, 0.0421794839203358, 0.0126452436670661, 0.014519820921123, 0.0738095864653587, 0.0112256240099669, 0.0514798872172832, 0.00937512144446373, 0.0455107167363167, 0.0115118036046624, 0.0486757382750511, 0.0710017383098602, 0.009570537135005, 0.0404997281730175, 0.0532109402120113, 0.080827109515667, 0.0289242789149284, 0.0121668484061956, 0.0085618132725358, 0.0450457856059074, 0.0776091814041138, 0.0504436679184437, 0.0379415713250637, 0.0173823647201061, 0.0513122491538525, 0.011026244610548, 0.0348574258387089, 0.0114610325545073, 0.0106771336868405, 0.0634697899222374, 0.0132395410910249, 0.0129380160942674, 0.0386469699442387, 0.0092487083747983, 0.0214508511126041, 0.0579032935202122, 0.038435123860836, 0.0118981376290321, 0.0371117889881134, 0.00981677416712046, 0.0440895147621632, 0.0495035722851753, 0.0363561362028122, 0.00882383622229099, 0.0107424538582563, 0.0110668428242207, 0.0452437549829483, 0.0515344217419624, 0.0116810966283083, 0.0377104766666889, 0.0318341180682182, 0.0509218461811543, 0.0140494992956519, 0.0377696938812733, 0.0117039913311601, 0.0496202744543552, 0.0495351292192936, 0.0749357268214226, 0.0119961816817522, 0.0427342131733894, 0.0376748815178871, 0.0115167880430818, 0.0453235022723675, 0.00924129784107208, 0.0110013615339994, 0.0388871245086193, 0.0548532605171204, 0.00921942200511694, 0.0268321186304092, 0.0473221354186535, 0.012308930978179, 0.0121357617899776, 0.0543416738510132, 0.0455421470105648, 0.0457800589501858, 0.039760947227478, 0.0455132536590099, 0.0335664935410023, 0.0499159395694733, 0.00975299347192049, 0.0539546050131321, 0.0118476022034883, 0.0509437620639801, 0.0631772428750992, 0.0495878420770168, 0.0332412198185921, 0.0143007952719927, 0.0637748539447784, 0.0497553832828999, 0.0592556819319725, 0.00977076310664415, 0.0747456401586533, 0.0412436313927174, 0.00924868043512106, 0.0653837248682976, 0.0142999682575464, 0.0369337759912014, 0.0100280335173011, 0.0115249957889318, 0.0552914068102837, 0.0118244281038642, 0.0467826128005981, 0.0599597990512848, 0.0417262613773346, 0.0357245542109013, 0.00967513211071491, 0.011136069893837, 0.0478227883577347, 0.0508695542812347, 0.0541372895240784, 0.0378933995962143, 0.0126746725291014, 0.0515382513403893, 0.0514901503920555, 0.0606649816036224, 0.0139159001410007, 0.0394917167723179, 0.0113643324002624, 0.0124859707430005, 0.0363368950784206, 0.0479698739945889, 0.0581248849630356, 0.0452024564146996, 0.0283961165696383, 0.010731277987361, 0.0431761257350445, 0.00917238276451826, 0.0130820255726576, 0.0723537281155586, 0.0131715061143041, 0.0133032072335482, 0.0141956834122539, 0.0383925624191761, 0.0361313968896866, 0.0559155754745007, 0.0486719459295273, 0.011537017300725, 0.0403561070561409, 0.0415684394538403, 0.0587110184133053, 0.011691433377564, 0.0104135107249022, 0.0681582689285278, 0.0433130860328674, 0.0413140803575516, 0.0659691691398621, 0.00898559391498566, 0.0514645352959633, 0.0315751172602177, 0.0105114988982677, 0.0582371652126312, 0.0437825620174408, 0.0419196449220181, 0.0240220949053764, 0.0600852370262146, 0.0467571318149567, 0.0496247634291649, 0.0112316068261862, 0.0387449525296688, 0.0772188976407051, 0.052399929612875, 0.0111771859228611, 0.0240291561931372, 0.0345595665276051, 0.0408567860722542, 0.0534774623811245, 0.0457197949290276, 0.00984235759824514, 0.0114936223253608, 0.00974673125892878, 0.0504266694188118, 0.0540646873414516, 0.0188423711806536, 0.0312479846179485, 0.0342634692788124, 0.012739266268909, 0.0546340718865395, 0.0397335775196552, 0.012010863982141, 0.0307008419185877, 0.0228806659579277, 0.0113700199872255, 0.0774119198322296, 0.0149827245622873, 0.0573152117431164, 0.0134485736489296, 0.0514705590903759, 0.0483478270471096, 0.00769852614030242, 0.0356516502797604, 0.0478566251695156, 0.0127762090414762, 0.0420157723128796, 0.0407967157661915, 0.0390302054584026, 0.0480815134942532, 0.0463371351361275, 0.0516429990530014, 0.0461913160979748, 0.0579946376383305, 0.0337584316730499, 0.0415111072361469, 0.0116488430649042, 0.0401488728821278, 0.0127791119739413, 0.0439216122031212, 0.012047209776938, 0.0107573857530951, 0.0465694330632687, 0.0379818864166737, 0.0108141442760825, 0.0394079498946667, 0.00985132250934839, 0.00870559737086296, 0.0124370278790593, 0.0499406382441521, 0.0368140004575253, 0.0100081358104944, 0.0103902164846659, 0.0592703074216843, 0.00960352830588818, 0.0496571213006973, 0.00951505638659, 0.0495725758373737, 0.0105020022019744, 0.0126822087913752, 0.0381141901016235, 0.0097335446625948, 0.0549191646277905, 0.0320949740707874, 0.0520988255739212, 0.0424498729407787, 0.0337465368211269, 0.0440196543931961, 0.0104829827323556, 0.0580392479896545, 0.0588849633932114, 0.0130342105403543, 0.0462430380284786, 0.0617307536303997, 0.0102008190006018, 0.00853662192821503, 0.0346081331372261, 0.0153442481532693, 0.0452209524810314, 0.0576121509075165, 0.0131278522312641, 0.013421512208879, 0.0128857297822833, 0.0133397355675697, 0.0461803898215294, 0.0525998324155807, 0.0508612617850304, 0.060859739780426, 0.0422015003859997, 0.0130259627476335, 0.0634036660194397, 0.060374278575182, 0.0374265536665916, 0.0439017377793789, 0.0634844526648521, 0.0123499920591712, 0.0408120676875114, 0.00942071340978146, 0.0401196293532848, 0.0325995571911335, 0.0710608288645744, 0.0100532518699765, 0.036150723695755, 0.0467982925474644, 0.0457768663764, 0.0657118037343025, 0.0119250044226646, 0.0362804047763348, 0.0113597307354212, 0.0129088973626494, 0.0438795611262321, 0.0472416020929813, 0.0474940240383148, 0.0499424561858177, 0.0132239628583193, 0.0453389771282673, 0.0401206910610199, 0.0468373596668243, 0.0119004603475332, 0.0129837412387133, 0.0468834079802036, 0.0134634794667363, 0.0084715224802494, 0.0495732203125954, 0.0118040898814797, 0.0368381291627884, 0.0521775148808956, 0.0525926016271114, 0.00852626375854015, 0.0101777501404285, 0.0389252342283726, 0.03616613894701, 0.0592102408409119, 0.0579256527125835, 0.0108483098447323, 0.0633240714669228, 0.0157654751092196, 0.039066918194294, 0.0108021777123213, 0.0428255796432495, 0.0359546057879925, 0.0395862758159637, 0.0631801560521126, 0.0403302162885666, 0.0505541749298573, 0.0122292237356305, 0.0114015908911824, 0.0219468809664249, 0.0119849471375346, 0.0515099503099918, 0.0130588328465819, 0.0361786484718323, 0.0408065766096115, 0.0449580736458302, 0.0607324689626694, 0.0458895489573479, 0.0468117669224739, 0.0121141001582146, 0.0436305999755859, 0.00948293413966894, 0.0352447666227818, 0.0115712489932775, 0.029649818316102, 0.0610978454351425, 0.0129815330728889, 0.0469627305865288, 0.0111674070358276, 0.0125713013112545, 0.0460237562656403, 0.0469304025173187, 0.0766183733940125, 0.0676120296120644, 0.0574837177991867, 0.0652308762073517, 0.036523912101984, 0.0102358525618911, 0.00963243283331394, 0.0287838969379663, 0.043590821325779, 0.0432717241346836, 0.00807427708059549, 0.0144167747348547, 0.066410169005394, 0.0322143845260143, 0.0122197568416595, 0.0127208912745118, 0.00796843599528074, 0.0123232370242476, 0.0125606432557106, 0.0466128438711166, 0.0114695131778717, 0.0434008054435253, 0.012087850831449, 0.0359448455274105, 0.0294418092817068, 0.0638968572020531, 0.0354692824184895, 0.0123459389433265, 0.00880483724176884, 0.00864904467016459, 0.0607677102088928, 0.0525891184806824, 0.0497929938137531, 0.0292545016855001, 0.0457576103508472, 0.0516399256885052, 0.0169706717133522, 0.00939295813441277, 0.049137257039547, 0.035580076277256, 0.0399555675685406, 0.0831926092505455, 0.0411246009171009, 0.0320852063596249, 0.00900185760110617, 0.0427906662225723, 0.0405981093645096, 0.00847475230693817, 0.0552279837429523, 0.00975272618234158, 0.0111083323135972, 0.0471344254910946, 0.0441206693649292, 0.0639867261052132, 0.0589750856161118, 0.0115844840183854, 0.00925773475319147, 0.0714777484536171, 0.0388843603432178, 0.0528060682117939, 0.0523817948997021, 0.0557450354099274, 0.0537020824849606, 0.0335591547191143, 0.0127448681741953, 0.0145526248961687, 0.0358263924717903, 0.0546659082174301, 0.0124646937474608, 0.0115084974095225, 0.0440924391150475, 0.00965701788663864, 0.0477655343711376, 0.0632734820246696, 0.0612727515399456, 0.0434905812144279, 0.0235247947275639, 0.0270445924252272, 0.0477037504315376, 0.0490015111863613, 0.0602487809956074, 0.0409811474382877, 0.0396443642675877, 0.0452943705022335, 0.040729433298111, 0.0396983362734318, 0.0387637726962566, 0.0361221395432949, 0.049164991825819, 0.0409891046583652, 0.0124836256727576, 0.0400568395853043, 0.0500278510153294, 0.0114787276834249, 0.0329202823340893, 0.0479535162448883, 0.044325940310955, 0.0472040474414825, 0.0522027537226677, 0.0134189426898956, 0.0118863033130765, 0.0124684674665332, 0.0114270001649857, 0.0408834367990494, 0.0121285505592823, 0.0575068332254887, 0.0503436326980591, 0.0344403497874737, 0.0498606339097023, 0.0400528945028782, 0.0311902612447739, 0.0530675388872623, 0.0466386154294014, 0.0501804426312447, 0.0386703871190548, 0.06318648904562, 0.0128196766600013, 0.0567677430808544, 0.0395498685538769, 0.0518057234585285, 0.0444458238780499, 0.0313755795359612, 0.012524445541203, 0.0243378691375256, 0.0100693441927433, 0.0337074287235737, 0.0495803877711296, 0.0142710683867335, 0.0282803382724524, 0.0398465506732464, 0.0412742011249065, 0.0115173179656267, 0.0441029258072376, 0.0111841633915901, 0.0393282696604729, 0.0112765599042177, 0.0346778035163879, 0.00805653631687164, 0.0111054182052612, 0.0119052128866315, 0.0221350453794003, 0.0114441905170679, 0.0117280269041657, 0.0116016305983067, 0.0534749701619148, 0.0105540482327342, 0.0773939117789268, 0.0495012514293194, 0.045052956789732, 0.0417166128754616, 0.0315160155296326, 0.0115871401503682, 0.00976660568267107, 0.0119022857397795, 0.0317339710891247, 0.0487368889153004, 0.0495240353047848, 0.00758785614743829, 0.0114854797720909, 0.058875136077404, 0.0448000952601433, 0.0493832267820835, 0.0115775810554624, 0.058684341609478, 0.00945668946951628, 0.0131522975862026, 0.0374956466257572, 0.0418610312044621, 0.0463633164763451, 0.0469141267240047, 0.0344105325639248, 0.0475341640412807, 0.037831723690033, 0.0362694561481476, 0.0448274239897728, 0.00898547191172838, 0.0455038994550705, 0.0178836733102798, 0.0115848807618022, 0.00963228102773428, 0.0115217855200171, 0.0120118791237473, 0.0501265786588192, 0.0116573767736554, 0.0428732596337795, 0.04102848097682, 0.00805870071053505, 0.0107355955988169, 0.00970419030636549, 0.0396559126675129, 0.011155198328197, 0.0105762258172035, 0.0330986604094505, 0.0526462607085705, 0.0214025974273682, 0.0528762377798557, 0.041375569999218, 0.0141956452280283, 0.0592225901782513, 0.0605448484420776, 0.0498322881758213, 0.0424381606280804, 0.0211490653455257, 0.0699591934680939, 0.0405273102223873, 0.0611507259309292, 0.0129889659583569, 0.0541842468082905, 0.0111804977059364, 0.0519685111939907, 0.0496410168707371, 0.065010242164135, 0.042384997010231, 0.0662585347890854, 0.03009825758636, 0.0447363257408142, 0.0107669634744525, 0.0394227802753448, 0.01323068048805, 0.0792135372757912, 0.0666578337550163, 0.045954242348671, 0.048869039863348, 0.0425934307277203, 0.0574496500194073, 0.0123294899240136, 0.0127033879980445, 0.0524340160191059, 0.0334422178566456, 0.0531288608908653, 0.0493714474141598, 0.0119167743250728, 0.0493508502840996, 0.0359373688697815, 0.0518383421003819, 0.00979920011013746, 0.0134972808882594, 0.0570399574935436, 0.0411117039620876, 0.0361164063215256, 0.0436501987278461, 0.0346790812909603, 0.0406021326780319, 0.0423576533794403, 0.00765151670202613, 0.0238969661295414, 0.031304195523262, 0.0563514903187752, 0.00871561281383038, 0.0119735011830926, 0.0127867311239243, 0.0402829349040985, 0.0363097153604031, 0.0803302675485611, 0.0647038668394089, 0.012827780097723, 0.0404782369732857, 0.0101960236206651, 0.0424429439008236, 0.0547317638993263, 0.0405736304819584, 0.057984996587038, 0.0626501590013504, 0.0121120046824217, 0.0517601333558559, 0.0516047812998295, 0.0235410332679749, 0.0486413985490799, 0.0126646840944886, 0.0118103986606002, 0.0125820552930236, 0.055025789886713, 0.0261896941810846, 0.0605727843940258, 0.0123345199972391, 0.0272101834416389, 0.0421512387692928, 0.0331491939723492, 0.0560007095336914, 0.0126161156222224, 0.0747252926230431, 0.0102187730371952, 0.0410085953772068, 0.059862058609724, 0.0441877618432045, 0.0105219222605228, 0.0345887430012226, 0.0764665529131889, 0.0482675693929195, 0.0522089563310146, 0.0537426881492138, 0.0713314339518547, 0.0402357243001461, 0.0345420874655247, 0.0706583932042122, 0.0121856862679124, 0.0466198809444904, 0.0482976250350475, 0.0587287470698357, 0.0120307886973023, 0.0527166686952114, 0.0483936704695225, 0.0410140380263329, 0.011777725070715, 0.00903740525245667, 0.00961355865001678, 0.0318644307553768, 0.0132707171142101, 0.0418235659599304, 0.0358349122107029, 0.0361880734562874, 0.0125635834410787, 0.0330510661005974, 0.0714148581027985, 0.0540137775242329, 0.0514851324260235, 0.00909646321088076, 0.0530675798654556, 0.0124116195365787, 0.036843866109848, 0.0402888245880604, 0.0469299741089344, 0.00927758123725653, 0.0636581182479858, 0.0113373184576631, 0.01283785328269, 0.0416250191628933, 0.010646597482264, 0.0116138225421309, 0.0491265580058098, 0.0716503635048866, 0.0777278617024422, 0.0403739921748638, 0.0343519970774651, 0.0388429313898087, 0.0119765996932983, 0.0104308119043708, 0.0249428749084473, 0.0582239590585232, 0.0371077097952366, 0.0423059985041618, 0.0437302477657795, 0.047862209379673, 0.0435559339821339, 0.0579244829714298, 0.0428957603871822, 0.0448660925030708, 0.0100190779194236, 0.0493708029389381, 0.038878221064806, 0.0493441298604012, 0.0482489354908466, 0.0580940805375576, 0.0463516972959042, 0.04137222468853, 0.0143578480929136, 0.0113597977906466, 0.0444524399936199, 0.0514158718287945, 0.00983997900038958, 0.0422356612980366, 0.0591816939413548, 0.0121418805792928, 0.00990866962820292, 0.0533588156104088, 0.0131951291114092, 0.0513212084770203, 0.0346881486475468, 0.0358258187770844, 0.0416692420840263, 0.0481290556490421, 0.0123023577034473, 0.00890841893851757, 0.0130626754835248, 0.0124105215072632, 0.0611506141722202, 0.0133176371455193, 0.0667074099183083, 0.0121997371315956, 0.0403861440718174, 0.0102373082190752, 0.0123056080192327, 0.0479718372225761, 0.0629492253065109, 0.0403751097619534, 0.0121712069958448 };
  static const int16_t buff_info_Conv2D_94_weights_quant_offset[] = {};
  static const uint32_t buff_info__shape_10_1024_1_1[] = { 10, 1, 1, 1024 };
  static const uint32_t buff_info__mem_shape_M_10_1024_1_1[] = { 10, 8, 1, 1, 128 };
  static const float buff_info_Gemm_99_weights_transposed_3_quant_scale[] = { 0.00411689607426524, 0.00445594498887658, 0.00457232305780053, 0.00375601393170655, 0.00331256585195661, 0.00429913308471441, 0.00397944590076804, 0.00365512701682746, 0.00416086660698056, 0.00466674799099565 };
  static const int16_t buff_info_Gemm_99_weights_transposed_3_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_32_1_1[] = { 1, 1, 1, 32 };
  static const uint32_t buff_info__mem_shape_M_32_1_1[] = { 8, 1, 1, 4 };
  static const uint32_t buff_info__shape_1[] = { 1, 1, 1, 1 };
  static const uint32_t buff_info__mem_shape_U_1[] = { 1 };
  static const float buff_info_Conv2D_7_zero_off_17_quant_scale[] = { 0.0282531250268221 };
  static const int16_t buff_info_Conv2D_7_zero_off_17_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_10_zero_off_26_quant_scale[] = { 0.0325571112334728 };
  static const int16_t buff_info_Conv2D_10_zero_off_26_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_64_1_1[] = { 1, 1, 1, 64 };
  static const uint32_t buff_info__mem_shape_M_64_1_1[] = { 4, 1, 1, 16 };
  static const float buff_info_Conv2D_14_zero_off_35_quant_scale[] = { 0.0299799684435129 };
  static const int16_t buff_info_Conv2D_14_zero_off_35_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_17_zero_off_44_quant_scale[] = { 0.0312461871653795 };
  static const int16_t buff_info_Conv2D_17_zero_off_44_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_128_1_1[] = { 1, 1, 1, 128 };
  static const uint32_t buff_info__mem_shape_M_128_1_1[] = { 8, 1, 1, 16 };
  static const float buff_info_Conv2D_21_zero_off_53_quant_scale[] = { 0.0265036504715681 };
  static const int16_t buff_info_Conv2D_21_zero_off_53_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_24_zero_off_62_quant_scale[] = { 0.0300319790840149 };
  static const int16_t buff_info_Conv2D_24_zero_off_62_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_28_zero_off_71_quant_scale[] = { 0.0245358645915985 };
  static const int16_t buff_info_Conv2D_28_zero_off_71_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_31_zero_off_80_quant_scale[] = { 0.0272250883281231 };
  static const int16_t buff_info_Conv2D_31_zero_off_80_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_256_1_1[] = { 1, 1, 1, 256 };
  static const uint32_t buff_info__mem_shape_M_256_1_1[] = { 16, 1, 1, 16 };
  static const float buff_info_Conv2D_35_zero_off_89_quant_scale[] = { 0.0216067973524332 };
  static const int16_t buff_info_Conv2D_35_zero_off_89_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_38_zero_off_98_quant_scale[] = { 0.0268087573349476 };
  static const int16_t buff_info_Conv2D_38_zero_off_98_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_42_zero_off_107_quant_scale[] = { 0.019644919782877 };
  static const int16_t buff_info_Conv2D_42_zero_off_107_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_45_zero_off_116_quant_scale[] = { 0.0224041733890772 };
  static const int16_t buff_info_Conv2D_45_zero_off_116_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_512_1_1[] = { 1, 1, 1, 512 };
  static const uint32_t buff_info__mem_shape_M_512_1_1[] = { 32, 1, 1, 16 };
  static const float buff_info_Conv2D_49_zero_off_125_quant_scale[] = { 0.0190518628805876 };
  static const int16_t buff_info_Conv2D_49_zero_off_125_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_52_zero_off_134_quant_scale[] = { 0.0255642980337143 };
  static const int16_t buff_info_Conv2D_52_zero_off_134_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_56_zero_off_143_quant_scale[] = { 0.018563674762845 };
  static const int16_t buff_info_Conv2D_56_zero_off_143_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_59_zero_off_152_quant_scale[] = { 0.0270497351884842 };
  static const int16_t buff_info_Conv2D_59_zero_off_152_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_63_zero_off_161_quant_scale[] = { 0.0191529504954815 };
  static const int16_t buff_info_Conv2D_63_zero_off_161_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_66_zero_off_170_quant_scale[] = { 0.0332505293190479 };
  static const int16_t buff_info_Conv2D_66_zero_off_170_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_70_zero_off_179_quant_scale[] = { 0.0240327548235655 };
  static const int16_t buff_info_Conv2D_70_zero_off_179_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_73_zero_off_188_quant_scale[] = { 0.0345538407564163 };
  static const int16_t buff_info_Conv2D_73_zero_off_188_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_77_zero_off_197_quant_scale[] = { 0.0241539366543293 };
  static const int16_t buff_info_Conv2D_77_zero_off_197_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_80_zero_off_206_quant_scale[] = { 0.0253454241901636 };
  static const int16_t buff_info_Conv2D_80_zero_off_206_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_84_zero_off_215_quant_scale[] = { 0.0230307467281818 };
  static const int16_t buff_info_Conv2D_84_zero_off_215_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_87_zero_off_224_quant_scale[] = { 0.0108367586508393 };
  static const int16_t buff_info_Conv2D_87_zero_off_224_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1024_1_2[] = { 1, 1, 2, 1024 };
  static const uint32_t buff_info__mem_shape_M_1024_1_2[] = { 64, 1, 2, 16 };
  static const float buff_info_Conv2D_91_zero_off_233_quant_scale[] = { 0.0144055988639593 };
  static const int16_t buff_info_Conv2D_91_zero_off_233_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_94_zero_off_242_quant_scale[] = { 0.0091076884418726 };
  static const int16_t buff_info_Conv2D_94_zero_off_242_quant_offset[] = { 0 };
  static const float buff_info_Gemm_99_conv_4_zero_off_251_quant_scale[] = { 0.0154482675716281 };
  static const int16_t buff_info_Gemm_99_conv_4_zero_off_251_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_10_1_1[] = { 1, 1, 1, 10 };
  static const uint32_t buff_info__mem_shape_F_10_1_1[] = { 10, 1, 1 };
  static const uint32_t buff_info__shape_32_8_3_3[] = { 32, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_32_8_3_3[] = { 32, 3, 3, 8 };
  static const float buff_info_Conv2D_7_weights_inflated_260_quant_scale[] = { 0.0104006668552756, 0.0124168246984482, 0.00998621806502342, 0.0138237383216619, 0.00974947400391102, 0.00836735311895609, 0.0114900702610612, 0.0123361553996801, 0.00519261928275228, 0.0128399580717087, 0.0108296778053045, 0.0160209648311138, 0.0112824579700828, 0.0124464947730303, 0.0088766273111105, 0.0100497622042894, 0.0126037281006575, 0.00681246072053909, 0.0102643752470613, 0.0135424938052893, 0.00462306709960103, 0.00660970667377114, 0.00553264282643795, 0.00971321482211351, 0.00532656023278832, 0.0167249944061041, 0.00921869557350874, 0.0112044028937817, 0.00922457408159971, 0.0133671313524246, 0.010990303941071, 0.0134311420843005 };
  static const int16_t buff_info_Conv2D_7_weights_inflated_260_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_64_8_3_3[] = { 64, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_64_8_3_3[] = { 64, 3, 3, 8 };
  static const float buff_info_Conv2D_14_weights_inflated_262_quant_scale[] = { 0.00415917439386249, 0.0052495445124805, 0.004218147136271, 0.00678629241883755, 0.00731484219431877, 0.00522629544138908, 0.00618647318333387, 0.00698330393061042, 0.00482114404439926, 0.00256072892807424, 0.00755805475637317, 0.00601749960333109, 0.00628398451954126, 0.00290210731327534, 0.00310615310445428, 0.00638347445055842, 0.00592637062072754, 0.00433101644739509, 0.00609288504347205, 0.00705841695889831, 0.00531704863533378, 0.00539057515561581, 0.00555904861539602, 0.0045052575878799, 0.00450548948720098, 0.00563505664467812, 0.00582784740254283, 0.0044018910266459, 0.00410733325406909, 0.00679439445957541, 0.00360316643491387, 0.00539281778037548, 0.00586795201525092, 0.00532726431265473, 0.00572228245437145, 0.00424709217622876, 0.00586507841944695, 0.00445596501231194, 0.00402336707338691, 0.00404523452743888, 0.00940980669111013, 0.0145157929509878, 0.00667645642533898, 0.00486955000087619, 0.00451586442068219, 0.00697595067322254, 0.00603365059942007, 0.00600006338208914, 0.00307890004478395, 0.00325612630695105, 0.00405628606677055, 0.00520919542759657, 0.00461161183193326, 0.00563167640939355, 0.0046612611040473, 0.00666997861117125, 0.00597433978691697, 0.00317373592406511, 0.00577746331691742, 0.00484263524413109, 0.00380987790413201, 0.00533231301233172, 0.00683916127309203, 0.00944501254707575 };
  static const int16_t buff_info_Conv2D_14_weights_inflated_262_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_128_8_3_3[] = { 128, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_128_8_3_3[] = { 128, 3, 3, 8 };
  static const float buff_info_Conv2D_21_weights_inflated_264_quant_scale[] = { 0.00770607404410839, 0.00677858153358102, 0.01102289929986, 0.0106826368719339, 0.00522560253739357, 0.00769495265558362, 0.00658021029084921, 0.0125829121097922, 0.00916625186800957, 0.00468710623681545, 0.00464262720197439, 0.0100383087992668, 0.00843064207583666, 0.00557393440976739, 0.00983625743538141, 0.00941907335072756, 0.0125429360195994, 0.00486002024263144, 0.00463310442864895, 0.00715490989387035, 0.0131834158673882, 0.0113709438592196, 0.00898043718189001, 0.00832467898726463, 0.00717395730316639, 0.00652306526899338, 0.00798382051289082, 0.010409751906991, 0.0115642845630646, 0.0103680901229382, 0.00699036428704858, 0.0148843545466661, 0.00620007468387485, 0.0148589955642819, 0.00988919101655483, 0.00586978998035192, 0.00253446283750236, 0.00398197351023555, 0.00639654276892543, 0.00996525958180428, 0.0098807280883193, 0.00791738461703062, 0.00679306127130985, 0.00808681081980467, 0.00834089610725641, 0.00961903668940067, 0.00694133341312408, 0.00445929681882262, 0.00961241591721773, 0.00964281521737576, 0.00875543151050806, 0.00643898965790868, 0.0113786412402987, 0.00574608892202377, 0.00588915031403303, 0.00535721005871892, 0.00614085141569376, 0.00885626208037138, 0.0105333225801587, 0.00918660871684551, 0.00866598542779684, 0.00495882472023368, 0.00976198073476553, 0.0102785602211952, 0.0113777695223689, 0.00802724715322256, 0.00858788378536701, 0.0127340368926525, 0.00832593161612749, 0.00634185736998916, 0.00988649763166904, 0.007901506498456, 0.00938839837908745, 0.00574742583557963, 0.00987752992659807, 0.00341022084467113, 0.00865558348596096, 0.00667858123779297, 0.00851413141936064, 0.00823849253356457, 0.00708014564588666, 0.00630064820870757, 0.00899033155292273, 0.00740644289180636, 0.00820326339453459, 0.0100880824029446, 0.0107235787436366, 0.00807734113186598, 0.00822036527097225, 0.0105724846944213, 0.00512178614735603, 0.00571799697354436, 0.00285926414653659, 0.00767285889014602, 0.0107794720679522, 0.00888821110129356, 0.010051385499537, 0.00485934084281325, 0.00917817000299692, 0.00681298738345504, 0.00714372843503952, 0.010946343652904, 0.0131808053702116, 0.00463011208921671, 0.00489674415439367, 0.008134457282722, 0.0057720229960978, 0.0119970329105854, 0.00654919538646936, 0.00997498072683811, 0.00852240342646837, 0.00919963605701923, 0.00674842484295368, 0.0100520439445972, 0.00887276139110327, 0.0119383307173848, 0.00665727583691478, 0.00557486619800329, 0.00355092086829245, 0.0131396213546395, 0.0101911444216967, 0.0136887421831489, 0.00477162143215537, 0.00775118032470345, 0.0122374752536416, 0.00979009456932545, 0.00605397345498204, 0.0100964214652777 };
  static const int16_t buff_info_Conv2D_21_weights_inflated_264_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_28_weights_inflated_266_quant_scale[] = { 0.00414517195895314, 0.00379529991187155, 0.00524738570675254, 0.00373154762201011, 0.00630929553881288, 0.00884396396577358, 0.00544304959475994, 0.00572818517684937, 0.00570939388126135, 0.00459615187719464, 0.00556037994101644, 0.00646086409687996, 0.00620893063023686, 0.00544224819168448, 0.00531168980523944, 0.00503444112837315, 0.00640623876824975, 0.00420971680432558, 0.00492717092856765, 0.00691365636885166, 0.00536198960617185, 0.00673314742743969, 0.00586227467283607, 0.00475747277960181, 0.00497496267780662, 0.0041550206951797, 0.00573768373578787, 0.00774885667487979, 0.00546619901433587, 0.00556699233129621, 0.00582666927948594, 0.00532978586852551, 0.00711392145603895, 0.00491108326241374, 0.00280523742549121, 0.00574376480653882, 0.00431637605652213, 0.00540833221748471, 0.00673209968954325, 0.00521492632105947, 0.00441558612510562, 0.00456325290724635, 0.00545505434274673, 0.0043573621660471, 0.00851065758615732, 0.00602886825799942, 0.00549363158643246, 0.00473130960017443, 0.00485318992286921, 0.00650632893666625, 0.00573466159403324, 0.00318585429340601, 0.00357050308957696, 0.00435787299647927, 0.00359820201992989, 0.00881346128880978, 0.00585150672122836, 0.00386649533174932, 0.006597850471735, 0.00470682559534907, 0.00501319160684943, 0.00516873458400369, 0.00725420936942101, 0.00623526144772768, 0.00429068692028522, 0.00763522414490581, 0.00618286291137338, 0.00569527363404632, 0.00658610928803682, 0.00486973254010081, 0.00698571559041739, 0.00438214186578989, 0.0100745260715485, 0.00428781658411026, 0.00554326036944985, 0.00595871545374393, 0.00597840361297131, 0.0043916436843574, 0.00670637516304851, 0.00696699880063534, 0.00566397048532963, 0.00599489035084844, 0.00474117323756218, 0.00449299765750766, 0.00482371915131807, 0.00370041630230844, 0.00585386995226145, 0.00671703414991498, 0.00512791983783245, 0.0052063437178731, 0.00548274954780936, 0.00458858767524362, 0.00700832530856133, 0.00722120329737663, 0.00482360413298011, 0.00633590249344707, 0.00573567394167185, 0.00596162443980575, 0.00704454910010099, 0.00451837200671434, 0.00526747154071927, 0.00533863948658109, 0.00457652658224106, 0.00473990943282843, 0.00523664709180593, 0.00417142221704125, 0.0041036861948669, 0.00936046242713928, 0.00481050508096814, 0.00463342573493719, 0.00513374339789152, 0.00478760385885835, 0.00454075075685978, 0.00485120853409171, 0.0051615284755826, 0.00464798510074615, 0.00678743747994304, 0.00506199710071087, 0.00451959948986769, 0.00462431274354458, 0.00525746727362275, 0.00729956105351448, 0.00555557105690241, 0.00604463601484895, 0.00730501813814044, 0.00589023204520345, 0.00577013986185193, 0.00573644926771522 };
  static const int16_t buff_info_Conv2D_28_weights_inflated_266_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_256_8_3_3[] = { 256, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_256_8_3_3[] = { 256, 3, 3, 8 };
  static const float buff_info_Conv2D_35_weights_inflated_268_quant_scale[] = { 0.00981450732797384, 0.0104722240939736, 0.00761055434122682, 0.00650963699445128, 0.00935756508260965, 0.00731005566194654, 0.00684515293687582, 0.00570623716339469, 0.0118901254609227, 0.00638283789157867, 0.00751859648153186, 0.00853456556797028, 0.00374350417405367, 0.00841849390417337, 0.00884995982050896, 0.00648267054930329, 0.00733974203467369, 0.0078191077336669, 0.0123049207031727, 0.0131053971126676, 0.00913425628095865, 0.00888036098331213, 0.0100053120404482, 0.00623909011483192, 0.00484563270583749, 0.00656787538900971, 0.012730129994452, 0.00589432800188661, 0.00545699940994382, 0.00722197769209743, 0.0042606177739799, 0.00713885668665171, 0.00547533435747027, 0.00677390210330486, 0.00741410301998258, 0.0105877565219998, 0.0091744102537632, 0.00411937991157174, 0.00714933406561613, 0.00751390913501382, 0.00713212881237268, 0.0102425403892994, 0.0074501377530396, 0.00823478307574987, 0.00830013304948807, 0.0104144932702184, 0.00772398617118597, 0.00665611634030938, 0.00991738028824329, 0.0039044285658747, 0.00819757673889399, 0.0061154649592936, 0.00376431667245924, 0.00865630153566599, 0.0077679930254817, 0.00578434485942125, 0.00967658869922161, 0.0067850430496037, 0.00690971501171589, 0.00926028192043304, 0.0102660553529859, 0.00576499849557877, 0.00881674140691757, 0.00671974988654256, 0.00885986350476742, 0.00714274914935231, 0.0069961347617209, 0.00921285338699818, 0.00678880466148257, 0.00626798067241907, 0.00394804310053587, 0.00531863560900092, 0.00944489892572165, 0.00728344544768333, 0.0110642937943339, 0.00506948214024305, 0.00981567706912756, 0.00646199006587267, 0.00703352689743042, 0.00784848257899284, 0.00964896567165852, 0.00389662943780422, 0.0118148289620876, 0.00513523165136576, 0.00827781576663256, 0.00918632373213768, 0.00926921050995588, 0.00567443389445543, 0.00761860655620694, 0.0125248348340392, 0.00649686483666301, 0.00669164396822453, 0.00667346129193902, 0.0102432798594236, 0.00839736498892307, 0.00469401013106108, 0.00733282556757331, 0.00788411870598793, 0.00736551359295845, 0.00587937328964472, 0.00876610912382603, 0.00929934531450272, 0.00590244261547923, 0.00475702621042728, 0.00972996838390827, 0.00544593343511224, 0.00802693516016006, 0.00820119399577379, 0.00400388147681952, 0.00737787876278162, 0.00262460671365261, 0.0102930655702949, 0.00832836050540209, 0.00785869918763638, 0.00724742840975523, 0.00795599538832903, 0.00920237507671118, 0.00483370060101151, 0.00729231210425496, 0.00947030354291201, 0.0107121868059039, 0.00896489899605513, 0.00802918151021004, 0.00727724656462669, 0.00673539889976382, 0.0056685502640903, 0.00641172425821424, 0.00778434192761779, 0.00739561952650547, 0.00698204338550568, 0.00746623007580638, 0.00938877277076244, 0.00782227609306574, 0.00823324173688889, 0.00720990961417556, 0.00817551463842392, 0.00900049228221178, 0.0122569920495152, 0.00893765594810247, 0.0107013741508126, 0.00910765863955021, 0.00917030405253172, 0.00672333966940641, 0.00796516239643097, 0.00490180030465126, 0.0129240900278091, 0.00500131212174892, 0.00670697540044785, 0.00857719220221043, 0.00526013365015388, 0.00954674743115902, 0.00707385363057256, 0.00573758874088526, 0.00464556133374572, 0.00889888592064381, 0.00698893051594496, 0.0068828915245831, 0.00916868727654219, 0.0069791623391211, 0.00940081756561995, 0.00793951470404863, 0.00661289785057306, 0.0072133457288146, 0.00941368285566568, 0.00756310811266303, 0.00802682992070913, 0.0104914102703333, 0.00671812426298857, 0.00492558162659407, 0.00900405086576939, 0.0080485800281167, 0.0107010956853628, 0.00537893874570727, 0.00936630647629499, 0.00780674302950501, 0.00916379503905773, 0.00590342516079545, 0.00951659772545099, 0.00703548872843385, 0.00815121550112963, 0.00768195232376456, 0.0109028518199921, 0.00885003432631493, 0.00640042405575514, 0.00743224751204252, 0.00801375322043896, 0.00806867890059948, 0.00930502731353045, 0.00615750625729561, 0.00814418587833643, 0.00917953811585903, 0.00703748362138867, 0.00772261340171099, 0.0100095272064209, 0.00910849310457706, 0.00696282414719462, 0.00759844947606325, 0.00770829617977142, 0.00932409055531025, 0.00580833526328206, 0.00693450216203928, 0.00669942842796445, 0.00719014182686806, 0.00750265177339315, 0.0081650884822011, 0.00670970696955919, 0.0115084853023291, 0.0103198569267988, 0.0118457144126296, 0.00724648125469685, 0.00905081909149885, 0.0102719590067863, 0.00793332513421774, 0.0056172851473093, 0.00642618024721742, 0.00788812804967165, 0.00869751162827015, 0.00842503923922777, 0.00570448860526085, 0.00687489146366715, 0.00783438142389059, 0.00564152933657169, 0.0084142442792654, 0.00770508591085672, 0.00779391825199127, 0.00769216241315007, 0.00695064244791865, 0.00638705445453525, 0.00777507526800036, 0.00629366654902697, 0.00755686312913895, 0.00750183733180165, 0.00763289164751768, 0.00798334181308746, 0.0051168710924685, 0.011590956710279, 0.00456501264125109, 0.00719753094017506, 0.00759878940880299, 0.00522482441738248, 0.00529286824166775, 0.00530558032914996, 0.00507242977619171, 0.00952434260398149, 0.00678253918886185, 0.00646032206714153, 0.0085795558989048, 0.00779443886131048, 0.00340011017397046, 0.00570502318441868, 0.00818423926830292, 0.00721186073496938, 0.00928849633783102, 0.0083821527659893, 0.00368720595724881, 0.00825697649270296 };
  static const int16_t buff_info_Conv2D_35_weights_inflated_268_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_42_weights_inflated_270_quant_scale[] = { 0.00463685439899564, 0.00552951730787754, 0.00563426036387682, 0.00673139980062842, 0.00731391552835703, 0.00634011393412948, 0.00622948817908764, 0.00668927514925599, 0.00559634901583195, 0.00672797532752156, 0.0073512950912118, 0.00925804674625397, 0.00590268103405833, 0.00502861244603992, 0.00470903282985091, 0.0037578500341624, 0.00444168783724308, 0.00649592094123363, 0.00743402075022459, 0.00361456070095301, 0.00479015801101923, 0.00594556517899036, 0.00649904925376177, 0.00641205115243793, 0.00658111926168203, 0.00616356963291764, 0.00350056355819106, 0.00803888030350208, 0.00843920651823282, 0.00555692752823234, 0.00735494447872043, 0.00465741287916899, 0.00490794377401471, 0.00502766901627183, 0.00573808047920465, 0.00625903997570276, 0.00474762823432684, 0.00532649829983711, 0.00561450188979506, 0.00430314289405942, 0.00516920164227486, 0.00568541046231985, 0.00651571061462164, 0.00544468918815255, 0.00637930957600474, 0.00586682558059692, 0.00688726548105478, 0.00458884751424193, 0.00566101353615522, 0.0065612499602139, 0.00469837430864573, 0.00793872494250536, 0.00709939422085881, 0.00608942192047834, 0.00647000083699822, 0.00434147799387574, 0.00706943776458502, 0.00556845124810934, 0.00615394534543157, 0.00602188054472208, 0.00756273558363318, 0.00500610750168562, 0.0066427756100893, 0.00741224782541394, 0.00684621650725603, 0.00640238774940372, 0.0044902884401381, 0.0066172881051898, 0.00514769833534956, 0.00488305510953069, 0.00641423696652055, 0.00656964955851436, 0.0037015846464783, 0.00779214175418019, 0.00848069507628679, 0.00691433669999242, 0.00708270305767655, 0.00401476258412004, 0.00394972134381533, 0.00673358934000134, 0.00835242122411728, 0.00655990885570645, 0.0065441969782114, 0.00508986366912723, 0.00713675981387496, 0.00665957015007734, 0.00537216104567051, 0.0052851028740406, 0.00629335595294833, 0.00449289847165346, 0.00506968377158046, 0.00522540183737874, 0.00653750821948051, 0.00745484558865428, 0.00419906247407198, 0.00526988506317139, 0.00410761684179306, 0.00690695317462087, 0.0061582513153553, 0.00627254508435726, 0.00619006622582674, 0.00665991241112351, 0.00510775530710816, 0.00600498775020242, 0.00602733856067061, 0.00775255262851715, 0.00400205701589584, 0.00550087867304683, 0.00554272066801786, 0.00856957584619522, 0.00603847065940499, 0.00626587448641658, 0.00579685717821121, 0.00622757710516453, 0.00515709957107902, 0.00662976317107677, 0.00791250355541706, 0.00777816399931908, 0.00614371849223971, 0.00611782446503639, 0.00763455173000693, 0.0042701568454504, 0.00519668031483889, 0.00744224758818746, 0.00418372452259064, 0.00376880471594632, 0.00725685292854905, 0.0055275084450841, 0.00541341211646795, 0.00925368815660477, 0.00672141322866082, 0.00759086338803172, 0.00364556489512324, 0.00715593388304114, 0.00666727963835001, 0.0049770618788898, 0.00559259951114655, 0.00679858820512891, 0.00718778790906072, 0.00292489444836974, 0.0059261042624712, 0.00586926750838757, 0.00411250302568078, 0.0044932970777154, 0.00820204894989729, 0.00510795554146171, 0.00606900174170732, 0.0040928777307272, 0.00702647212892771, 0.00561192445456982, 0.00474239559844136, 0.00474713649600744, 0.00399297848343849, 0.00505559658631682, 0.00382958888076246, 0.00700517883524299, 0.00876997504383326, 0.00688261073082685, 0.00634922413155437, 0.00624379236251116, 0.0064112157560885, 0.0059784366749227, 0.00679879495874047, 0.00531498761847615, 0.00685116974636912, 0.00520919775590301, 0.010762088932097, 0.00487386807799339, 0.00507889129221439, 0.00644256733357906, 0.00690107652917504, 0.00581151340156794, 0.00510448217391968, 0.00556179927662015, 0.00595525605604053, 0.00436638901010156, 0.00515803368762136, 0.00613015983253717, 0.00634821457788348, 0.00464964797720313, 0.00414255168288946, 0.00820674374699593, 0.00701707322150469, 0.0057143154554069, 0.00778600666671991, 0.00564544182270765, 0.00548223359510303, 0.00428913440555334, 0.00573142385110259, 0.00544397300109267, 0.00748492637649179, 0.00459665898233652, 0.0041541950777173, 0.00589101249352098, 0.00498272618278861, 0.00424699811264873, 0.00544488150626421, 0.00947023183107376, 0.00471543380990624, 0.00446477113291621, 0.00506784999743104, 0.00868814997375011, 0.00401704339310527, 0.00623715575784445, 0.00667983153834939, 0.00814434885978699, 0.00422570295631886, 0.00533620733767748, 0.00701233791187406, 0.00424391962587833, 0.00697663379833102, 0.00416508736088872, 0.00630774535238743, 0.0083657018840313, 0.00540125370025635, 0.00455044629052281, 0.0047956695780158, 0.00471522472798824, 0.00537411402910948, 0.0060156062245369, 0.00511542847380042, 0.0048595299012959, 0.00359827559441328, 0.00545329274609685, 0.0075417859479785, 0.00462228385731578, 0.00587158836424351, 0.00544184725731611, 0.00495415134355426, 0.00492942193523049, 0.00599904591217637, 0.00633423263207078, 0.00873698201030493, 0.00418205745518208, 0.00389168225228786, 0.00497511494904757, 0.00595958065241575, 0.00340168341062963, 0.00876782555133104, 0.00662738876417279, 0.00546799087896943, 0.00679851463064551, 0.00542806461453438, 0.00594408623874187, 0.00641645817086101, 0.00614024372771382, 0.00595150841400027, 0.00800011493265629, 0.00360565702430904, 0.00542051019147038, 0.00681297341361642, 0.00614929804578424, 0.00535028660669923, 0.00399670656770468, 0.00600452721118927, 0.0049882517196238 };
  static const int16_t buff_info_Conv2D_42_weights_inflated_270_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_512_8_3_3[] = { 512, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_512_8_3_3[] = { 512, 3, 3, 8 };
  static const float buff_info_Conv2D_49_weights_inflated_272_quant_scale[] = { 0.00407782755792141, 0.00927066151052713, 0.00684724329039454, 0.00687834806740284, 0.00863688066601753, 0.00562823005020618, 0.00818364135921001, 0.00904249306768179, 0.00530273607000709, 0.00874926894903183, 0.00523346103727818, 0.0079142190515995, 0.00886659044772387, 0.00851810537278652, 0.00691647501662374, 0.00873120687901974, 0.00718153780326247, 0.00762624898925424, 0.0108401253819466, 0.00793927721679211, 0.00768807018175721, 0.00840468890964985, 0.00789970718324184, 0.0102091198787093, 0.0113357929512858, 0.00843437761068344, 0.00786350201815367, 0.00858303811401129, 0.00743082538247108, 0.00563775794580579, 0.00695529859513044, 0.00775721715763211, 0.00595990289002657, 0.0103414747864008, 0.00801907200366259, 0.00696804700419307, 0.0082237645983696, 0.00999103952199221, 0.010196840390563, 0.00710869301110506, 0.00660386448726058, 0.00590685289353132, 0.00682371901348233, 0.0106111532077193, 0.00698296073824167, 0.00666337553411722, 0.00385378487408161, 0.00515739759430289, 0.00638678716495633, 0.00806804746389389, 0.00666991854086518, 0.00741028320044279, 0.013541741296649, 0.00827698223292828, 0.0109114395454526, 0.00477352784946561, 0.00442861765623093, 0.00848767999559641, 0.00702793337404728, 0.00658078212291002, 0.0068440898321569, 0.00564720295369625, 0.00648477301001549, 0.00703477626666427, 0.0106683550402522, 0.00810849573463202, 0.00888064876198769, 0.0103131709620357, 0.00673911906778812, 0.00612674187868834, 0.00496202055364847, 0.00882030371576548, 0.0116217816248536, 0.00730933295562863, 0.00789280235767365, 0.00599569594487548, 0.00867570750415325, 0.00924713537096977, 0.00702092703431845, 0.00514551345258951, 0.00809208024293184, 0.00659293355420232, 0.0118151856586337, 0.00780288595706224, 0.00844052527099848, 0.00730211567133665, 0.00762048410251737, 0.00704668695107102, 0.00830404832959175, 0.00618216628208756, 0.00808964017778635, 0.00860048364847898, 0.00848142802715302, 0.00342517369426787, 0.010146863758564, 0.00920705962926149, 0.00788752175867558, 0.00598916597664356, 0.00816653296351433, 0.00657792249694467, 0.00665337732061744, 0.00429635727778077, 0.00687131378799677, 0.00701744994148612, 0.0100921560078859, 0.00794448051601648, 0.00960644707083702, 0.0101593751460314, 0.00580757344141603, 0.00813578814268112, 0.00473893992602825, 0.00807397719472647, 0.00944930408149958, 0.00475969957187772, 0.00874481350183487, 0.00657826568931341, 0.00563713861629367, 0.00623017875477672, 0.00565675925463438, 0.00659914314746857, 0.00573104666545987, 0.00533563550561666, 0.00888014864176512, 0.00764790503308177, 0.0100931813940406, 0.0075792376883328, 0.0091052670031786, 0.00919046904891729, 0.0080053536221385, 0.00632927054539323, 0.0105677787214518, 0.00477630039677024, 0.00605843029916286, 0.00698043871670961, 0.0109169632196426, 0.00858826283365488, 0.00838032364845276, 0.00508580077439547, 0.0062317973934114, 0.00535706989467144, 0.00757073890417814, 0.00668144598603249, 0.0054380027577281, 0.00761309126392007, 0.00756660429760814, 0.006051538977772, 0.0053905718959868, 0.00791813433170319, 0.00666711060330272, 0.00782791059464216, 0.0061960113234818, 0.00825900305062532, 0.00439692009240389, 0.00880896952003241, 0.00735412538051605, 0.00977042410522699, 0.00810024701058865, 0.00691050011664629, 0.00387111376039684, 0.00748138362541795, 0.00528748985379934, 0.00640969863161445, 0.00643261196091771, 0.006370450835675, 0.00542856473475695, 0.00632192846387625, 0.00447028363123536, 0.00825646333396435, 0.00613967096433043, 0.00727420346811414, 0.00940671004354954, 0.00667140493169427, 0.0058129234239459, 0.00629421742632985, 0.00721766985952854, 0.00681744096800685, 0.00659125298261642, 0.0105167860165238, 0.00755576975643635, 0.00412335898727179, 0.00809682719409466, 0.00971732847392559, 0.00737520260736346, 0.00797217432409525, 0.00771325826644897, 0.00553866289556026, 0.00779378600418568, 0.0068094814196229, 0.00923081766813993, 0.00632585724815726, 0.00468464614823461, 0.00492436671629548, 0.0100295599550009, 0.00674634659662843, 0.00559631967917085, 0.00525902211666107, 0.00700739165768027, 0.00620143720880151, 0.00573568791151047, 0.00978250522166491, 0.00767684681341052, 0.00708743697032332, 0.00819349382072687, 0.0102224610745907, 0.00592219503596425, 0.00747642340138555, 0.00451973034068942, 0.00673798052594066, 0.00631281035020947, 0.00639871973544359, 0.00782832875847816, 0.00477191060781479, 0.0097626531496644, 0.0103933550417423, 0.00824166927486658, 0.00529129523783922, 0.00713585689663887, 0.00750581920146942, 0.00543235102668405, 0.00751517759636045, 0.00573693681508303, 0.00846798438578844, 0.0096431253477931, 0.00742337666451931, 0.00836419966071844, 0.00820951443165541, 0.00840217340737581, 0.0104230139404535, 0.00873637665063143, 0.00809540972113609, 0.00919508282095194, 0.00702407490462065, 0.00935889594256878, 0.00885096844285727, 0.00568188494071364, 0.00391499791294336, 0.00743416044861078, 0.00700920773670077, 0.00938442070037127, 0.0103206112980843, 0.00665588350966573, 0.00526441028341651, 0.0065604099072516, 0.00650125276297331, 0.00835689809173346, 0.00622939271852374, 0.00633491016924381, 0.00903394911438227, 0.00794066023081541, 0.00729907536879182, 0.00792496837675571, 0.00601525139063597, 0.00765757448971272, 0.00472487090155482, 0.00927149690687656, 0.00866643059998751, 0.00901935528963804, 0.00701186200603843, 0.00488652614876628, 0.00389167270623147, 0.00885837059468031, 0.00609001377597451, 0.00871689897030592, 0.0108994897454977, 0.00744565576314926, 0.00706702331081033, 0.00660721492022276, 0.0066613438539207, 0.00696096708998084, 0.00705808447673917, 0.00689877895638347, 0.00586388818919659, 0.00830585137009621, 0.0108035048469901, 0.00614065118134022, 0.00879301689565182, 0.00626695528626442, 0.00982100609689951, 0.00611026724800467, 0.00554031366482377, 0.00778128486126661, 0.00690618483349681, 0.00726526137441397, 0.00717638293281198, 0.00509787863120437, 0.00685868039727211, 0.00881427619606256, 0.00746328523382545, 0.00586075382307172, 0.0115177091211081, 0.00850007310509682, 0.00574056804180145, 0.00848786253482103, 0.00700588477775455, 0.00780933070927858, 0.00521915219724178, 0.00965635571628809, 0.00760973989963531, 0.00764208240434527, 0.00715269520878792, 0.00658917287364602, 0.0045579606667161, 0.00509561784565449, 0.00815774966031313, 0.00850682705640793, 0.00839357730001211, 0.00608622236177325, 0.00653199525550008, 0.0057861884124577, 0.011865321546793, 0.00372669729404151, 0.00948804523795843, 0.00614273129031062, 0.00941699277609587, 0.00673148548230529, 0.00783240143209696, 0.00615871977061033, 0.0088085038587451, 0.00848711282014847, 0.00955728720873594, 0.00525014288723469, 0.00441809138283134, 0.00398475537076592, 0.00858015287667513, 0.00637666508555412, 0.00797047466039658, 0.00807392597198486, 0.00448508094996214, 0.00812985375523567, 0.0114115504547954, 0.00577397458255291, 0.00934834126383066, 0.00854926370084286, 0.0093686617910862, 0.0055000688880682, 0.00470300577580929, 0.00587682472541928, 0.00805650278925896, 0.00816080998629332, 0.00601771660149097, 0.00927693583071232, 0.0066162683069706, 0.00992892496287823, 0.0079679936170578, 0.00619971333071589, 0.00758360791951418, 0.00843272637575865, 0.0061654788441956, 0.00594854727387428, 0.00639864103868604, 0.00637478521093726, 0.00714691029861569, 0.0112652219831944, 0.00880822632461786, 0.0106193609535694, 0.00613711681216955, 0.00642400700598955, 0.00625379802659154, 0.00848689675331116, 0.0102997925132513, 0.00470662163570523, 0.00905269477516413, 0.00440440559759736, 0.00579244317486882, 0.0114011382684112, 0.00551169039681554, 0.00474073830991983, 0.00481666717678308, 0.00887955166399479, 0.0050018229521811, 0.00935724005103111, 0.00698474375531077, 0.0034338878467679, 0.00895056594163179, 0.00784087367355824, 0.00932876765727997, 0.00567134749144316, 0.00816425215452909, 0.00647399434819818, 0.00841864012181759, 0.00879459735006094, 0.00969353783875704, 0.00585232907906175, 0.00680333748459816, 0.00596869131550193, 0.0073026823811233, 0.0112912878394127, 0.00662263296544552, 0.00795433577150106, 0.010424742475152, 0.0078854663297534, 0.00595491705462337, 0.00950626935809851, 0.0069398102350533, 0.00916087813675404, 0.0080469036474824, 0.00978516135364771, 0.00842337962239981, 0.00646007992327213, 0.00657941726967692, 0.01274742372334, 0.00479807518422604, 0.00729160197079182, 0.0118753518909216, 0.00948278978466988, 0.00805977638810873, 0.00806356687098742, 0.0100605934858322, 0.00712536415085196, 0.0107972091063857, 0.00739862024784088, 0.00822332222014666, 0.00397029193118215, 0.00487179774791002, 0.0084910849109292, 0.00929004140198231, 0.00558273866772652, 0.0089851375669241, 0.00716214021667838, 0.00605723168700933, 0.00997698400169611, 0.00814169086515903, 0.0069828424602747, 0.00581551529467106, 0.00962123740464449, 0.00738434121012688, 0.00902158115059137, 0.00786670483648777, 0.00894987396895885, 0.00742065347731113, 0.00792584754526615, 0.00526476884260774, 0.00510021392256021, 0.00685268128290772, 0.00480651576071978, 0.00597494002431631, 0.00584350386634469, 0.00716995447874069, 0.00851612351834774, 0.00518568651750684, 0.00656214123591781, 0.00597785878926516, 0.00768999336287379, 0.00921143870800734, 0.00569097045809031, 0.00727994507178664, 0.00463289069011807, 0.00536072719842196, 0.0103015005588531, 0.00481157097965479, 0.00540515081956983, 0.00788247305899858, 0.00625189580023289, 0.00471527548506856, 0.00868433248251677, 0.0120451636612415, 0.00566249433904886, 0.00486201234161854, 0.00554217025637627, 0.00999415386468172, 0.00524829095229506, 0.00575322471559048, 0.0109405480325222, 0.00727333966642618, 0.00659631472080946, 0.00718393456190825, 0.00537093682214618, 0.0107170529663563, 0.00568923400714993, 0.00607419433072209, 0.00822822377085686, 0.0118727907538414, 0.00810724310576916, 0.00838643033057451, 0.010212673805654, 0.00939912721514702, 0.00663281558081508, 0.00553943729028106, 0.0101418681442738, 0.00702120922505856, 0.00660814298316836, 0.00761574460193515, 0.0052446722984314, 0.00946681201457977, 0.0102946599945426, 0.00533723691478372, 0.00596193270757794, 0.00875556282699108, 0.00755222048610449, 0.00736964121460915, 0.00903213862329721, 0.00615753373131156, 0.00681304279714823, 0.00602364633232355, 0.0074564884416759, 0.00743820797652006, 0.00568093080073595, 0.0103669473901391, 0.0108423111960292, 0.010120265185833, 0.00527238938957453, 0.00697707524523139, 0.00592341087758541, 0.00672654155641794, 0.00656378688290715, 0.00922878738492727, 0.0130990287289023, 0.0093567194417119, 0.00998249929398298, 0.00776787707582116, 0.00480331759899855, 0.00710842525586486 };
  static const int16_t buff_info_Conv2D_49_weights_inflated_272_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_56_weights_inflated_274_quant_scale[] = { 0.00669452594593167, 0.00614319089800119, 0.0109586846083403, 0.00549806328490376, 0.00658065732568502, 0.00665272865444422, 0.00628142943605781, 0.00683728512376547, 0.00548445666208863, 0.00613831356167793, 0.00634245527908206, 0.00691385287791491, 0.00576774310320616, 0.00695479474961758, 0.00713124079629779, 0.00903557147830725, 0.00669356202706695, 0.00952857825905085, 0.00793448835611343, 0.00606096163392067, 0.00929888244718313, 0.00702224113047123, 0.00400827918201685, 0.00702572241425514, 0.00788280740380287, 0.00707106804475188, 0.00521231768652797, 0.00665275938808918, 0.00755104748532176, 0.00659195380285382, 0.00644417759031057, 0.00648701097816229, 0.00627250224351883, 0.00742278480902314, 0.00570501992478967, 0.00578649714589119, 0.00797367189079523, 0.00574025698006153, 0.00378310470841825, 0.00547348335385323, 0.00621310621500015, 0.00586508214473724, 0.00567353283986449, 0.0103367725387216, 0.00600096443668008, 0.00886660348623991, 0.0103977834805846, 0.00619509583339095, 0.00767087424173951, 0.00481767253950238, 0.0083759892731905, 0.00446849828585982, 0.00496544037014246, 0.00577748287469149, 0.00585878267884254, 0.00949869677424431, 0.00682978751137853, 0.00796074699610472, 0.0043680933304131, 0.00646729348227382, 0.00712727895006537, 0.00564479315653443, 0.0101137459278107, 0.00789593160152435, 0.00623315060511231, 0.0104299001395702, 0.0070929154753685, 0.00859132129698992, 0.00782786961644888, 0.00650429679080844, 0.00764971924945712, 0.00614025536924601, 0.00586415315046906, 0.00806467421352863, 0.00662913080304861, 0.00514281168580055, 0.00735880713909864, 0.00742968963459134, 0.00436085416004062, 0.0096574230119586, 0.0103857610374689, 0.0101262824609876, 0.00567825138568878, 0.00451238173991442, 0.00937594380229712, 0.00759346084669232, 0.00529588712379336, 0.00553196994587779, 0.00671151326969266, 0.00668148137629032, 0.0062500792555511, 0.00811401195824146, 0.00798873789608479, 0.00565543537959456, 0.00621373113244772, 0.00483411271125078, 0.00583992945030332, 0.00920326262712479, 0.0126921068876982, 0.00663804914802313, 0.00783294532448053, 0.00737863127142191, 0.00696433847770095, 0.0064029642380774, 0.00757334101945162, 0.00749519281089306, 0.00725122494623065, 0.00796649139374495, 0.0045452225022018, 0.00627235369756818, 0.00593914277851582, 0.00721289310604334, 0.00653307279571891, 0.00799931958317757, 0.0072858058847487, 0.00671998178586364, 0.00595520483329892, 0.00747208530083299, 0.00651435973122716, 0.00896450504660606, 0.0110967047512531, 0.00475053722038865, 0.0116388574242592, 0.00737485941499472, 0.00733760185539722, 0.00726567953824997, 0.00779498927295208, 0.00682618981227279, 0.00540216919034719, 0.0131233287975192, 0.0049742367118597, 0.00600420916453004, 0.00522412825375795, 0.00621577957645059, 0.00472697941586375, 0.00712121278047562, 0.00802116375416517, 0.00513331405818462, 0.0064278463833034, 0.00572907598689198, 0.00738477380946279, 0.00625455984845757, 0.00632055662572384, 0.00582448206841946, 0.00669575110077858, 0.00424054684117436, 0.0056806649081409, 0.00721798464655876, 0.0060548004694283, 0.00706926872953773, 0.00679105194285512, 0.0137842325493693, 0.0058638621121645, 0.00653392961248755, 0.00733678787946701, 0.00735490350052714, 0.00551368063315749, 0.0090388972312212, 0.00531958322972059, 0.00858752895146608, 0.00434095691889524, 0.00537635618820786, 0.00743383634835482, 0.00837286002933979, 0.00893295835703611, 0.00568420439958572, 0.0089240875095129, 0.00703735696151853, 0.00610918598249555, 0.00910812895745039, 0.00645607430487871, 0.00766867492347956, 0.0065633743070066, 0.00546195963397622, 0.00456705968827009, 0.00553897814825177, 0.00937651190906763, 0.00829792954027653, 0.00797988381236792, 0.00709683634340763, 0.00696093263104558, 0.00679723033681512, 0.0105248754844069, 0.010358601808548, 0.00749652646481991, 0.00639087846502662, 0.013891426846385, 0.00665284739807248, 0.00562718790024519, 0.00662103202193975, 0.00492061488330364, 0.00906333886086941, 0.00593781983479857, 0.00636001536622643, 0.00727984216064215, 0.00628995057195425, 0.0065658139064908, 0.00633630668744445, 0.00665766326710582, 0.00693713873624802, 0.00740574719384313, 0.00494604278355837, 0.00620861956849694, 0.00437687523663044, 0.00510969385504723, 0.00371720548719168, 0.0153107782825828, 0.00939782243221998, 0.00613421387970448, 0.00620983121916652, 0.00676625035703182, 0.00950176361948252, 0.00518511887639761, 0.00872406642884016, 0.00642996234819293, 0.00513271149247885, 0.00642526103183627, 0.00853118114173412, 0.0112205846235156, 0.00851325131952763, 0.00564269069582224, 0.00647084508091211, 0.00657654041424394, 0.00852108094841242, 0.00447943294420838, 0.00623041903600097, 0.00650001689791679, 0.00647918228060007, 0.00819213595241308, 0.00561393052339554, 0.00412979442626238, 0.0061546596698463, 0.00631150417029858, 0.00665343645960093, 0.00744357518851757, 0.00463219312950969, 0.00706396112218499, 0.00679694442078471, 0.00699484813958406, 0.00695666251704097, 0.00603600917384028, 0.00724703492596745, 0.0071915197186172, 0.00650761043652892, 0.00874342210590839, 0.00645120302215219, 0.0123022897168994, 0.00733202323317528, 0.00526305194944143, 0.00941937882453203, 0.00738236866891384, 0.00512010417878628, 0.00588507950305939, 0.00535874580964446, 0.00625552423298359, 0.00832652486860752, 0.00663432804867625, 0.00894108414649963, 0.00616128137335181, 0.00588849140331149, 0.00632552476599813, 0.00634586298838258, 0.00450826529413462, 0.00631689885631204, 0.00956236105412245, 0.0122182164341211, 0.00700661214068532, 0.00522929104045033, 0.0105569697916508, 0.00638415291905403, 0.00735950376838446, 0.00656411377713084, 0.00677483575418591, 0.00634662201628089, 0.00577189913019538, 0.00914169289171696, 0.00757955713197589, 0.00725461076945066, 0.00647035846486688, 0.00801099091768265, 0.00699884025380015, 0.0081524234265089, 0.00668613985180855, 0.007938620634377, 0.00884025078266859, 0.0077223414555192, 0.00620231265202165, 0.0041272914968431, 0.00572926132008433, 0.00804748758673668, 0.00818426162004471, 0.00529493996873498, 0.00410293648019433, 0.00527645042166114, 0.00837133359164, 0.00525561394169927, 0.0120016383007169, 0.00709153618663549, 0.00560968648642302, 0.00595773756504059, 0.00483658304437995, 0.0071592703461647, 0.00627419259399176, 0.00833967048674822, 0.00550259137526155, 0.00794255081564188, 0.00839456170797348, 0.00793065689504147, 0.00513015640899539, 0.00544349290430546, 0.00699359737336636, 0.00827679503709078, 0.00728724850341678, 0.00656652310863137, 0.00518524833023548, 0.00674569373950362, 0.00585692329332232, 0.00821858365088701, 0.00562523026019335, 0.00726877758279443, 0.00540215196087956, 0.00452250521630049, 0.00733252661302686, 0.00583562208339572, 0.00462554395198822, 0.00433193566277623, 0.00691014993935823, 0.0101794516667724, 0.00700889248400927, 0.00749044818803668, 0.00649649277329445, 0.00844245869666338, 0.00776612246409059, 0.00548392022028565, 0.00558088906109333, 0.00469080824404955, 0.00602304609492421, 0.00696072168648243, 0.00623188260942698, 0.00580812897533178, 0.00505868718028069, 0.00660028867423534, 0.00547497486695647, 0.00493138702586293, 0.011526289395988, 0.00589993549510837, 0.00502455281093717, 0.00713596073910594, 0.00573238451033831, 0.0061618615873158, 0.00647735502570868, 0.00639701494947076, 0.00524577545002103, 0.00987504608929157, 0.0050735124386847, 0.00733632734045386, 0.00584499910473824, 0.00469002686440945, 0.00525622023269534, 0.00549883441999555, 0.00563834281638265, 0.00849538948386908, 0.00933559890836477, 0.00617323163896799, 0.00618041073903441, 0.00545226829126477, 0.00677618244662881, 0.00555480225011706, 0.00536342989653349, 0.00625217985361814, 0.00801247544586658, 0.00801100209355354, 0.00630630366504192, 0.00655021844431758, 0.00934961065649986, 0.00532905524596572, 0.00770414480939507, 0.00673362519592047, 0.00440178951248527, 0.00737063214182854, 0.00739234685897827, 0.00560210598632693, 0.00800012797117233, 0.00629832362756133, 0.00582633912563324, 0.0116677694022655, 0.00758408475667238, 0.00723910005763173, 0.00614161090925336, 0.00660083442926407, 0.00940388813614845, 0.00743288686499, 0.00440228404477239, 0.00817773584276438, 0.00633898237720132, 0.0074713509529829, 0.00387455383315682, 0.00611896486952901, 0.00714409491047263, 0.00650395499542356, 0.00716412253677845, 0.0101268347352743, 0.00719088595360518, 0.00874564051628113, 0.00598221318796277, 0.00633115042001009, 0.00778444996103644, 0.00657954765483737, 0.00767695344984531, 0.00908558163791895, 0.00464657926931977, 0.00775242829695344, 0.00404944084584713, 0.00408727955073118, 0.00672352919355035, 0.00599373830482364, 0.00664860708639026, 0.00949183758348227, 0.00886885356158018, 0.00823116488754749, 0.00704872189089656, 0.00627426942810416, 0.00737029127776623, 0.00559404818341136, 0.00759471533820033, 0.00531218759715557, 0.00766589073464274, 0.00794629193842411, 0.00499812234193087, 0.00704367971047759, 0.00800547190010548, 0.00756823737174273, 0.00649835914373398, 0.00524547137320042, 0.00997418258339167, 0.00689506949856877, 0.00658784713596106, 0.00595737667754292, 0.00648738676682115, 0.00593060022220016, 0.00552951963618398, 0.00422134064137936, 0.00750881433486938, 0.0108466390520334, 0.00824460107833147, 0.00768334930762649, 0.00651855487376451, 0.00806745421141386, 0.0074312943033874, 0.00641155289486051, 0.0101070152595639, 0.00605974020436406, 0.00464176945388317, 0.0101950177922845, 0.0101299593225121, 0.0102749718353152, 0.00623282976448536, 0.00585803482681513, 0.00513495365157723, 0.00782811269164085, 0.00565656181424856, 0.00613389862701297, 0.00636469619348645, 0.0046858424320817, 0.012994528748095, 0.00929817371070385, 0.00742029817774892, 0.0145011879503727, 0.00633199792355299, 0.0070888539776206, 0.0130165256559849, 0.0133224874734879, 0.0061286692507565, 0.00627148011699319, 0.00639283936470747, 0.00568565633147955, 0.0111392196267843, 0.00863634143024683, 0.00684027513489127, 0.00551955681294203, 0.00932952482253313, 0.0113829094916582, 0.00415382999926805, 0.00638113962486386, 0.00629684654995799, 0.00848778057843447, 0.00496540404856205, 0.0068946941755712, 0.00754396384581923, 0.00804463867098093, 0.00696177687495947, 0.00635738065466285, 0.00720329210162163, 0.00693303300067782, 0.00782196782529354, 0.0116335405036807, 0.00606305617839098, 0.00659646885469556, 0.00531979417428374, 0.00619213003665209, 0.00773713691160083, 0.00802485551685095, 0.0052487151697278, 0.00547448359429836, 0.00680903857573867, 0.0058466368354857, 0.00672968104481697, 0.0107012428343296, 0.00578161329030991, 0.00626773620024323, 0.00450440309941769, 0.0066813612356782 };
  static const int16_t buff_info_Conv2D_56_weights_inflated_274_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_63_weights_inflated_276_quant_scale[] = { 0.00865938328206539, 0.00727465189993382, 0.101144142448902, 0.00849766656756401, 0.0042453552596271, 0.00580300902947783, 0.00690357480198145, 0.00696236826479435, 0.00591398775577545, 0.00905433390289545, 0.0068090632557869, 0.00559417996555567, 0.00896954536437988, 0.0074611552990973, 0.00607154984027147, 0.00527755776420236, 0.00767950247973204, 0.00667683919891715, 0.00781557708978653, 0.00649428833276033, 0.00888708606362343, 0.0084929708391428, 0.00491828145459294, 0.00889608450233936, 0.00598541181534529, 0.00990179926156998, 0.00389079586602747, 0.00654909200966358, 0.0108095603063703, 0.00836485903710127, 0.0100108832120895, 0.00815615523606539, 0.00818769261240959, 0.00966273341327906, 0.00810347218066454, 0.00823333766311407, 0.00678673340007663, 0.00643839268013835, 0.00559776555746794, 0.00456561520695686, 0.00685393158346415, 0.00676700565963984, 0.00482112960889935, 0.00789966993033886, 0.00683042826130986, 0.00532063515856862, 0.010613557882607, 0.0119201438501477, 0.00399571191519499, 0.00703857326880097, 0.00794683117419481, 0.00841449853032827, 0.00703791435807943, 0.00966524239629507, 0.0104719027876854, 0.00786997936666012, 0.00622263038530946, 0.00808428600430489, 0.00722319493070245, 0.00614947220310569, 0.00820676051080227, 0.00626359740272164, 0.00631714519113302, 0.00838119350373745, 0.00784338545054197, 0.009566948749125, 0.00718334084376693, 0.00424810126423836, 0.0084496084600687, 0.00986029952764511, 0.00578055763617158, 0.00636874977499247, 0.00989131070673466, 0.00756909558549523, 0.0083643039688468, 0.00797821488231421, 0.00604345323517919, 0.00583395967260003, 0.00616361433640122, 0.00558828935027122, 0.00894703157246113, 0.00792513974010944, 0.0103669883683324, 0.00686586135998368, 0.00663414970040321, 0.00662997737526894, 0.00593044003471732, 0.00592835852876306, 0.0109243830665946, 0.0085485428571701, 0.00684795854613185, 0.00842840876430273, 0.00615287991240621, 0.00624856678768992, 0.00826564524322748, 0.00623153150081635, 0.00785565190017223, 0.00614959700033069, 0.00488702720031142, 0.00589246582239866, 0.00939610227942467, 0.00701103964820504, 0.0054429778829217, 0.00907512474805117, 0.0073403287678957, 0.00586633896455169, 0.005465776193887, 0.00680481269955635, 0.0109369521960616, 0.00554333720356226, 0.00632072705775499, 0.0102707045152783, 0.00644031772390008, 0.00514744222164154, 0.0105537604540586, 0.00693064415827394, 0.0072031756862998, 0.00594321032986045, 0.00546961603686213, 0.0054802387021482, 0.0103925839066505, 0.00648936908692122, 0.0118226325139403, 0.00679674837738276, 0.00772963184863329, 0.00985714886337519, 0.00548087852075696, 0.00559341814368963, 0.0074901171028614, 0.00860743876546621, 0.0119132362306118, 0.00769152911379933, 0.00574192870408297, 0.00824703928083181, 0.00563076371327043, 0.0113799441605806, 0.00736189261078835, 0.00589304277673364, 0.00565932411700487, 0.00647613639011979, 0.00850932206958532, 0.00623671477660537, 0.00641700671985745, 0.00799443107098341, 0.00373229081742465, 0.00556384306401014, 0.00733813364058733, 0.0112465498968959, 0.00795600563287735, 0.00508650811389089, 0.0060978508554399, 0.00532011082395911, 0.00719890277832747, 0.0132745839655399, 0.00755173340439796, 0.0075989393517375, 0.0067658806219697, 0.0053862426429987, 0.00582226784899831, 0.00878608319908381, 0.00705276196822524, 0.00352594186551869, 0.00577406724914908, 0.00754731614142656, 0.00672099273651838, 0.00688777398318052, 0.00635365210473537, 0.00535947550088167, 0.00842119008302689, 0.00672843540087342, 0.0060723228380084, 0.00811712257564068, 0.0054207774810493, 0.00769701739773154, 0.011979435570538, 0.00415044650435448, 0.00771725038066506, 0.00677115330472589, 0.00593798467889428, 0.00501348543912172, 0.0114492969587445, 0.0064342194236815, 0.00484737940132618, 0.00840879790484905, 0.00704789021983743, 0.00772791774943471, 0.00905570108443499, 0.00785085279494524, 0.010444063693285, 0.00608049752190709, 0.00490495003759861, 0.00610936479642987, 0.0061814091168344, 0.00774879613891244, 0.00595620879903436, 0.00472652167081833, 0.00530482083559036, 0.00795117020606995, 0.00946132186800241, 0.00685794092714787, 0.00620233174413443, 0.00581325450912118, 0.00815010722726583, 0.00642333971336484, 0.00914100836962461, 0.010714340955019, 0.00750734796747565, 0.00606503477320075, 0.00840528681874275, 0.00945165008306503, 0.0112126553431153, 0.00705910474061966, 0.00933057814836502, 0.00716368807479739, 0.00885072257369757, 0.00485131377354264, 0.00742612220346928, 0.00719856936484575, 0.00394418183714151, 0.00779414316639304, 0.00636969227343798, 0.00600157864391804, 0.00605887500569224, 0.00553172035142779, 0.00982371997088194, 0.00612840475514531, 0.0044086305424571, 0.0069878282956779, 0.00682848691940308, 0.00614403607323766, 0.00576969515532255, 0.00794785562902689, 0.00756775075569749, 0.00524168973788619, 0.00730932876467705, 0.00463942857459188, 0.00904721766710281, 0.00558333983644843, 0.00451473472639918, 0.0102121625095606, 0.0108708264306188, 0.00576157262548804, 0.00665759388357401, 0.00645678956061602, 0.0075590256601572, 0.0085527403280139, 0.00974571332335472, 0.00574430078268051, 0.00520220817998052, 0.0135670891031623, 0.00564521038904786, 0.00840784888714552, 0.00829665455967188, 0.00592329632490873, 0.00607586558908224, 0.00654776394367218, 0.00993660558015108, 0.00819585472345352, 0.00833223015069962, 0.00810668710619211, 0.00643599545583129, 0.00739993527531624, 0.00683478079736233, 0.00556100578978658, 0.00629458343610168, 0.00585214933380485, 0.00841256324201822, 0.00635096803307533, 0.00772206019610167, 0.00969159416854382, 0.00683605670928955, 0.00780883198603988, 0.00803142413496971, 0.00581388175487518, 0.00794700719416142, 0.00924304500222206, 0.00632817484438419, 0.0098527455702424, 0.00887615978717804, 0.00414625881239772, 0.00685749109834433, 0.00513512175530195, 0.00647302158176899, 0.00972334295511246, 0.00701216096058488, 0.00860875472426414, 0.0060272878035903, 0.00680315820500255, 0.00997315999120474, 0.00703021325170994, 0.00732975313439965, 0.00674585439264774, 0.00697190221399069, 0.00814178306609392, 0.00963781587779522, 0.00636031432077289, 0.00760114286094904, 0.00654817838221788, 0.00554643431678414, 0.00770825752988458, 0.00844731274992228, 0.00452433945611119, 0.0121889160946012, 0.00745603255927563, 0.00893299095332623, 0.00504581723362207, 0.0120874606072903, 0.00557390134781599, 0.00523336743935943, 0.00570293981581926, 0.00582470605149865, 0.00734882801771164, 0.0161565598100424, 0.0052801501005888, 0.00735106552019715, 0.00440682796761394, 0.00585135258734226, 0.00660900957882404, 0.00576843181625009, 0.00630176393315196, 0.00589490868151188, 0.00568713480606675, 0.00714094424620271, 0.0053283954039216, 0.0114070046693087, 0.0066049569286406, 0.00535193923860788, 0.00677180988714099, 0.0131670273840427, 0.00575922802090645, 0.00466887326911092, 0.012452588416636, 0.00610307510942221, 0.00523360818624496, 0.00538588687777519, 0.00497371237725019, 0.00833385437726974, 0.00576394191011786, 0.0059993602335453, 0.00696372520178556, 0.00582240102812648, 0.00805437378585339, 0.00738562969490886, 0.00734595861285925, 0.00599541561678052, 0.00575904687866569, 0.0097951851785183, 0.00636595766991377, 0.00610189279541373, 0.00879700854420662, 0.0057401517406106, 0.00773594342172146, 0.0119373053312302, 0.00552225997671485, 0.00864985026419163, 0.00477202283218503, 0.00761565146967769, 0.00806940626353025, 0.00742757599800825, 0.00932559464126825, 0.00949004758149385, 0.00528835784643888, 0.00779680907726288, 0.00758749293163419, 0.00811665412038565, 0.00897604413330555, 0.0048632500693202, 0.00547365518286824, 0.00825638137757778, 0.00827625021338463, 0.00670026382431388, 0.00561869097873569, 0.00493333162739873, 0.00544200744479895, 0.007058160379529, 0.00951065216213465, 0.00698890164494514, 0.00643271207809448, 0.0096981143578887, 0.00553199276328087, 0.00679802056401968, 0.00586073473095894, 0.0062649161554873, 0.00739856902509928, 0.00900160986930132, 0.00625203642994165, 0.0078933909535408, 0.00665838224813342, 0.00801847409456968, 0.00906424224376678, 0.00740518514066935, 0.00537946913391352, 0.00507186492905021, 0.00855879485607147, 0.00872259959578514, 0.00661050993949175, 0.0105348331853747, 0.00636956701055169, 0.00542597938328981, 0.00794809684157372, 0.00688683614134789, 0.0055736587382853, 0.00661857984960079, 0.00818366464227438, 0.00780691765248775, 0.00624190084636211, 0.00565654458478093, 0.0171001944690943, 0.00954821426421404, 0.00746679771691561, 0.00502450065687299, 0.00449057342484593, 0.00667668273672462, 0.00554913654923439, 0.00499817868694663, 0.0111013250425458, 0.00661117536947131, 0.00530056236311793, 0.00581734161823988, 0.00694757327437401, 0.00521979993209243, 0.00747677264735103, 0.00825027748942375, 0.00535365380346775, 0.00714368047192693, 0.00785061158239841, 0.00397305889055133, 0.00811350625008345, 0.00846954714506865, 0.00913435779511929, 0.00728169968351722, 0.00754807377234101, 0.00817221216857433, 0.00597706064581871, 0.0106475362554193, 0.00701667461544275, 0.00580727774649858, 0.0074483216740191, 0.00503509072586894, 0.00659531261771917, 0.00859404727816582, 0.00518308719620109, 0.00622938247397542, 0.00671133259311318, 0.00489244982600212, 0.00598630448803306, 0.00648150220513344, 0.00612591300159693, 0.00902221165597439, 0.00710127362981439, 0.00808684434741735, 0.00852973666042089, 0.00603552022948861, 0.00647781789302826, 0.00740075809881091, 0.00452998420223594, 0.00694252084940672, 0.00519490335136652, 0.00846623722463846, 0.0054531916975975, 0.00729997456073761, 0.0108509650453925, 0.00575984083116055, 0.00758470594882965, 0.0071124522946775, 0.00663246354088187, 0.0102002834901214, 0.00553806778043509, 0.00685914885252714, 0.00539914611726999, 0.0088311554864049, 0.00656437547877431, 0.00814821850508451, 0.00779911736026406, 0.0054816696792841, 0.00476263090968132, 0.00741127226501703, 0.00632743583992124, 0.00521019985899329, 0.00445385323837399, 0.0057820207439363, 0.0108954999595881, 0.0055701332166791, 0.00882369745522738, 0.00608491478487849, 0.00639272667467594, 0.00662790378555655, 0.00534046674147248, 0.00806265044957399, 0.00615663081407547, 0.00770191708579659, 0.00528852641582489, 0.011078018695116, 0.00870188046246767, 0.00685758562758565, 0.00656415149569511, 0.0083659952506423, 0.00701177725568414, 0.00522391218692064, 0.00762262288480997, 0.00852411240339279, 0.00622081384062767, 0.00510500464588404, 0.00653134984895587, 0.00796843133866787, 0.00733399065211415, 0.00591956451535225, 0.0124454880133271, 0.00524712121114135, 0.00574198504909873, 0.00557315535843372, 0.00996868405491114 };
  static const int16_t buff_info_Conv2D_63_weights_inflated_276_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_70_weights_inflated_278_quant_scale[] = { 0.0106844641268253, 0.00953424815088511, 0.00529497303068638, 0.00752302911132574, 0.00471420772373676, 0.00808830466121435, 0.00681335618719459, 0.00524776661768556, 0.00754856364801526, 0.00953977834433317, 0.00801987107843161, 0.00664164125919342, 0.00771568855270743, 0.00897606275975704, 0.00520728807896376, 0.00679215602576733, 0.00558341620489955, 0.00559609336778522, 0.00816483609378338, 0.00776308681815863, 0.00481820804998279, 0.00509413285180926, 0.00594282103702426, 0.0088947918266058, 0.00995541457086802, 0.00639046495780349, 0.00603255350142717, 0.00367109174840152, 0.00673806620761752, 0.00697487173601985, 0.00583685748279095, 0.00686634331941605, 0.00772499432787299, 0.00866787414997816, 0.00933283753693104, 0.00675848079845309, 0.00683313561603427, 0.0118828723207116, 0.00919680017977953, 0.0092842485755682, 0.0102953901514411, 0.00688627548515797, 0.00994757283478975, 0.00756271369755268, 0.00430465303361416, 0.0066505977883935, 0.00847436487674713, 0.0085102180019021, 0.00870432518422604, 0.00547904707491398, 0.00616769958287477, 0.00630121119320393, 0.0098671680316329, 0.0125910891219974, 0.0100086228922009, 0.00911426637321711, 0.00641061551868916, 0.00790688395500183, 0.00582507951185107, 0.00694749504327774, 0.00622991379350424, 0.00676090503111482, 0.00999564677476883, 0.00757808005437255, 0.0048791547305882, 0.0135485380887985, 0.00696397665888071, 0.00654307520017028, 0.00646172137930989, 0.00866522826254368, 0.00802858639508486, 0.00833417288959026, 0.00652058003470302, 0.00476173032075167, 0.00750676682218909, 0.00591049296781421, 0.00569506920874119, 0.00462011434137821, 0.00553579162806273, 0.00689485855400562, 0.00528303347527981, 0.00616709142923355, 0.00611454155296087, 0.00757191283628345, 0.00534413149580359, 0.00879983883351088, 0.0101765673607588, 0.00480461912229657, 0.00740710459649563, 0.0049920273013413, 0.00721210706979036, 0.00876609142869711, 0.00621314905583858, 0.0108269732445478, 0.00907677877694368, 0.00425121141597629, 0.00721953064203262, 0.00780946994200349, 0.00711390329524875, 0.00794777180999517, 0.00649897009134293, 0.00727661559358239, 0.00962693337351084, 0.00482444139197469, 0.00470676273107529, 0.00686170812696218, 0.00472299661487341, 0.00499972049146891, 0.00899741053581238, 0.00645801005885005, 0.0110208820551634, 0.00925957784056664, 0.00713810930028558, 0.00944664794951677, 0.00912155024707317, 0.00517301820218563, 0.00718847662210464, 0.00663028564304113, 0.00445747375488281, 0.00913636386394501, 0.00646688509732485, 0.00574105652049184, 0.00956822838634253, 0.00687095290049911, 0.00875622592866421, 0.00545956753194332, 0.00803093332797289, 0.0080369608476758, 0.00625703111290932, 0.0052779414691031, 0.00918915029615164, 0.00617794739082456, 0.00906454306095839, 0.00808874703943729, 0.00808119121938944, 0.0057118539698422, 0.00560230109840631, 0.00696146581321955, 0.00733740068972111, 0.00850070547312498, 0.00872887298464775, 0.00723856221884489, 0.00821502692997456, 0.00646495865657926, 0.00945255625993013, 0.00625699386000633, 0.00913851335644722, 0.00804286636412144, 0.00904008653014898, 0.00651712715625763, 0.00856489781290293, 0.00843245256692171, 0.00893140770494938, 0.005964913405478, 0.00878225266933441, 0.00600994843989611, 0.00636249734088778, 0.00714700622484088, 0.00659224856644869, 0.00634998129680753, 0.00644579855725169, 0.0101496698334813, 0.0114495819434524, 0.0064543099142611, 0.0121098533272743, 0.0071347625926137, 0.00620448729023337, 0.0051817623898387, 0.00650210818275809, 0.00830132327973843, 0.00514956470578909, 0.00796004477888346, 0.0060672047547996, 0.00702938856557012, 0.0060284729115665, 0.00882407743483782, 0.00557709624990821, 0.00474013341590762, 0.007012072019279, 0.00736998580396175, 0.00630392134189606, 0.0059150094166398, 0.00628230487927794, 0.00566327339038253, 0.00792551040649414, 0.00629917066544294, 0.00997336581349373, 0.00643075071275234, 0.00642542308196425, 0.0085735023021698, 0.00826130341738462, 0.00712526962161064, 0.0100030824542046, 0.00808332581073046, 0.00674563180655241, 0.00936720799654722, 0.00647618900984526, 0.00444154348224401, 0.00748376920819283, 0.00807105842977762, 0.00684321252629161, 0.00622664578258991, 0.00704709673300385, 0.00587918097153306, 0.00646251952275634, 0.00660558603703976, 0.0154549879953265, 0.00545044708997011, 0.00838385708630085, 0.00504806451499462, 0.00616588490083814, 0.00678740115836263, 0.0055600912310183, 0.00688450643792748, 0.00833399780094624, 0.00792974140495062, 0.00627387734130025, 0.00569243496283889, 0.00994354765862226, 0.0059310095384717, 0.00667190784588456, 0.00969660840928555, 0.00666317949071527, 0.00604540621861815, 0.00695119006559253, 0.00690568378195167, 0.0101084588095546, 0.00726802228018641, 0.010070008225739, 0.00654930295422673, 0.0043252999894321, 0.00649093696847558, 0.00606275768950582, 0.00833923369646072, 0.00991780683398247, 0.00772077823057771, 0.00776796508580446, 0.00641441578045487, 0.00982685852795839, 0.00497299991548061, 0.0134485438466072, 0.00691038928925991, 0.00817413721233606, 0.00575471855700016, 0.00721283769235015, 0.00639550667256117, 0.00631924299523234, 0.00806924793869257, 0.0093958517536521, 0.00765462359413505, 0.00824790354818106, 0.00573253445327282, 0.00898685585707426, 0.00816601421684027, 0.00823814328759909, 0.00666035106405616, 0.00688331201672554, 0.0091408733278513, 0.0100943315774202, 0.00486725103110075, 0.00794523768126965, 0.00593207497149706, 0.00733626075088978, 0.00630242517217994, 0.00871695764362812, 0.00542288646101952, 0.00873573403805494, 0.00744044780731201, 0.00560264009982347, 0.00627146335318685, 0.00797908287495375, 0.00657577812671661, 0.0100798672065139, 0.00647895643487573, 0.00858899857848883, 0.0075341397896409, 0.00772202527150512, 0.0077110487036407, 0.00636282004415989, 0.0108110215514898, 0.00632734736427665, 0.00869195349514484, 0.0057250652462244, 0.00487932888790965, 0.00809911172837019, 0.00976292043924332, 0.00522532779723406, 0.00509941065683961, 0.00722076324746013, 0.0072044744156301, 0.00575233157724142, 0.0058667678385973, 0.00454877270385623, 0.00711463252082467, 0.00799340661615133, 0.00577663769945502, 0.0104148229584098, 0.0069044423289597, 0.00979605875909328, 0.00825836788862944, 0.00717348931357265, 0.00905742030590773, 0.00858267303556204, 0.0052672978490591, 0.00589035172015429, 0.00478976545855403, 0.00732245435938239, 0.00673386594280601, 0.00973423477262259, 0.00926082488149405, 0.0060848337598145, 0.00691562239080667, 0.00690992083400488, 0.0112752635031939, 0.00496894028037786, 0.0129599701613188, 0.0109162759035826, 0.0104920500889421, 0.00530163524672389, 0.00588571792468429, 0.00855162460356951, 0.0106122624129057, 0.00670440308749676, 0.00565579626709223, 0.00595020456239581, 0.00482869707047939, 0.005803098436445, 0.0063186171464622, 0.00808625668287277, 0.00737861171364784, 0.00605277810245752, 0.00768956681713462, 0.00548396212980151, 0.0058979275636375, 0.00584341771900654, 0.00663816882297397, 0.00817156117409468, 0.0148776583373547, 0.0049763941206038, 0.00786212924867868, 0.00706781540066004, 0.00511538051068783, 0.00728989532217383, 0.0120485099032521, 0.00712002767249942, 0.00750419776886702, 0.00573836546391249, 0.00906307436525822, 0.00905183143913746, 0.00658816378563643, 0.00658554071560502, 0.0102535365149379, 0.00891607627272606, 0.0111752590164542, 0.00608188845217228, 0.0084499791264534, 0.00745609449222684, 0.00840912666171789, 0.00524592772126198, 0.00841622054576874, 0.00727526284754276, 0.00607760949060321, 0.00981465354561806, 0.00792943779379129, 0.010620504617691, 0.0056651383638382, 0.00748952711001039, 0.01281653996557, 0.0045843068510294, 0.00841356627643108, 0.00766147393733263, 0.00841339863836765, 0.00764757348224521, 0.00551040098071098, 0.00931413285434246, 0.00882848910987377, 0.0056421859189868, 0.00555281061679125, 0.00682660052552819, 0.00650142598897219, 0.0101741049438715, 0.00519580207765102, 0.00496774539351463, 0.00878587272018194, 0.00813108030706644, 0.00741778686642647, 0.0108580300584435, 0.0128071894869208, 0.00816561654210091, 0.0046952199190855, 0.000217860477278009, 0.00588417332619429, 0.0106260795146227, 0.00522926868870854, 0.0107284653931856, 0.00683177495375276, 0.00707655353471637, 0.00552937248721719, 0.00602374505251646, 0.0117749404162169, 0.00819031335413456, 0.00571269262582064, 0.00616199942305684, 0.00918676890432835, 0.00637602619826794, 0.00400591408833861, 0.00884220376610756, 0.00435676658526063, 0.00563966482877731, 0.00516532966867089, 0.00454781204462051, 0.00635041343048215, 0.0072380150668323, 0.00564410723745823, 0.00670835701748729, 0.00777304079383612, 0.00680373841896653, 0.00730831129476428, 0.00556891178712249, 0.00524784903973341, 0.00690002180635929, 0.00492877420037985, 0.00663728825747967, 0.0059856534935534, 0.00711565045639873, 0.00832846015691757, 0.00588420266285539, 0.00880145840346813, 0.0080594327300787, 0.00726325297728181, 0.00689947279170156, 0.00786457862704992, 0.00997696444392204, 0.00921749789267778, 0.0121971797198057, 0.00812868122011423, 0.00851503293961287, 0.00913174729794264, 0.00936116836965084, 0.00675762630999088, 0.0065529914572835, 0.00679328944534063, 0.00636476697400212, 0.00471104308962822, 0.0116654746234417, 0.011164085008204, 0.00509165646508336, 0.00728604849427938, 0.00591050600633025, 0.00751866912469268, 0.00611102813854814, 0.00500813033431768, 0.00800345093011856, 0.00898473709821701, 0.00863079633563757, 0.00805167760699987, 0.00891205947846174, 0.0072543011046946, 0.00963605754077435, 0.00485214730724692, 0.00692509207874537, 0.00584951834753156, 0.00644124671816826, 0.00809987541288137, 0.00576306274160743, 0.00905217509716749, 0.0054896641522646, 0.00776866963133216, 0.00811059027910233, 0.00707225734367967, 0.0111310938373208, 0.00429377658292651, 0.00846485327929258, 0.00763460202142596, 0.00673502683639526, 0.00666484469547868, 0.00901958532631397, 0.00910712592303753, 0.00653985561802983, 0.00621856516227126, 0.00821088440716267, 0.00587565405294299, 0.00597619358450174, 0.00882637407630682, 0.00484654074534774, 0.00876278337091208, 0.00637003453448415, 0.00747178681194782, 0.00697870040312409, 0.00706675369292498, 0.00759978126734495, 0.00652779545634985, 0.00590343773365021, 0.00590234529227018, 0.00803697481751442, 0.00743656978011131, 0.00909528136253357, 0.00531966099515557, 0.0068028261885047, 0.00727546773850918, 0.00691954465582967, 0.00981927290558815, 0.00457052513957024, 0.0073370672762394, 0.00498877791687846, 0.0102109452709556, 0.00486901216208935, 0.00665496895089746, 0.00631789769977331, 0.00823413487523794, 0.00625938735902309, 0.00703273341059685 };
  static const int16_t buff_info_Conv2D_70_weights_inflated_278_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_77_weights_inflated_280_quant_scale[] = { 0.0124932778999209, 0.0175828505307436, 0.00770915439352393, 0.0131377270445228, 0.0090168435126543, 0.00498795369639993, 0.00479751359671354, 0.00611495785415173, 0.000372358394088224, 0.00614725705236197, 0.0150871854275465, 0.00877874158322811, 0.0056275986135006, 0.00511144055053592, 0.0111230621114373, 0.000529854209162295, 0.0108623094856739, 0.00936844758689404, 0.0102159157395363, 0.0130541799589992, 0.000832955818623304, 0.0115943877026439, 0.0118473833426833, 0.00673062074929476, 0.00702714361250401, 0.00584568548947573, 0.00763588817790151, 0.00913862604647875, 0.00466037821024656, 0.00721375038847327, 0.00686397263780236, 0.00840294826775789, 0.00599805405363441, 0.00783659983426332, 0.00058567215455696, 0.00847475975751877, 0.00884307082742453, 0.0068426514044404, 0.00496229948475957, 0.0102940183132887, 0.0061613810248673, 0.00604593520984054, 0.00733741791918874, 0.005316321272403, 0.00895646400749683, 0.00605996791273355, 0.00634964276105165, 0.000124145080917515, 0.00907373428344727, 0.0053320899605751, 0.011153313331306, 0.00750652654096484, 0.0115418182685971, 0.00879695173352957, 0.00603686040267348, 0.00863879360258579, 0.00722276465967298, 0.00722725410014391, 0.00485268281772733, 0.00587330386042595, 0.00310398382134736, 0.00892282649874687, 0.00644350470975041, 0.0116951446980238, 0.00829044915735722, 0.00660900445654988, 0.0113857453688979, 0.0087665356695652, 0.00842945836484432, 0.0061921589076519, 0.0070375120267272, 0.00566703779622912, 0.00970860105007887, 0.00696472451090813, 0.0071862475015223, 0.00976742617785931, 0.0072800456546247, 0.00554134184494615, 0.0115580372512341, 0.00497232144698501, 0.00552117312327027, 0.0061410553753376, 0.00871954392641783, 0.00829908810555935, 0.00626979535445571, 0.00542696379125118, 0.0104817124083638, 0.00853544380515814, 0.0141018265858293, 0.00685811974108219, 0.0111043713986874, 0.00791885424405336, 0.00718331057578325, 0.0110750636085868, 0.010872645303607, 0.00752730248495936, 0.00759082147851586, 0.00757028581574559, 0.00567129673436284, 0.00779378693550825, 0.00675217993557453, 0.00812461785972118, 0.0055340169928968, 0.00535117788240314, 0.00581057788804173, 0.0071600554510951, 0.0111602926626801, 0.00662693474441767, 0.00876208022236824, 0.00730409612879157, 0.00518722645938396, 0.0116104232147336, 0.0072037111967802, 0.00674876105040312, 0.00546331238001585, 0.0086322445422411, 0.00542207760736346, 0.00743986433371902, 0.00683714170008898, 0.00565603235736489, 0.0130908153951168, 0.00810403749346733, 0.000542708381544799, 0.00485726026818156, 0.00470486003905535, 0.0149740790948272, 0.00479510007426143, 0.00919185299426317, 0.00643843738362193, 0.00545933330431581, 0.00701354397460818, 0.00942589435726404, 0.012959323823452, 0.0103241913020611, 0.00749273644760251, 0.00501126516610384, 0.00489185750484467, 0.0064657824113965, 0.00659737316891551, 0.0037123765796423, 0.00938629545271397, 0.0077642691321671, 0.00600723084062338, 0.00642209034413099, 0.00498676346614957, 0.00578273693099618, 0.00690485490486026, 0.00605376344174147, 0.00540113355964422, 0.0132426647469401, 0.00604011956602335, 0.00414170324802399, 0.00773371523246169, 0.00820788834244013, 0.00603736285120249, 0.011498493142426, 0.00478703482076526, 0.00532315671443939, 0.00505853677168489, 0.0047922171652317, 0.0063643604516983, 0.00530674541369081, 0.00603170832619071, 0.00580962048843503, 0.00489490432664752, 0.00505733164027333, 0.00870378315448761, 0.00725163426250219, 0.00789324101060629, 0.0112207867205143, 0.00693216873332858, 0.00803153216838837, 0.00682514719665051, 0.00861833244562149, 0.0119509687647223, 0.00395865505561233, 0.0083928145468235, 0.00707295071333647, 0.00662299524992704, 0.004460324998945, 0.00528152054175735, 0.0126634072512388, 0.00673913303762674, 0.00587307475507259, 0.000249741890002042, 0.00896683521568775, 0.00624254439026117, 0.011402690783143, 0.00490290718153119, 0.013214441947639, 0.00585653865709901, 0.00962725188583136, 0.00711293704807758, 0.00797412171959877, 0.00545955542474985, 0.00619730493053794, 0.00775293679907918, 0.0103223193436861, 0.00581844104453921, 0.00633159419521689, 0.00433773128315806, 0.00476673385128379, 0.0113219507038593, 0.0140338502824306, 0.00736856320872903, 0.00520542496815324, 0.00759699055925012, 0.00434334296733141, 0.00629736017435789, 0.00666790315881371, 0.00952265877276659, 0.00721939327195287, 0.00716218166053295, 0.00448285695165396, 0.00653799483552575, 0.00584601517766714, 0.0079683531075716, 0.00649215746670961, 0.00543695734813809, 0.00678280368447304, 0.0119577767327428, 0.00957170687615871, 0.00609208224341273, 0.00609365478157997, 0.0115609439089894, 0.000207067423616536, 0.00790007878094912, 0.00894814915955067, 0.00773953227326274, 0.00460886536166072, 0.000287007394945249, 0.00632651755586267, 0.0060867378488183, 0.00758161768317223, 0.00523463450372219, 0.00760868890210986, 0.00975553132593632, 0.00956773851066828, 0.00742721976712346, 0.00688127800822258, 0.00508518051356077, 0.0135866673663259, 0.00791747681796551, 0.00809144321829081, 0.00689904438331723, 0.0155610181391239, 0.00715607078745961, 0.00995108298957348, 0.00664684642106295, 0.00560537399724126, 0.008156543597579, 0.0123398853465915, 0.00683722412213683, 0.00847748387604952, 0.0078723868355155, 0.0106058120727539, 0.0074947802349925, 0.00643011601641774, 0.0224371030926704, 0.00718384981155396, 0.00613443925976753, 0.00622604880481958, 0.00580815551802516, 0.00666899979114532, 0.00645246868953109, 0.0060229329392314, 0.00598866818472743, 0.000264679867541417, 0.00722378818318248, 0.00620910758152604, 0.00908512622117996, 0.00864666886627674, 0.00504234293475747, 0.00622505135834217, 0.00863901432603598, 0.00771576538681984, 0.0122169870883226, 0.0075491894967854, 0.00904965400695801, 0.0052219214849174, 0.00537547003477812, 0.00971448048949242, 0.00863278284668922, 0.00864584464579821, 0.0013665936421603, 0.0107959043234587, 0.00681693712249398, 0.00414981413632631, 0.00598328001797199, 0.00661690812557936, 0.00846820045262575, 0.0119445184245706, 0.00773082813248038, 0.0073224869556725, 0.00892802234739065, 0.00707107735797763, 0.00688678631559014, 0.00852408725768328, 0.00746595812961459, 0.00696636736392975, 0.00606925413012505, 0.0121624460443854, 0.0133177312090993, 0.00620708893984556, 0.0102402614429593, 0.00692707952111959, 0.00558474380522966, 0.00619061570614576, 0.00888209510594606, 0.00650807423517108, 0.00883433409035206, 0.0063031418249011, 0.00497400294989347, 0.00678697833791375, 0.00606451230123639, 0.00610544998198748, 0.0100468201562762, 0.0132569381967187, 0.00712426891550422, 0.0103767374530435, 0.00971684139221907, 0.00835719611495733, 0.0120137417688966, 0.00523491576313972, 0.00689334375783801, 0.00480485241860151, 0.00514030735939741, 0.00575005682185292, 0.00949020218104124, 0.00949800480157137, 0.00620517879724503, 0.00686169788241386, 0.000592185882851481, 0.0051592169329524, 0.00685010058805346, 0.00640697730705142, 0.00715983612462878, 0.00998589303344488, 0.00676042819395661, 0.0054646129719913, 0.0090740155428648, 0.00670273276045918, 0.0150572899729013, 0.00516375200822949, 0.00847219675779343, 0.00835957750678062, 0.00642018765211105, 0.00787132885307074, 0.00735741574317217, 0.00635787192732096, 0.00596629362553358, 0.00660409778356552, 0.00859498511999846, 0.00951218139380217, 0.00927813909947872, 0.00804572552442551, 0.00685001211240888, 0.00695711607113481, 0.00662310281768441, 0.00541545823216438, 0.0082037765532732, 0.000282377994153649, 0.00512735452502966, 0.00638546934351325, 0.00746380537748337, 0.00587574439123273, 0.00508721917867661, 0.00595137989148498, 0.00911484751850367, 0.00754089094698429, 0.0115438969805837, 0.00773580186069012, 0.00504562025889754, 0.00579498382285237, 0.00582570489495993, 0.00698021519929171, 0.00941954646259546, 0.00511524686589837, 0.00678323721513152, 0.0054051736369729, 0.00567236868664622, 0.00373948994092643, 0.0085004810243845, 0.0125119332224131, 0.00622103083878756, 0.00803894083946943, 0.00822196993976831, 0.00645619397982955, 0.0078423423692584, 0.00744570465758443, 0.00657455762848258, 0.00809355359524488, 0.00855677109211683, 0.00489741750061512, 0.00470940163359046, 0.00785220786929131, 0.00663735205307603, 0.00496358424425125, 0.00737896142527461, 0.00749277044087648, 0.00489716324955225, 0.0112935332581401, 0.00718813017010689, 0.00966872833669186, 0.0071598463691771, 0.00557171227410436, 0.00771282706409693, 0.00414198497310281, 0.0125686945393682, 0.00726545276120305, 0.00745811220258474, 0.0146411200985312, 0.00670196395367384, 0.00775422481819987, 0.00920388381928205, 0.00999198388308287, 0.00423797313123941, 0.0131832137703896, 0.00338610215112567, 0.000369705696357414, 0.00597392814233899, 0.0119285574182868, 0.00579876825213432, 0.00865718629211187, 0.00953282695263624, 0.00663007702678442, 0.0111424187198281, 0.000143411962199025, 0.00775271467864513, 0.0059272819198668, 0.00410118140280247, 0.00579730933532119, 0.00880694761872292, 0.00783875118941069, 0.0131763154640794, 0.00827044527977705, 0.00757002178579569, 0.00509902322664857, 0.00885674450546503, 0.00551705434918404, 0.00942649971693754, 0.00685102632269263, 0.0062595852650702, 0.00663096411153674, 0.00780603848397732, 0.0077909491956234, 0.00714864674955606, 0.00762888137251139, 0.00571178086102009, 0.00489152455702424, 0.00664568040519953, 0.00561424903571606, 0.0135064022615552, 0.0111597292125225, 0.00649309623986483, 0.00753098772838712, 0.00962311308830976, 0.00791064370423555, 0.000204976706299931, 0.00574873061850667, 0.014319802634418, 0.00777222216129303, 0.00581381609663367, 0.0067914891988039, 0.00801671016961336, 0.00859367102384567, 0.0124947940930724, 0.00474482029676437, 0.00948294345289469, 0.00527597218751907, 0.000879633822478354, 0.00774053717032075, 0.00733532290905714, 0.0103708887472749, 0.00760562065988779, 0.00610643299296498, 0.00675736973062158, 0.00981441326439381, 0.00685787061229348, 0.0069450275041163, 0.0109951170161366, 0.00629516923800111, 0.0057795001193881, 0.00841437838971615, 0.0189501773566008, 0.00768807763233781, 0.00982731394469738, 0.00791641045361757, 0.00567533634603024, 0.00548346573486924, 0.00468247383832932, 0.0101861692965031, 0.00527844298630953, 0.00457356916740537, 0.00588262220844626, 0.00659270491451025, 0.00833722110837698, 0.0133591461926699, 0.00571159552782774, 0.00805709697306156, 0.00439654290676117, 0.00733663747087121, 0.0138508621603251, 0.00852269120514393, 0.0117430603131652, 0.0161967538297176, 0.0066373678855598, 0.0054108421318233, 0.00711028138175607, 0.0064395465888083, 0.00626918720081449, 0.00620595598593354 };
  static const int16_t buff_info_Conv2D_77_weights_inflated_280_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const float buff_info_Conv2D_84_weights_inflated_282_quant_scale[] = { 0.013124761171639, 0.00929275248199701, 0.0150495264679193, 0.025361206382513, 0.00961276236921549, 0.000411512795835733, 0.0103117153048515, 0.00850826408714056, 0.0105156740173697, 0.00159657362382859, 0.00628375448286533, 0.0185219682753086, 0.00869878754019737, 0.0214188527315855, 0.0105060040950775, 0.0147344451397657, 0.00181465479545295, 0.0106443399563432, 0.0102257784456015, 0.00728381611406803, 0.0106094973161817, 0.000353297305991873, 0.00783611368387938, 0.0065374905243516, 0.00780954631045461, 0.000399653654312715, 0.00803018175065517, 0.00676956446841359, 0.00759223289787769, 0.0112112360075116, 0.0418084822595119, 0.0107839470729232, 0.000540793291293085, 0.0112526062875986, 0.00856037810444832, 0.00178372138179839, 0.00708609726279974, 0.00814286340028048, 0.0107541950419545, 0.0126794101670384, 0.0141966678202152, 0.00898117106407881, 0.00812304951250553, 0.000352138071320951, 0.000398521427996457, 0.00094016274670139, 0.0102751925587654, 0.00804691109806299, 0.0113556953147054, 0.0161995068192482, 0.0139814978465438, 0.000399323209421709, 0.000380417972337455, 0.013332306407392, 0.012156113050878, 0.00041102955583483, 0.00859082024544477, 0.00828315038233995, 0.0181358586996794, 0.0136213703081012, 0.0115624079480767, 0.00599299604073167, 0.0107776056975126, 0.00706326402723789, 0.0096359234303236, 0.000428299594204873, 0.00625069253146648, 0.0104576060548425, 0.0108990706503391, 0.0139057962223887, 0.00919124204665422, 0.00759887555614114, 0.0101674972102046, 0.0094337984919548, 0.00615202356129885, 0.0132770128548145, 0.006924360524863, 0.00972829665988684, 0.0130528695881367, 0.00719862757250667, 0.0272789634764194, 0.0207928512245417, 0.000601830775849521, 0.0079905791208148, 0.00871501117944717, 0.00921614840626717, 0.0172986723482609, 0.00061632803408429, 0.0117460573092103, 0.00955716893076897, 0.029849749058485, 0.00776003627106547, 0.000230069155804813, 0.00558037916198373, 0.0294401943683624, 0.00693040480837226, 0.012157148681581, 0.00695090647786856, 0.00330776558257639, 0.0132706239819527, 0.00664264429360628, 0.00987487472593784, 0.00852962490171194, 0.00886541418731213, 0.00770965730771422, 0.00583891337737441, 0.00930471904575825, 0.0164900440722704, 0.00497319595888257, 0.00856941286474466, 0.0111710475757718, 0.000431702879723161, 0.00765344966202974, 0.00958240870386362, 0.013904944062233, 0.0248151496052742, 0.00161046558059752, 0.0243999622762203, 0.0198205541819334, 0.00916625000536442, 0.00190996984019876, 0.00216220668517053, 0.00999606586992741, 0.00773904053494334, 0.00717459805309772, 0.014528026804328, 0.017675269395113, 0.0083157429471612, 0.00741557497531176, 0.0221856515854597, 0.0181733854115009, 0.0138502577319741, 0.020128395408392, 0.0119178369641304, 0.00508594652637839, 0.00638429494574666, 0.0101181380450726, 0.0127486549317837, 0.0358657501637936, 0.0123307472094893, 0.00742365140467882, 0.00864737294614315, 0.000337275268975645, 0.028180930763483, 0.00814969558268785, 0.0257558673620224, 0.0120874438434839, 0.0119166690856218, 0.0201800428330898, 0.0100116776302457, 0.00064985774224624, 0.0286462791264057, 0.0211565289646387, 0.0315020829439163, 0.0115343723446131, 0.0180587917566299, 0.00887102540582418, 0.0116070499643683, 0.000587143702432513, 0.0180928334593773, 0.0156428180634975, 0.000173002292285673, 0.00646955007687211, 0.00794126093387604, 0.0166871715337038, 0.0129891494289041, 0.0104639418423176, 0.0123595558106899, 0.0108793787658215, 0.00939498469233513, 0.00818661227822304, 0.0252782050520182, 0.0116293635219336, 0.0128401145339012, 0.0152269219979644, 0.00966710038483143, 0.0203161612153053, 0.00782790221273899, 0.0151699054986238, 0.0252124462276697, 0.00702982768416405, 0.0371648073196411, 0.0120584154501557, 0.0358607731759548, 0.00990586820989847, 0.0134834432974458, 0.0136891733855009, 0.0101496828719974, 0.000271125842118636, 0.00824413262307644, 0.00172866473440081, 0.0122855762019753, 0.00634019868448377, 0.0153539935126901, 0.000195846921997145, 0.0159971434623003, 0.00951597187668085, 0.00731703080236912, 0.00545011693611741, 0.000370328983990476, 0.000741563329938799, 0.00990184862166643, 0.00788629334419966, 0.00851999409496784, 0.0117708407342434, 0.00770430499687791, 0.00896257720887661, 0.0147865489125252, 0.0201707780361176, 0.0141026275232434, 0.0091025372967124, 0.0091630769893527, 0.00411555962637067, 0.00602122442796826, 0.0138203706592321, 0.0211743954569101, 0.0190430711954832, 0.0161319393664598, 0.00806413497775793, 0.0164830144494772, 0.0174400713294744, 0.0115096876397729, 0.0102867102250457, 0.0153712909668684, 0.0186327509582043, 0.0113607347011566, 0.00806064996868372, 0.016084523871541, 0.0107609769329429, 0.0156316794455051, 0.0110048614442348, 0.0131118996068835, 0.000911430106498301, 0.00879048276692629, 0.0122640738263726, 0.0244727842509747, 0.000570755742955953, 0.00786895677447319, 0.0117680821567774, 0.0403449460864067, 0.027488412335515, 0.00909986905753613, 0.0434394627809525, 0.00987859163433313, 0.00665022991597652, 0.0197171568870544, 0.02482402138412, 0.0153991710394621, 0.00762502662837505, 0.0138339176774025, 0.0104039246216416, 0.011178613640368, 0.0413217321038246, 0.0172629468142986, 0.00971908587962389, 0.00771760381758213, 0.0135178919881582, 0.0164088066667318, 0.0110613564029336, 0.0203458126634359, 0.00827890168875456, 0.00125513772945851, 0.014131254516542, 0.0104963835328817, 0.00048427376896143, 0.00388958770781755, 0.00114024919457734, 0.00104867678601295, 0.00912757962942123, 0.00783035717904568, 0.0138000659644604, 0.000372713140677661, 0.0102211851626635, 0.0163272246718407, 0.0128640374168754, 0.0303217377513647, 0.00731625128537416, 0.0147581864148378, 0.00102986337151378, 0.0118262693285942, 0.000393945432733744, 0.0131397927179933, 0.0150458142161369, 0.00946079380810261, 0.00963456276804209, 0.00635925447568297, 0.000781191629357636, 0.0112878978252411, 0.00882519036531448, 0.0147218909114599, 0.0215423256158829, 0.0185616463422775, 0.0332974642515182, 0.0209870170801878, 0.0238021723926067, 0.00199665618129075, 0.0106727536767721, 0.0115027306601405, 0.011834560893476, 0.0147745590656996, 0.0147490687668324, 0.0100270686671138, 0.0061954827979207, 0.00792072433978319, 0.000743635057006031, 0.00694557232782245, 0.0174956526607275, 0.00808892864733934, 0.0089698750525713, 0.0140065355226398, 0.0297988504171371, 0.00881181377917528, 0.0071681528352201, 0.0153507068753242, 0.0083192540332675, 0.0101421736180782, 0.0114782806485891, 0.0120687130838633, 0.0181890819221735, 0.0101538933813572, 0.00873693078756332, 0.0105085037648678, 0.00886127166450024, 0.0117350425571203, 0.0142793310806155, 0.000960377918090671, 0.00922395102679729, 0.00128650397527963, 0.0176570992916822, 0.0122773991897702, 0.00812965258955956, 0.0155227473005652, 0.0107394959777594, 0.000596766301896423, 0.0107926754280925, 0.014589536935091, 0.0138776507228613, 0.00078854215098545, 0.0090980464592576, 0.0113665582612157, 0.00848005618900061, 0.00940891820937395, 0.00900649931281805, 0.0225388947874308, 0.00862262956798077, 0.0107320491224527, 0.000460527226096019, 0.0123198237270117, 0.000367969478247687, 0.00767315085977316, 0.012034242041409, 0.000422788027208298, 0.0114375418052077, 0.0119171673431993, 0.000244307477260008, 0.00827824790030718, 0.00935474410653114, 0.02161605656147, 0.00813520047813654, 0.0213152375072241, 0.000523192924447358, 0.0117251742631197, 0.000456987792858854, 0.0147739090025425, 0.00104810309130698, 0.00974760018289089, 0.0116140153259039, 0.00589146465063095, 0.0152945509180427, 0.000343847146723419, 0.0126477908343077, 0.0098605640232563, 0.00640520500019193, 0.00901694502681494, 0.0283950828015804, 0.00885392818599939, 0.00926548987627029, 0.0241449754685163, 0.0101750688627362, 0.000710932887159288, 0.00271890382282436, 0.0141634689643979, 0.0124895414337516, 0.0158589575439692, 0.00922791566699743, 0.0131675219163299, 0.0120102614164352, 0.00331572722643614, 0.0185813419520855, 0.0072472607716918, 0.00705973105505109, 0.009855005890131, 0.0383381620049477, 0.00392967229709029, 0.000148238672409207, 0.0155270043760538, 0.00819300301373005, 0.0139144388958812, 0.00892011635005474, 0.000611736089922488, 0.010953513905406, 0.00649555725976825, 0.0119196409359574, 0.00742272194474936, 0.00672553200274706, 0.000740045739803463, 0.0146557642146945, 0.0228941962122917, 0.00180284946691245, 0.00987698137760162, 0.0112899821251631, 0.0125129334628582, 0.0161761026829481, 0.0170056894421577, 0.0170486904680729, 0.0131217828020453, 0.00983229372650385, 0.00900022406131029, 0.00053021393250674, 0.0105544487014413, 0.00757850194349885, 0.0297605376690626, 0.00806452333927155, 0.000663705752231181, 0.0179765429347754, 0.0222428198903799, 0.00900876335799694, 0.00275081628933549, 0.00633356999605894, 0.0105138216167688, 0.00757061364129186, 0.0139654129743576, 0.00808484572917223, 0.018521947786212, 0.0118342023342848, 0.00926847942173481, 0.013113372027874, 0.00880911946296692, 0.010744571685791, 0.00996421650052071, 0.0110027613118291, 0.0103353010490537, 0.0112603940069675, 0.000462474039522931, 0.01788897998631, 0.002262620953843, 0.0114048905670643, 0.00641394359990954, 0.0182902310043573, 0.00579445483162999, 0.000528586620930582, 0.0064480472356081, 0.0127062583342195, 0.01238470710814, 0.00802055466920137, 0.0213438849896193, 0.01385791413486, 0.0113146854564548, 0.00935417879372835, 0.00447372766211629, 0.00012996829173062, 0.000320337770972401, 0.0580503791570663, 0.00766828237101436, 0.0133840404450893, 0.012092943303287, 0.016474487259984, 0.0158730484545231, 0.0142437135800719, 0.0120221339166164, 0.00540701812133193, 0.0124555258080363, 0.00730646401643753, 0.0147247249260545, 0.00846195314079523, 0.0132573833689094, 0.00728772114962339, 0.00751789985224605, 0.000959121796768159, 0.0185310076922178, 0.015291447751224, 0.0143924811854959, 0.0277154482901096, 0.00798006635159254, 0.0177770368754864, 0.0129929380491376, 0.0187818668782711, 0.00940738525241613, 0.0216350071132183, 0.0161656960844994, 0.00948656350374222, 0.0202176868915558, 0.00796495750546455, 0.00988905224949121, 0.0138503154739738, 0.0116713289171457, 0.0125842224806547, 0.0215678960084915, 0.0161828342825174, 0.0246319267898798, 0.0121365562081337, 0.0112526314333081, 0.00845707394182682, 0.00597704714164138, 0.0117695489898324, 0.00875061191618443, 0.00765176583081484, 0.0115676112473011, 0.000173374384758063, 0.0205252207815647, 0.0185356661677361, 0.0314909666776657 };
  static const int16_t buff_info_Conv2D_84_weights_inflated_282_quant_offset[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
  static const uint32_t buff_info__shape_1024_8_3_3[] = { 1024, 3, 3, 8 };
  static const uint32_t buff_info__mem_shape_L_1024_8_3_3[] = { 1024, 3, 3, 8 };
  static const float buff_info_Conv2D_91_weights_inflated_284_quant_scale[] = { 0.00380828464403749, 0.000642681203316897, 0.000465685065137222, 0.00695748720318079, 0.000419802876422182, 0.00497387861832976, 0.00428650481626391, 0.000217420631088316, 0.00480466289445758, 0.000525710231158882, 0.00749079883098602, 0.00545570440590382, 0.00435154978185892, 0.00973556097596884, 0.00453506177291274, 0.00036043135332875, 0.000416776485508308, 0.0028395305853337, 0.00053477002074942, 0.00684113893657923, 0.00415178388357162, 0.00753315724432468, 0.000658803444821388, 0.0124885998666286, 0.000557607447262853, 0.00361449760384858, 0.00421462440863252, 0.00264609418809414, 0.00112429168075323, 0.00380878313444555, 0.00220766477286816, 0.00327944150194526, 0.00316214002668858, 0.000696739240083843, 0.00488116173073649, 0.0147379022091627, 0.00644283927977085, 0.00031532597495243, 0.000756240158807486, 0.000241875270148739, 0.00459770485758781, 0.00467829266563058, 0.00616731029003859, 0.000337733974447474, 0.00118832523003221, 0.00204146024771035, 0.00162431667558849, 0.00101100199390203, 0.00652152532711625, 0.000415681803133339, 0.0195142012089491, 0.000379201694158837, 0.000248893571551889, 0.00447271391749382, 0.00446826685220003, 0.000342858460498974, 0.000188586986041628, 0.00200489955022931, 0.0066754543222487, 0.00016446785593871, 0.00018493045354262, 0.000893286836799234, 0.000424111203756183, 0.000222597082029097, 0.00569920195266604, 0.00357766868546605, 0.00461316108703613, 0.00510051939636469, 0.000272787292487919, 0.00505362264811993, 0.00320414477027953, 0.000353035924490541, 0.000738735194317997, 0.000982849160209298, 0.0141309713944793, 0.000461141113191843, 0.000466920580947772, 0.000410334323532879, 0.00340698449872434, 0.00657841516658664, 0.000666887499392033, 0.000350159301888198, 0.000631076050922275, 0.0179933849722147, 0.00058217637706548, 0.0142202358692884, 0.00941600184887648, 0.00281702307984233, 0.00273343664593995, 0.00378563231788576, 0.00819339696317911, 0.000817090040072799, 0.00488231517374516, 0.00570257985964417, 0.000405880447942764, 0.00653938576579094, 0.00499894609674811, 0.00761163048446178, 0.000616940145846456, 0.00376352341845632, 0.0111074075102806, 0.00143096386454999, 0.00355203961953521, 0.00389118329621851, 0.00904711335897446, 0.00522033404558897, 0.00054269761312753, 0.000277522194664925, 0.00450993934646249, 0.000822631292976439, 0.000426280545070767, 0.000231421348871663, 0.000867662136442959, 0.00286734849214554, 0.000311079464154318, 0.00655522011220455, 0.00206086225807667, 0.00011312571587041, 0.00489693367853761, 0.00713775493204594, 0.000179922266397625, 0.0389570221304893, 0.00238729757256806, 0.00726349093019962, 0.000985298538580537, 0.00549609586596489, 0.000377373129595071, 0.00643386319279671, 0.000171729916473851, 0.00507334619760513, 0.0029177600517869, 0.027137752622366, 0.00355974584817886, 0.00507740769535303, 0.000951984373386949, 0.000264862028416246, 0.000284264737274498, 0.000670067383907735, 0.00503530958667397, 0.000408485386287794, 0.000400295160943642, 0.00363102462142706, 0.000395285431295633, 0.000830312259495258, 0.000245737377554178, 0.00497152283787727, 0.00651604356244206, 0.00506080547347665, 0.00176950125023723, 0.000796698732301593, 0.00400509219616652, 0.000558011990506202, 0.000355654687155038, 0.000356390228262171, 0.000317657220875844, 0.00420283479616046, 0.000223574534174986, 0.0074049667455256, 0.00068870501127094, 0.00351095059886575, 0.00420184899121523, 0.0055501707829535, 0.00109718402381986, 0.0061460305005312, 0.000996016315184534, 0.000738763599656522, 0.000754439737647772, 0.00427254242822528, 0.00288425432518125, 0.00036415399517864, 0.00513727823272347, 0.000339247635565698, 0.000743908633012325, 0.000224318457185291, 0.00544868828728795, 0.00475396076217294, 0.00776236178353429, 0.00067230430431664, 0.00374197028577328, 0.00851196143776178, 0.00491785258054733, 0.00857581943273544, 0.000383449078071862, 0.000647217791993171, 0.00222895736806095, 0.00891750678420067, 0.00521468929946423, 0.00566532090306282, 0.00219549424946308, 0.00430484162643552, 0.00022701162379235, 0.00816754065454006, 0.000250820739893243, 0.00358648039400578, 0.00150877027772367, 0.0011367523111403, 0.00277591752819717, 0.00554653722792864, 0.00638123275712132, 0.0061436933465302, 0.00767784845083952, 0.000614523072727025, 0.00442950800061226, 0.00492478627711535, 0.0107469726353884, 0.000676752883009613, 0.000566705188248307, 0.0145658953115344, 0.00697368010878563, 0.00137730943970382, 0.00386207248084247, 0.00403808429837227, 0.000481645518448204, 0.00621428433805704, 0.000725087942555547, 0.000254914775723591, 0.000685962964780629, 0.000345697248121724, 0.00249990657903254, 0.000276425358606502, 0.00109254324343055, 0.00136530166491866, 0.005041747353971, 0.00258049927651882, 0.00787924882024527, 0.000437458191299811, 0.000968550913967192, 0.0112074250355363, 0.000992150511592627, 0.000484176736790687, 0.000351371592842042, 0.00364425429143012, 0.00728638656437397, 0.0022874663118273, 0.000373367307474837, 0.000404816906666383, 0.000311008305288851, 0.00266921333968639, 0.000216877713683061, 0.000842244015075266, 0.0066862958483398, 0.00392336351796985, 0.00606732210144401, 0.00508512277156115, 0.00053609034512192, 0.000523397407960147, 0.00135885388590395, 0.00716257281601429, 0.00404264312237501, 0.00083864014595747, 0.000309879571432248, 0.00335033773444593, 0.00553682679310441, 0.000376968528144062, 0.00485507864505053, 0.000514857529196888, 0.00519738253206015, 0.00471009640023112, 0.00422704825177789, 0.00615821732208133, 0.00392845598980784, 0.000679665827192366, 0.00801304075866938, 0.00557682197540998, 0.00442182086408138, 0.00844453647732735, 0.00714409630745649, 0.00603306153789163, 0.0040135458111763, 0.00187216955237091, 0.000814032333437353, 0.0113463895395398, 0.00326372706331313, 0.00287762982770801, 0.00366955366916955, 0.000969383807387203, 0.00641188165172935, 0.00519068399444222, 0.00593871576711535, 0.000339812831953168, 0.00835677515715361, 0.00446717487648129, 0.0059588011354208, 0.00231030071154237, 0.00402846280485392, 0.00212743273004889, 0.00567089766263962, 0.00491392100229859, 0.000545707473065704, 0.000708417792338878, 0.00862534809857607, 0.00261848163791001, 0.00405133096501231, 0.00555253634229302, 0.0003908374637831, 0.000354989984771237, 0.00558868935331702, 0.004641093313694, 0.000733141205273569, 0.00532582914456725, 0.000241237983573228, 0.0026364226359874, 0.00190962012857199, 0.000339447549777105, 0.0125642651692033, 0.00631410162895918, 0.00533719873055816, 0.00491304788738489, 0.000372846290702, 0.000768057361710817, 0.0082381209358573, 0.0257669650018215, 0.00718410592526197, 0.00222000409848988, 0.000333612581016496, 0.00431919563561678, 0.000868890376295894, 0.00672496622428298, 0.000709985906723887, 0.000377191288862377, 0.000483695039292797, 0.00527304597198963, 0.000279959582258016, 0.00497412262484431, 0.00215839268639684, 0.000875992758665234, 0.00131255842279643, 0.00612063007429242, 0.00318611948750913, 0.000540054519660771, 0.00508459331467748, 0.00729800527915359, 0.000561851484235376, 0.00483559118583798, 0.000357439916115254, 0.0119783217087388, 0.000674644252285361, 0.00452122883871198, 0.00489035807549953, 0.000573815545067191, 0.00469782017171383, 0.00363619322888553, 0.00559080066159368, 0.00226166192442179, 0.00678046606481075, 0.000929344329051673, 0.000340319849783555, 0.00143248552922159, 0.00449496554210782, 0.00401035370305181, 0.00425203517079353, 0.00770257413387299, 0.00147787458263338, 0.000554014055524021, 0.00660757860168815, 0.00534868193790317, 0.000404244259698316, 0.00407149735838175, 0.000291696866042912, 0.00515219010412693, 0.000922906037885696, 0.000165508477948606, 0.000473955296911299, 0.00894397404044867, 0.00529269455000758, 0.00582094164565206, 0.0013636969961226, 0.00524340150877833, 0.00809571519494057, 0.00248785642907023, 0.00753878382965922, 0.00198229914531112, 0.00125585019122809, 0.00531052192673087, 0.00306047615595162, 0.00859783217310905, 0.000448183272965252, 0.00105371535755694, 0.000286771275568753, 0.00705055287107825, 0.00323684560135007, 0.00226395623758435, 0.00522532081231475, 0.00544202653691173, 0.000387526728445664, 0.00138623861130327, 0.00976139027625322, 0.000599644205067307, 0.00618049409240484, 0.00913125369697809, 0.000455530418548733, 0.000315110810333863, 0.000516593456268311, 0.00904978346079588, 0.0434664636850357, 0.00178519147448242, 0.00535523239523172, 0.00791361462324858, 0.00449698464944959, 0.000528908683918417, 0.000550229800865054, 0.00985052343457937, 0.000728820741642267, 0.00126925320364535, 0.0126744341105223, 0.00502987625077367, 0.00564522063359618, 0.00028552592266351, 0.00740725826472044, 0.00144556839950383, 0.00230581359937787, 0.00627795327454805, 0.00438394816592336, 0.00239795260131359, 0.000477282563224435, 0.000435426103649661, 0.000353801937308162, 0.00986883323639631, 0.00542820198461413, 0.00518082967028022, 0.00360977789387107, 0.00805170275270939, 0.000459996546851471, 0.00397897977381945, 0.000415054033510387, 0.000385711231501773, 0.0063405130058527, 0.00182706152554601, 0.00320317735895514, 0.000677641830407083, 0.000168381026014686, 0.0102188801392913, 0.000740347197279334, 0.000249892473220825, 0.000485196389490739, 0.00299919652752578, 0.000559045874979347, 0.00223125005140901, 0.00526009360328317, 0.00707030994817615, 0.000604948203545064, 0.00246314867399633, 0.000194755572010763, 0.00411846302449703, 0.0179498009383678, 0.000235276442253962, 0.0247059557586908, 0.00021224569354672, 0.00493097677826881, 0.00632573291659355, 0.000246664771111682, 0.00219248933717608, 0.000176835630554706, 0.000585409870836884, 0.00713218981400132, 0.00127026718109846, 0.00880131032317877, 0.00556644191965461, 0.000393436872400343, 0.00112962850835174, 0.00378723838366568, 0.000419502350268885, 0.0042623127810657, 0.00156029593199492, 0.00963106006383896, 0.000470716215204448, 0.00152963050641119, 0.00894259475171566, 0.0229640081524849, 0.00441828928887844, 0.000221442154725082, 0.00444907648488879, 0.00476161390542984, 0.00653854524716735, 0.000628150068223476, 0.00631635449826717, 0.0122060952708125, 0.00687786750495434, 0.00422503100708127, 0.00400721514597535, 0.00373373017646372, 0.000508246419485658, 0.00389674701727927, 0.000510170997586101, 0.00241733877919614, 0.00277099222876132, 0.000608047121204436, 0.00321794464252889, 0.000177081921719946, 0.00385307311080396, 0.000244133931118995, 0.00236958381719887, 0.000380004436010495, 0.0064839543774724, 0.00418384233489633, 0.00404602382332087, 0.000574758974835277, 0.000244328461121768, 0.000185368815436959, 0.000447383004939184, 0.000328014779370278, 0.00755930971354246, 0.00103440543171018, 0.00503371329978108, 0.00431820331141353, 0.00060619757277891, 0.00500957295298576, 0.000483241718029603, 0.00393577432259917, 0.000444865378085524, 0.00699095847085118, 0.00384986074641347, 0.000334295909851789, 0.002417296404019, 0.00294068059884012, 0.000333449046593159, 0.00467294920235872, 0.00514698540791869, 0.000827121431939304, 0.00167651264928281, 0.00668026600033045, 0.000213562976568937, 0.000312285468680784, 0.0136008271947503, 0.00215196120552719, 0.0118184629827738, 0.000483754149172455, 0.000328479945892468, 0.00430241785943508, 0.00615620799362659, 0.000735604378860444, 0.000189590602531098, 0.000231931058806367, 0.00101825501769781, 0.0112915690988302, 0.00662518106400967, 0.000659611658193171, 0.000101565463410225, 0.00491481460630894, 0.000426813465310261, 0.00525343464687467, 0.00298115191981196, 0.0127867180854082, 0.000827240117359906, 0.000516592350322753, 0.000373729999409989, 0.00679717073217034, 0.00472663668915629, 0.00183649687096477, 0.000401562312617898, 0.000305361463688314, 0.00475149042904377, 0.00104400631971657, 0.00493497913703322, 0.0106869312003255, 0.000326651177601889, 0.000262029701843858, 0.0198970194905996, 0.000505555770359933, 0.000220367015572265, 0.00605623610317707, 0.00355300633236766, 0.0053684008307755, 0.00067775888601318, 0.00133641122374684, 0.00241599301807582, 0.00420165341347456, 0.0113323964178562, 0.0121817523613572, 0.000249783392064273, 0.00019033307034988, 0.00483379885554314, 0.000340104015776888, 0.012500548735261, 0.00342720118351281, 0.00488951336592436, 0.00731816329061985, 0.00641935132443905, 0.00123780500143766, 0.000436881789937615, 0.00527302175760269, 0.00052008853526786, 0.0037090708501637, 0.00444903178140521, 0.00924698915332556, 0.000474589556688443, 0.000264570844592527, 0.000697110372129828, 0.000414537120377645, 0.0016952344449237, 0.00416276045143604, 0.000310660543618724, 0.00163122767116874, 0.00458382768556476, 0.00902403797954321, 0.000355957774445415, 0.000829282973427325, 0.00607996666803956, 0.00466946419328451, 0.00470307422801852, 0.00447589019313455, 0.00582990609109402, 0.00392869673669338, 0.000769556383602321, 0.000202325056307018, 0.00334131647832692, 0.00880889501422644, 0.00229954207316041, 0.00291907438077033, 0.0108507610857487, 0.00883846078068018, 0.0046859965659678, 0.000371931440895423, 0.000361651706043631, 0.00447889650240541, 0.00293670874089003, 0.00456336373463273, 0.0158945769071579, 0.000309521099552512, 0.000565814843866974, 0.000227690470637754, 0.000402115081669763, 0.00832743477076292, 0.000129093939904124, 0.00423194747418165, 0.0251861661672592, 0.000444036675617099, 0.00014546541206073, 0.0045839068479836, 0.000870058313012123, 0.000225436320761219, 0.000890852999873459, 0.000282121443888173, 0.000511462159920484, 0.00324664381332695, 0.00147627596743405, 0.0061258994974196, 0.00171695521567017, 0.00120167899876833, 0.000729706604033709, 0.000859464751556516, 0.00061195541638881, 0.00369508331641555, 0.00417776359245181, 0.00423337705433369, 0.00375423836521804, 0.0047127828001976, 0.000973803515080363, 0.000200175956706516, 0.00597433187067509, 0.000874274992384017, 0.00151716137770563, 0.00016780078294687, 0.00413778610527515, 0.00568667333573103, 0.00580297410488129, 0.0143674919381738, 0.000169962382642552, 0.000790927617345005, 0.00583649380132556, 0.00462456559762359, 0.0237399768084288, 0.00516080064699054, 0.00683549279347062, 0.00609112763777375, 0.000841890345327556, 0.00045724626397714, 0.00330111407674849, 0.0021217642351985, 0.00696863094344735, 0.000424724770709872, 0.00223836465738714, 0.000348576490068808, 0.00673535279929638, 0.00412957090884447, 0.000492546940222383, 0.000596946047153324, 0.00996513478457928, 0.0285275802016258, 0.0025524168740958, 0.00335888005793095, 0.0131030390039086, 0.0035620741546154, 0.00573090650141239, 0.0141291441395879, 0.000492475344799459, 0.000518280663527548, 0.00428498582914472, 0.00542099960148335, 0.0117393964901567, 0.00285375793464482, 0.000293801509542391, 0.00383745669387281, 0.00056386791402474, 0.00363138155080378, 0.00391413923352957, 0.000481103343190625, 0.000491202634293586, 0.00430472241714597, 0.00721423327922821, 0.000963071768637747, 0.00021016426035203, 0.00299407099373639, 0.000705650309100747, 0.00713911885395646, 0.00487636914476752, 0.0003738715313375, 0.00470215175300837, 0.00462685292586684, 0.0169602017849684, 0.000331137824105099, 0.00738432444632053, 0.000873684301041067, 0.000716842885594815, 0.00877716857939959, 0.000602487358264625, 0.0126374838873744, 0.000989374704658985, 0.00290663773193955, 0.00386871816590428, 0.000376743060769513, 0.000442231190390885, 0.00473877461627126, 0.00370066310279071, 0.000197926434339024, 0.000459991657407954, 0.00118290015961975, 0.000444062432507053, 0.000600144325289875, 0.00348750152625144, 0.00998258776962757, 0.000239347573369741, 0.00464412244036794, 0.00646406691521406, 0.0101468749344349, 0.00439310586079955, 0.00668876012787223, 0.00569085916504264, 0.0041887853294611, 0.00105761864688247, 0.0139229577034712, 0.035877700895071, 0.000576955557335168, 0.00036226722295396, 0.000376303330995142, 0.01776073127985, 0.00307136937044561, 0.00999372079968452, 0.00053059752099216, 0.00210070726461709, 0.00382133270613849, 0.0141895972192287, 0.00494370050728321, 0.000712946814019233, 0.000689461769070476, 0.000783218536525965, 0.00414149276912212, 0.00634725531563163, 0.00123843923211098, 0.00454273633658886, 0.000122941215522587, 0.0102837709710002, 0.00256403582170606, 0.000213906998396851, 0.000387665728339925, 0.00966965407133102, 0.00026049671578221, 0.000285067566437647, 0.000169046514201909, 0.000505115545820445, 0.000712590815965086, 0.00319044361822307, 0.00291992886923254, 0.000321408617310226, 0.000296063459245488, 0.00499040307477117, 0.00519203022122383, 0.000918049074243754, 0.000468932004878297, 0.00731574092060328, 0.00111932202707976, 0.00475894287228584, 0.00427091401070356, 0.00977889355272055, 0.000697876152116805, 0.00351873342879117, 0.00436316942796111, 0.0269631687551737, 0.00690999301150441, 0.000292447308311239, 0.00227856729179621, 0.000138604649691842, 0.00457730190828443, 0.00819205399602652, 0.000318219332257286, 0.000546211202163249, 0.0125623689964414, 0.0058343643322587, 0.00190576154273003, 0.00505904201418161, 0.000357649434590712, 0.000240443157963455, 0.000767380290199071, 0.00094863586127758, 0.00453566759824753, 0.00462018232792616, 0.00619538268074393, 0.000624015228822827, 0.0002231784601463, 0.000553372025024146, 0.000260475557297468, 0.00905817095190287, 0.000764323922339827, 0.000228415941819549, 0.00108567206189036, 0.0003129523829557, 0.00606489973142743, 0.000319043378112838, 0.000700383563525975, 0.0118888299912214, 0.0153218768537045, 0.000354767020326108, 0.00361935654655099, 0.00104506674688309, 0.0037869478110224, 0.00412496272474527, 0.00505624432116747, 0.000822704751044512, 0.0239056721329689, 0.00648789992555976, 0.00298458198085427, 0.000448109698481858, 0.00597020238637924, 0.000476602785056457, 0.0212549529969692, 0.000359103723894805, 0.000496353779453784, 0.00528890267014503, 0.000998665695078671, 0.000170139290275984, 0.00903419591486454, 0.000450418825494125, 0.0147290928289294, 0.000407798652304336, 0.023565785959363, 0.000491285289172083, 0.00266145123168826, 0.00735243083909154, 0.000548393465578556, 0.00113473471719772, 0.0051894667558372, 0.00420830678194761, 0.00836197473108768, 0.0151686100289226, 0.00797118619084358, 0.000540965353138745, 0.00506132375448942, 0.000354131538188085, 0.000419368676375598, 0.010208354331553, 0.00408526277169585, 0.000643713457975537, 0.00491022178903222, 0.000298407365335152, 0.00238268659450114, 0.000280290027149022, 0.000447373487986624, 0.000555582460947335, 0.000597813923377544, 0.000443725701188669, 0.00581653229892254, 0.0055332281626761, 0.000663322454784065, 0.00608203141018748, 0.00695702293887734, 0.00831547565758228, 0.022180862724781, 0.000484930700622499, 0.000682283018250018, 0.0063051120378077, 0.0120742525905371, 0.00726381922140718, 0.00579240592196584, 0.00612060027197003, 0.00794948544353247, 0.000257697451161221, 0.00461194524541497, 0.00569971604272723, 0.0047605917789042, 0.00506188673898578, 0.000846899580210447, 0.00484416913241148, 0.00588666275143623, 0.000343739957315847, 0.000272853067144752, 0.00480317929759622, 0.00413799006491899, 0.000151532018207945, 0.00341001804918051, 0.000441187381511554, 0.00391264725476503, 0.00486544333398342, 0.00166920269839466, 0.00962131284177303, 0.00114702386781573, 0.00480622332543135, 0.00455293664708734, 0.001053556217812, 0.00547744706273079, 0.00152620428707451, 0.00529181677848101, 0.00525689451023936, 0.000858979357872158, 0.00150299677625299, 0.00297489110380411, 0.00149778940249234, 0.00491194613277912, 0.000588401162531227, 0.00113682437222451, 0.000624040956608951, 0.000249828561209142, 0.00598362879827619, 0.00471858028322458, 0.00494166323915124, 0.00869097746908665, 0.00120590452570468, 0.000491349957883358, 0.0185897443443537, 0.00296257575973868, 0.00740784080699086, 0.00285256048664451, 0.00430371146649122, 0.000684918137267232, 0.00368249812163413, 0.000210093945497647, 0.000307672336930409, 0.00262877508066595, 0.00024195403966587, 0.0002146317565348, 0.00306241540238261, 0.000536188599653542, 0.0336650907993317, 0.0108097521588206, 0.00507279112935066, 0.00256123254075646, 0.00175317458342761, 0.000201171584194526, 0.00635472917929292, 0.000502778333611786, 0.000731847423594445, 0.0156270992010832, 0.0049378452822566, 0.00863035395741463, 0.000328756723320112, 0.000312959600705653, 0.000568030576687306, 0.00071769003989175, 0.0054615936242044, 0.0041291150264442, 0.00020446848066058, 0.0073714074678719, 0.000829293741844594, 0.0204237252473831, 0.00067382853012532, 0.00363373523578048, 0.00348234386183321, 0.00555673288181424, 0.00241698557510972, 0.00537924049422145, 0.000220320143853314, 0.00140350498259068, 0.00372814806178212, 0.00529124354943633, 0.00520076090469956, 0.00199107290245593, 0.00698274280875921, 0.000367841799743474, 0.000565346155781299, 0.000256664236076176, 0.00116096169222146, 0.000535296218004078, 0.00396968331187963, 0.0062982845120132, 0.00154244725126773, 0.00527365412563086, 0.0140634495764971, 0.00339223025366664, 0.000335396151058376, 0.00467382092028856, 0.00359148788265884, 0.000227514436119236, 0.0049396650865674, 0.00238549988716841, 0.00614713691174984, 0.00576193584129214, 0.00552883837372065, 0.0169833060353994, 0.00197273236699402, 0.00286345672793686, 0.00219615804962814, 0.00700895162299275, 0.00583837926387787, 0.00765183800831437, 0.000373196584405378, 0.000233716011280194, 0.00300881988368928, 0.00191990321036428, 0.00741128250956535, 0.00967601779848337, 0.000293859600787982, 0.00437478721141815, 0.000998688279651105, 0.00552993314340711, 0.000171984211192466, 0.00460479874163866, 0.000765324104577303, 0.000459411181509495, 0.00360439834184945, 0.00653313333168626, 0.000445202487753704, 0.000429809180786833, 0.000335794611601159, 0.00721954274922609, 0.00785481370985508 };
  static const int16_t buff_info_Conv2D_91_weights_inflated_284_quant_offset[] = {};
  static const uint32_t buff_info__shape_1_1_1_1[] = { 1, 1, 1, 1 };
  static const uint32_t buff_info__mem_shape_F_1_1_1_1[] = { 1, 1, 1, 1 };
#endif // LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
  static const LL_Buffer_InfoTypeDef buff_info[] = {
    {
      .name = "Input_0_out_0",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 6144,
      .offset_limit = 6208,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_64_96_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_64_96_1,
      .per_channel = 0,
      .scale = buff_info_Input_0_out_0_quant_scale,
      .offset = buff_info_Input_0_out_0_quant_offset,
    },
#if LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
    {
      .name = "Conv2D_3_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3578160,
      .offset_end = 3578448,
      .offset_limit = 3578512,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_32_1_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_32_1_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_3_weights_quant_scale,
      .offset = buff_info_Conv2D_3_weights_quant_offset,
    },
    {
      .name = "Conv2D_10_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3531040,
      .offset_end = 3533092,
      .offset_limit = 3533160,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 32,
      .mem_shape = buff_info__mem_shape_F_64_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_64_32_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_10_weights_quant_scale,
      .offset = buff_info_Conv2D_10_weights_quant_offset,
    },
    {
      .name = "Conv2D_17_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3491344,
      .offset_end = 3499552,
      .offset_limit = 3499616,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 64,
      .mem_shape = buff_info__mem_shape_F_128_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_128_64_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_17_weights_quant_scale,
      .offset = buff_info_Conv2D_17_weights_quant_offset,
    },
    {
      .name = "Conv2D_24_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3446256,
      .offset_end = 3462648,
      .offset_limit = 3462712,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_F_128_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_128_128_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_24_weights_quant_scale,
      .offset = buff_info_Conv2D_24_weights_quant_offset,
    },
    {
      .name = "Conv2D_31_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3376608,
      .offset_end = 3409392,
      .offset_limit = 3409456,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_F_256_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_256_128_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_31_weights_quant_scale,
      .offset = buff_info_Conv2D_31_weights_quant_offset,
    },
    {
      .name = "Conv2D_38_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3089856,
      .offset_end = 3155424,
      .offset_limit = 3155488,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_256_256_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_256_256_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_38_weights_quant_scale,
      .offset = buff_info_Conv2D_38_weights_quant_offset,
    },
    {
      .name = "Conv2D_45_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 2884992,
      .offset_end = 3016128,
      .offset_limit = 3016192,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_512_256_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_256_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_45_weights_quant_scale,
      .offset = buff_info_Conv2D_45_weights_quant_offset,
    },
    {
      .name = "Conv2D_52_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 1573632,
      .offset_end = 1835904,
      .offset_limit = 1835968,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_512_512_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_512_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_52_weights_quant_scale,
      .offset = buff_info_Conv2D_52_weights_quant_offset,
    },
    {
      .name = "Conv2D_59_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 1835904,
      .offset_end = 2098176,
      .offset_limit = 2098240,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_512_512_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_512_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_59_weights_quant_scale,
      .offset = buff_info_Conv2D_59_weights_quant_offset,
    },
    {
      .name = "Conv2D_66_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 2098176,
      .offset_end = 2360448,
      .offset_limit = 2360512,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_512_512_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_512_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_66_weights_quant_scale,
      .offset = buff_info_Conv2D_66_weights_quant_offset,
    },
    {
      .name = "Conv2D_73_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 2360448,
      .offset_end = 2622720,
      .offset_limit = 2622784,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_512_512_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_512_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_73_weights_quant_scale,
      .offset = buff_info_Conv2D_73_weights_quant_offset,
    },
    {
      .name = "Conv2D_80_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 2622720,
      .offset_end = 2884992,
      .offset_limit = 2885056,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_512_512_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_512_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_80_weights_quant_scale,
      .offset = buff_info_Conv2D_80_weights_quant_offset,
    },
    {
      .name = "Conv2D_87_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 1049088,
      .offset_end = 1573632,
      .offset_limit = 1573696,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_1024_512_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1024_512_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_87_weights_quant_scale,
      .offset = buff_info_Conv2D_87_weights_quant_offset,
    },
    {
      .name = "Conv2D_94_weights",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 0,
      .offset_end = 1049088,
      .offset_limit = 1049152,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_1024_1024_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1024_1024_1_1,
      .per_channel = 1,
      .scale = buff_info_Conv2D_94_weights_quant_scale,
      .offset = buff_info_Conv2D_94_weights_quant_offset,
    },
    {
      .name = "Gemm_99_weights_transposed_3",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3462656,
      .offset_end = 3472904,
      .offset_limit = 3472968,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_M_10_1024_1_1,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_10_1024_1_1,
      .per_channel = 1,
      .scale = buff_info_Gemm_99_weights_transposed_3_quant_scale,
      .offset = buff_info_Gemm_99_weights_transposed_3_quant_offset,
    },
    {
      .name = "Conv2D_3_mul_scale_11",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580496,
      .offset_end = 3580560,
      .offset_limit = 3580624,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 4,
      .mem_shape = buff_info__mem_shape_M_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_3_off_bias_14",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3579984,
      .offset_end = 3580112,
      .offset_limit = 3580176,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 4,
      .mem_shape = buff_info__mem_shape_M_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_7_zero_off_17",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580736,
      .offset_end = 3580737,
      .offset_limit = 3580808,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_7_zero_off_17_quant_scale,
      .offset = buff_info_Conv2D_7_zero_off_17_quant_offset,
    },
    {
      .name = "Conv2D_7_mul_scale_20",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580560,
      .offset_end = 3580624,
      .offset_limit = 3580688,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_7_off_bias_23",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580112,
      .offset_end = 3580240,
      .offset_limit = 3580304,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_32_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_32_1_1,
    },
    {
      .name = "Conv2D_10_zero_off_26",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580752,
      .offset_end = 3580753,
      .offset_limit = 3580824,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_10_zero_off_26_quant_scale,
      .offset = buff_info_Conv2D_10_zero_off_26_quant_offset,
    },
    {
      .name = "Conv2D_10_mul_scale_29",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580240,
      .offset_end = 3580368,
      .offset_limit = 3580432,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1,
    },
    {
      .name = "Conv2D_10_off_bias_32",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3578448,
      .offset_end = 3578704,
      .offset_limit = 3578768,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1,
    },
    {
      .name = "Conv2D_14_zero_off_35",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580720,
      .offset_end = 3580721,
      .offset_limit = 3580792,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_14_zero_off_35_quant_scale,
      .offset = buff_info_Conv2D_14_zero_off_35_quant_offset,
    },
    {
      .name = "Conv2D_14_mul_scale_38",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580368,
      .offset_end = 3580496,
      .offset_limit = 3580560,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1,
    },
    {
      .name = "Conv2D_14_off_bias_41",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3578704,
      .offset_end = 3578960,
      .offset_limit = 3579024,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_64_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_64_1_1,
    },
    {
      .name = "Conv2D_17_zero_off_44",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580816,
      .offset_end = 3580817,
      .offset_limit = 3580888,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_17_zero_off_44_quant_scale,
      .offset = buff_info_Conv2D_17_zero_off_44_quant_offset,
    },
    {
      .name = "Conv2D_17_mul_scale_47",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3578960,
      .offset_end = 3579216,
      .offset_limit = 3579280,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_128_1_1,
    },
    {
      .name = "Conv2D_17_off_bias_50",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3574064,
      .offset_end = 3574576,
      .offset_limit = 3574640,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_128_1_1,
    },
    {
      .name = "Conv2D_21_zero_off_53",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580768,
      .offset_end = 3580769,
      .offset_limit = 3580840,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_21_zero_off_53_quant_scale,
      .offset = buff_info_Conv2D_21_zero_off_53_quant_offset,
    },
    {
      .name = "Conv2D_21_mul_scale_56",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3579216,
      .offset_end = 3579472,
      .offset_limit = 3579536,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_128_1_1,
    },
    {
      .name = "Conv2D_21_off_bias_59",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3574576,
      .offset_end = 3575088,
      .offset_limit = 3575152,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_128_1_1,
    },
    {
      .name = "Conv2D_24_zero_off_62",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580784,
      .offset_end = 3580785,
      .offset_limit = 3580856,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_24_zero_off_62_quant_scale,
      .offset = buff_info_Conv2D_24_zero_off_62_quant_offset,
    },
    {
      .name = "Conv2D_24_mul_scale_65",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3579472,
      .offset_end = 3579728,
      .offset_limit = 3579792,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -12,
      .Qn = 27,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_128_1_1,
    },
    {
      .name = "Conv2D_24_off_bias_68",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3575088,
      .offset_end = 3575600,
      .offset_limit = 3575664,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_128_1_1,
    },
    {
      .name = "Conv2D_28_zero_off_71",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580800,
      .offset_end = 3580801,
      .offset_limit = 3580872,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_28_zero_off_71_quant_scale,
      .offset = buff_info_Conv2D_28_zero_off_71_quant_offset,
    },
    {
      .name = "Conv2D_28_mul_scale_74",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3579728,
      .offset_end = 3579984,
      .offset_limit = 3580048,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_128_1_1,
    },
    {
      .name = "Conv2D_28_off_bias_77",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3575600,
      .offset_end = 3576112,
      .offset_limit = 3576176,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_128_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_128_1_1,
    },
    {
      .name = "Conv2D_31_zero_off_80",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580880,
      .offset_end = 3580881,
      .offset_limit = 3580952,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_31_zero_off_80_quant_scale,
      .offset = buff_info_Conv2D_31_zero_off_80_quant_offset,
    },
    {
      .name = "Conv2D_31_mul_scale_83",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3576112,
      .offset_end = 3576624,
      .offset_limit = 3576688,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_256_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -12,
      .Qn = 27,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_256_1_1,
    },
    {
      .name = "Conv2D_31_off_bias_86",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3557680,
      .offset_end = 3558704,
      .offset_limit = 3558768,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_256_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_256_1_1,
    },
    {
      .name = "Conv2D_35_zero_off_89",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580832,
      .offset_end = 3580833,
      .offset_limit = 3580904,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_35_zero_off_89_quant_scale,
      .offset = buff_info_Conv2D_35_zero_off_89_quant_offset,
    },
    {
      .name = "Conv2D_35_mul_scale_92",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3576624,
      .offset_end = 3577136,
      .offset_limit = 3577200,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_256_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_256_1_1,
    },
    {
      .name = "Conv2D_35_off_bias_95",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3558704,
      .offset_end = 3559728,
      .offset_limit = 3559792,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_256_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_256_1_1,
    },
    {
      .name = "Conv2D_38_zero_off_98",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580848,
      .offset_end = 3580849,
      .offset_limit = 3580920,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_38_zero_off_98_quant_scale,
      .offset = buff_info_Conv2D_38_zero_off_98_quant_offset,
    },
    {
      .name = "Conv2D_38_mul_scale_101",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3577136,
      .offset_end = 3577648,
      .offset_limit = 3577712,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_256_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -12,
      .Qn = 27,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_256_1_1,
    },
    {
      .name = "Conv2D_38_off_bias_104",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3559728,
      .offset_end = 3560752,
      .offset_limit = 3560816,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_256_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_256_1_1,
    },
    {
      .name = "Conv2D_42_zero_off_107",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580864,
      .offset_end = 3580865,
      .offset_limit = 3580936,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_42_zero_off_107_quant_scale,
      .offset = buff_info_Conv2D_42_zero_off_107_quant_offset,
    },
    {
      .name = "Conv2D_42_mul_scale_110",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3577648,
      .offset_end = 3578160,
      .offset_limit = 3578224,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_256_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -12,
      .Qn = 27,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_256_1_1,
    },
    {
      .name = "Conv2D_42_off_bias_113",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3560752,
      .offset_end = 3561776,
      .offset_limit = 3561840,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_256_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_256_1_1,
    },
    {
      .name = "Conv2D_45_zero_off_116",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581072,
      .offset_end = 3581073,
      .offset_limit = 3581144,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_45_zero_off_116_quant_scale,
      .offset = buff_info_Conv2D_45_zero_off_116_quant_offset,
    },
    {
      .name = "Conv2D_45_mul_scale_119",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3561776,
      .offset_end = 3562800,
      .offset_limit = 3562864,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -13,
      .Qn = 28,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_45_off_bias_122",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3533104,
      .offset_end = 3535152,
      .offset_limit = 3535216,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_49_zero_off_125",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580896,
      .offset_end = 3580897,
      .offset_limit = 3580968,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_49_zero_off_125_quant_scale,
      .offset = buff_info_Conv2D_49_zero_off_125_quant_offset,
    },
    {
      .name = "Conv2D_49_mul_scale_128",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3562800,
      .offset_end = 3563824,
      .offset_limit = 3563888,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_49_off_bias_131",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3535152,
      .offset_end = 3537200,
      .offset_limit = 3537264,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_52_zero_off_134",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580912,
      .offset_end = 3580913,
      .offset_limit = 3580984,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_52_zero_off_134_quant_scale,
      .offset = buff_info_Conv2D_52_zero_off_134_quant_offset,
    },
    {
      .name = "Conv2D_52_mul_scale_137",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3563824,
      .offset_end = 3564848,
      .offset_limit = 3564912,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -13,
      .Qn = 28,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_52_off_bias_140",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3537200,
      .offset_end = 3539248,
      .offset_limit = 3539312,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_56_zero_off_143",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580928,
      .offset_end = 3580929,
      .offset_limit = 3581000,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_56_zero_off_143_quant_scale,
      .offset = buff_info_Conv2D_56_zero_off_143_quant_offset,
    },
    {
      .name = "Conv2D_56_mul_scale_146",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3564848,
      .offset_end = 3565872,
      .offset_limit = 3565936,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_56_off_bias_149",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3539248,
      .offset_end = 3541296,
      .offset_limit = 3541360,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_59_zero_off_152",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580944,
      .offset_end = 3580945,
      .offset_limit = 3581016,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_59_zero_off_152_quant_scale,
      .offset = buff_info_Conv2D_59_zero_off_152_quant_offset,
    },
    {
      .name = "Conv2D_59_mul_scale_155",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3565872,
      .offset_end = 3566896,
      .offset_limit = 3566960,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -13,
      .Qn = 28,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_59_off_bias_158",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3541296,
      .offset_end = 3543344,
      .offset_limit = 3543408,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_63_zero_off_161",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580960,
      .offset_end = 3580961,
      .offset_limit = 3581032,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_63_zero_off_161_quant_scale,
      .offset = buff_info_Conv2D_63_zero_off_161_quant_offset,
    },
    {
      .name = "Conv2D_63_mul_scale_164",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3566896,
      .offset_end = 3567920,
      .offset_limit = 3567984,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_63_off_bias_167",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3543344,
      .offset_end = 3545392,
      .offset_limit = 3545456,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_66_zero_off_170",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580976,
      .offset_end = 3580977,
      .offset_limit = 3581048,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_66_zero_off_170_quant_scale,
      .offset = buff_info_Conv2D_66_zero_off_170_quant_offset,
    },
    {
      .name = "Conv2D_66_mul_scale_173",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3567920,
      .offset_end = 3568944,
      .offset_limit = 3569008,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -12,
      .Qn = 27,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_66_off_bias_176",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3545392,
      .offset_end = 3547440,
      .offset_limit = 3547504,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_70_zero_off_179",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580992,
      .offset_end = 3580993,
      .offset_limit = 3581064,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_70_zero_off_179_quant_scale,
      .offset = buff_info_Conv2D_70_zero_off_179_quant_offset,
    },
    {
      .name = "Conv2D_70_mul_scale_182",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3568944,
      .offset_end = 3569968,
      .offset_limit = 3570032,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -11,
      .Qn = 26,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_70_off_bias_185",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3547440,
      .offset_end = 3549488,
      .offset_limit = 3549552,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_73_zero_off_188",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581008,
      .offset_end = 3581009,
      .offset_limit = 3581080,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_73_zero_off_188_quant_scale,
      .offset = buff_info_Conv2D_73_zero_off_188_quant_offset,
    },
    {
      .name = "Conv2D_73_mul_scale_191",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3569968,
      .offset_end = 3570992,
      .offset_limit = 3571056,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -14,
      .Qn = 29,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_73_off_bias_194",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3549488,
      .offset_end = 3551536,
      .offset_limit = 3551600,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_77_zero_off_197",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581024,
      .offset_end = 3581025,
      .offset_limit = 3581096,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_77_zero_off_197_quant_scale,
      .offset = buff_info_Conv2D_77_zero_off_197_quant_offset,
    },
    {
      .name = "Conv2D_77_mul_scale_200",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3570992,
      .offset_end = 3572016,
      .offset_limit = 3572080,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_77_off_bias_203",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3551536,
      .offset_end = 3553584,
      .offset_limit = 3553648,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_80_zero_off_206",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581040,
      .offset_end = 3581041,
      .offset_limit = 3581112,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_80_zero_off_206_quant_scale,
      .offset = buff_info_Conv2D_80_zero_off_206_quant_offset,
    },
    {
      .name = "Conv2D_80_mul_scale_209",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3572016,
      .offset_end = 3573040,
      .offset_limit = 3573104,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -14,
      .Qn = 29,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_80_off_bias_212",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3553584,
      .offset_end = 3555632,
      .offset_limit = 3555696,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_84_zero_off_215",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581056,
      .offset_end = 3581057,
      .offset_limit = 3581128,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_84_zero_off_215_quant_scale,
      .offset = buff_info_Conv2D_84_zero_off_215_quant_offset,
    },
    {
      .name = "Conv2D_84_mul_scale_218",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3573040,
      .offset_end = 3574064,
      .offset_limit = 3574128,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -9,
      .Qn = 24,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_84_off_bias_221",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3555632,
      .offset_end = 3557680,
      .offset_limit = 3557744,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_512_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_512_1_1,
    },
    {
      .name = "Conv2D_87_zero_off_224",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581120,
      .offset_end = 3581121,
      .offset_limit = 3581192,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_87_zero_off_224_quant_scale,
      .offset = buff_info_Conv2D_87_zero_off_224_quant_offset,
    },
    {
      .name = "Conv2D_87_mul_scale_227",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3508256,
      .offset_end = 3512352,
      .offset_limit = 3512416,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1024_1_2,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1024_1_2,
    },
    {
      .name = "Conv2D_87_off_bias_230",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3512352,
      .offset_end = 3516448,
      .offset_limit = 3516512,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1024_1_2,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 3,
      .Qn = 12,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1024_1_2,
    },
    {
      .name = "Conv2D_91_zero_off_233",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581088,
      .offset_end = 3581089,
      .offset_limit = 3581160,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_91_zero_off_233_quant_scale,
      .offset = buff_info_Conv2D_91_zero_off_233_quant_offset,
    },
    {
      .name = "Conv2D_91_mul_scale_236",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3516448,
      .offset_end = 3520544,
      .offset_limit = 3520608,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1024_1_2,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1024_1_2,
    },
    {
      .name = "Conv2D_91_off_bias_239",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3520544,
      .offset_end = 3524640,
      .offset_limit = 3524704,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1024_1_2,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 3,
      .Qn = 12,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1024_1_2,
    },
    {
      .name = "Conv2D_94_zero_off_242",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581104,
      .offset_end = 3581105,
      .offset_limit = 3581176,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Conv2D_94_zero_off_242_quant_scale,
      .offset = buff_info_Conv2D_94_zero_off_242_quant_offset,
    },
    {
      .name = "Conv2D_94_mul_scale_245",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3524640,
      .offset_end = 3528736,
      .offset_limit = 3528800,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1024_1_2,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = -10,
      .Qn = 25,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1024_1_2,
    },
    {
      .name = "Conv2D_94_off_bias_248",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3504160,
      .offset_end = 3508256,
      .offset_limit = 3508320,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1024_1_2,
      .mem_ndims = 4,
      .chpos = CHPos_Mixed,
      .Qm = 4,
      .Qn = 11,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1024_1_2,
    },
    {
      .name = "Gemm_99_conv_4_zero_off_251",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581136,
      .offset_end = 3581137,
      .offset_limit = 3581208,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
      .per_channel = 0,
      .scale = buff_info_Gemm_99_conv_4_zero_off_251_quant_scale,
      .offset = buff_info_Gemm_99_conv_4_zero_off_251_quant_offset,
    },
    {
      .name = "Gemm_99_conv_4_mul_scale_254",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580672,
      .offset_end = 3580692,
      .offset_limit = 3580760,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 10,
      .mem_shape = buff_info__mem_shape_F_10_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = -13,
      .Qn = 28,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_10_1_1,
    },
    {
      .name = "Gemm_99_conv_4_off_bias_257",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580624,
      .offset_end = 3580664,
      .offset_limit = 3580728,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 10,
      .mem_shape = buff_info__mem_shape_F_10_1_1,
      .mem_ndims = 3,
      .chpos = CHPos_First,
      .Qm = 11,
      .Qn = 20,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_10_1_1,
    },
    {
      .name = "Conv2D_7_weights_inflated_260",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3528736,
      .offset_end = 3531040,
      .offset_limit = 3531104,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_32_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_32_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_7_weights_inflated_260_quant_scale,
      .offset = buff_info_Conv2D_7_weights_inflated_260_quant_offset,
    },
    {
      .name = "Conv2D_14_weights_inflated_262",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3499552,
      .offset_end = 3504160,
      .offset_limit = 3504224,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_64_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_64_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_14_weights_inflated_262_quant_scale,
      .offset = buff_info_Conv2D_14_weights_inflated_262_quant_offset,
    },
    {
      .name = "Conv2D_21_weights_inflated_264",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3472912,
      .offset_end = 3482128,
      .offset_limit = 3482192,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_128_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_128_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_21_weights_inflated_264_quant_scale,
      .offset = buff_info_Conv2D_21_weights_inflated_264_quant_offset,
    },
    {
      .name = "Conv2D_28_weights_inflated_266",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3482128,
      .offset_end = 3491344,
      .offset_limit = 3491408,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_128_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_128_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_28_weights_inflated_266_quant_scale,
      .offset = buff_info_Conv2D_28_weights_inflated_266_quant_offset,
    },
    {
      .name = "Conv2D_35_weights_inflated_268",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3409392,
      .offset_end = 3427824,
      .offset_limit = 3427888,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_256_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_256_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_35_weights_inflated_268_quant_scale,
      .offset = buff_info_Conv2D_35_weights_inflated_268_quant_offset,
    },
    {
      .name = "Conv2D_42_weights_inflated_270",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3427824,
      .offset_end = 3446256,
      .offset_limit = 3446320,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_256_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_256_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_42_weights_inflated_270_quant_scale,
      .offset = buff_info_Conv2D_42_weights_inflated_270_quant_offset,
    },
    {
      .name = "Conv2D_49_weights_inflated_272",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3155424,
      .offset_end = 3192288,
      .offset_limit = 3192352,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_512_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_49_weights_inflated_272_quant_scale,
      .offset = buff_info_Conv2D_49_weights_inflated_272_quant_offset,
    },
    {
      .name = "Conv2D_56_weights_inflated_274",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3192288,
      .offset_end = 3229152,
      .offset_limit = 3229216,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_512_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_56_weights_inflated_274_quant_scale,
      .offset = buff_info_Conv2D_56_weights_inflated_274_quant_offset,
    },
    {
      .name = "Conv2D_63_weights_inflated_276",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3229152,
      .offset_end = 3266016,
      .offset_limit = 3266080,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_512_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_63_weights_inflated_276_quant_scale,
      .offset = buff_info_Conv2D_63_weights_inflated_276_quant_offset,
    },
    {
      .name = "Conv2D_70_weights_inflated_278",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3266016,
      .offset_end = 3302880,
      .offset_limit = 3302944,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_512_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_70_weights_inflated_278_quant_scale,
      .offset = buff_info_Conv2D_70_weights_inflated_278_quant_offset,
    },
    {
      .name = "Conv2D_77_weights_inflated_280",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3302880,
      .offset_end = 3339744,
      .offset_limit = 3339808,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_512_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_77_weights_inflated_280_quant_scale,
      .offset = buff_info_Conv2D_77_weights_inflated_280_quant_offset,
    },
    {
      .name = "Conv2D_84_weights_inflated_282",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3339744,
      .offset_end = 3376608,
      .offset_limit = 3376672,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_512_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_512_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_84_weights_inflated_282_quant_scale,
      .offset = buff_info_Conv2D_84_weights_inflated_282_quant_offset,
    },
    {
      .name = "Conv2D_91_weights_inflated_284",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3016128,
      .offset_end = 3089856,
      .offset_limit = 3089920,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_L_1024_8_3_3,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1024_8_3_3,
      .per_channel = 1,
      .scale = buff_info_Conv2D_91_weights_inflated_284_quant_scale,
      .offset = buff_info_Conv2D_91_weights_inflated_284_quant_offset,
    },
    {
      .name = "RequantizeLinear_inserted_id414_415_requantize_zero",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581152,
      .offset_end = 3581153,
      .offset_limit = 3581224,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_1_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_1_1_1,
    },
    {
      .name = "Gemm_99_squeeze_y_5_424_atonn_internal_scale",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3580704,
      .offset_end = 3580708,
      .offset_limit = 3580776,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
    {
      .name = "Gemm_99_squeeze_y_5_424_atonn_internal_offset",
      .addr_base = {(unsigned char *)(0x70180000UL) /* Equivalent hex address = 0x70180000UL */},
      .offset_start = 3581168,
      .offset_end = 3581169,
      .offset_limit = 3581240,
      .is_user_allocated = 0,
      .is_param = 1,
      .epoch = 0,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1,
      .mem_ndims = 1,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1,
    },
#endif // LL_ATON_DBG_BUFFER_INFO_EXCLUDED == 0
    {
      .name = NULL,
    }
  };

  return buff_info;
}

const LL_Buffer_InfoTypeDef *LL_ATON_Output_Buffers_Info_Default(void)
{
  static const uint32_t buff_info__shape_1_10[] = { 1, 1, 10, 1 };
  static const uint32_t buff_info__mem_shape_U_1_10[] = { 1, 10 };
  static const LL_Buffer_InfoTypeDef buff_info[] = {
    {
      .name = "Softmax_102_out_0",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 1040,
      .offset_end = 1080,
      .offset_limit = 1144,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 39,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1_10,
      .mem_ndims = 2,
      .chpos = CHPos_UNDEFINED,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1_10,
    },
    {
      .name = NULL,
    }
  };

  return buff_info;
}

const LL_Buffer_InfoTypeDef *LL_ATON_Internal_Buffers_Info_Default(void)
{
  static const uint32_t buff_info__shape_1_1_96_64[] = { 1, 96, 64, 1 };
  static const uint32_t buff_info__mem_shape_F_1_1_96_64[] = { 1, 1, 96, 64 };
  static const float buff_info_Transpose_2_out_0_quant_scale[] = { 0.0305305421352386 };
  static const int16_t buff_info_Transpose_2_out_0_quant_offset[] = { 33 };
  static const uint32_t buff_info__shape_1_32_48_32[] = { 1, 48, 32, 32 };
  static const uint32_t buff_info__mem_shape_L_1_32_48_32[] = { 1, 48, 32, 32 };
  static const float buff_info_Conv2D_7_zero_off_out_16_quant_scale[] = { 0.0282531250268221 };
  static const int16_t buff_info_Conv2D_7_zero_off_out_16_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_10_zero_off_out_25_quant_scale[] = { 0.0325571112334728 };
  static const int16_t buff_info_Conv2D_10_zero_off_out_25_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_64_48_32[] = { 1, 48, 32, 64 };
  static const uint32_t buff_info__mem_shape_L_1_64_48_32[] = { 1, 48, 32, 64 };
  static const float buff_info_Conv2D_14_zero_off_out_34_quant_scale[] = { 0.0299799684435129 };
  static const int16_t buff_info_Conv2D_14_zero_off_out_34_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_64_24_16[] = { 1, 24, 16, 64 };
  static const uint32_t buff_info__mem_shape_L_1_64_24_16[] = { 1, 24, 16, 64 };
  static const float buff_info_Conv2D_17_zero_off_out_43_quant_scale[] = { 0.0312461871653795 };
  static const int16_t buff_info_Conv2D_17_zero_off_out_43_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_128_24_16[] = { 1, 24, 16, 128 };
  static const uint32_t buff_info__mem_shape_L_1_128_24_16[] = { 1, 24, 16, 128 };
  static const float buff_info_Conv2D_21_zero_off_out_52_quant_scale[] = { 0.0265036504715681 };
  static const int16_t buff_info_Conv2D_21_zero_off_out_52_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_24_zero_off_out_61_quant_scale[] = { 0.0300319790840149 };
  static const int16_t buff_info_Conv2D_24_zero_off_out_61_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_28_zero_off_out_70_quant_scale[] = { 0.0245358645915985 };
  static const int16_t buff_info_Conv2D_28_zero_off_out_70_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_128_12_8[] = { 1, 12, 8, 128 };
  static const uint32_t buff_info__mem_shape_L_1_128_12_8[] = { 1, 12, 8, 128 };
  static const float buff_info_Conv2D_31_zero_off_out_79_quant_scale[] = { 0.0272250883281231 };
  static const int16_t buff_info_Conv2D_31_zero_off_out_79_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_256_12_8[] = { 1, 12, 8, 256 };
  static const uint32_t buff_info__mem_shape_L_1_256_12_8[] = { 1, 12, 8, 256 };
  static const float buff_info_Conv2D_35_zero_off_out_88_quant_scale[] = { 0.0216067973524332 };
  static const int16_t buff_info_Conv2D_35_zero_off_out_88_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_38_zero_off_out_97_quant_scale[] = { 0.0268087573349476 };
  static const int16_t buff_info_Conv2D_38_zero_off_out_97_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_42_zero_off_out_106_quant_scale[] = { 0.019644919782877 };
  static const int16_t buff_info_Conv2D_42_zero_off_out_106_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_256_6_4[] = { 1, 6, 4, 256 };
  static const uint32_t buff_info__mem_shape_L_1_256_6_4[] = { 1, 6, 4, 256 };
  static const float buff_info_Conv2D_45_zero_off_out_115_quant_scale[] = { 0.0224041733890772 };
  static const int16_t buff_info_Conv2D_45_zero_off_out_115_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_512_6_4[] = { 1, 6, 4, 512 };
  static const uint32_t buff_info__mem_shape_L_1_512_6_4[] = { 1, 6, 4, 512 };
  static const float buff_info_Conv2D_49_zero_off_out_124_quant_scale[] = { 0.0190518628805876 };
  static const int16_t buff_info_Conv2D_49_zero_off_out_124_quant_offset[] = { 0 };
  static const uint32_t buff_info__mem_shape_M_1_512_6_4[] = { 1, 64, 6, 4, 8 };
  static const float buff_info_Conv2D_49_zero_off_out_124_cp_in_9_quant_scale[] = { 0.0190518628805876 };
  static const int16_t buff_info_Conv2D_49_zero_off_out_124_cp_in_9_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_52_zero_off_out_133_quant_scale[] = { 0.0255642980337143 };
  static const int16_t buff_info_Conv2D_52_zero_off_out_133_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_56_zero_off_out_142_quant_scale[] = { 0.018563674762845 };
  static const int16_t buff_info_Conv2D_56_zero_off_out_142_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_56_zero_off_out_142_cp_in_10_quant_scale[] = { 0.018563674762845 };
  static const int16_t buff_info_Conv2D_56_zero_off_out_142_cp_in_10_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_59_zero_off_out_151_quant_scale[] = { 0.0270497351884842 };
  static const int16_t buff_info_Conv2D_59_zero_off_out_151_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_63_zero_off_out_160_quant_scale[] = { 0.0191529504954815 };
  static const int16_t buff_info_Conv2D_63_zero_off_out_160_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_63_zero_off_out_160_cp_in_11_quant_scale[] = { 0.0191529504954815 };
  static const int16_t buff_info_Conv2D_63_zero_off_out_160_cp_in_11_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_66_zero_off_out_169_quant_scale[] = { 0.0332505293190479 };
  static const int16_t buff_info_Conv2D_66_zero_off_out_169_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_70_zero_off_out_178_quant_scale[] = { 0.0240327548235655 };
  static const int16_t buff_info_Conv2D_70_zero_off_out_178_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_70_zero_off_out_178_cp_in_12_quant_scale[] = { 0.0240327548235655 };
  static const int16_t buff_info_Conv2D_70_zero_off_out_178_cp_in_12_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_73_zero_off_out_187_quant_scale[] = { 0.0345538407564163 };
  static const int16_t buff_info_Conv2D_73_zero_off_out_187_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_77_zero_off_out_196_quant_scale[] = { 0.0241539366543293 };
  static const int16_t buff_info_Conv2D_77_zero_off_out_196_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_77_zero_off_out_196_cp_in_13_quant_scale[] = { 0.0241539366543293 };
  static const int16_t buff_info_Conv2D_77_zero_off_out_196_cp_in_13_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_80_zero_off_out_205_quant_scale[] = { 0.0253454241901636 };
  static const int16_t buff_info_Conv2D_80_zero_off_out_205_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_84_zero_off_out_214_quant_scale[] = { 0.0230307467281818 };
  static const int16_t buff_info_Conv2D_84_zero_off_out_214_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_84_zero_off_out_214_cp_in_14_quant_scale[] = { 0.0230307467281818 };
  static const int16_t buff_info_Conv2D_84_zero_off_out_214_cp_in_14_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_512_3_2[] = { 1, 3, 2, 512 };
  static const uint32_t buff_info__mem_shape_L_1_512_3_2[] = { 1, 3, 2, 512 };
  static const float buff_info_Conv2D_87_zero_off_out_223_quant_scale[] = { 0.0108367586508393 };
  static const int16_t buff_info_Conv2D_87_zero_off_out_223_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_1024_3_2[] = { 1, 3, 2, 1024 };
  static const uint32_t buff_info__mem_shape_M_1_1024_3_2[] = { 1, 64, 3, 2, 16 };
  static const uint32_t buff_info__mem_shape_L_1_1024_3_2[] = { 1, 3, 2, 1024 };
  static const float buff_info_Conv2D_91_zero_off_out_232_quant_scale[] = { 0.0144055988639593 };
  static const int16_t buff_info_Conv2D_91_zero_off_out_232_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_91_zero_off_out_232_cp_in_15_quant_scale[] = { 0.0144055988639593 };
  static const int16_t buff_info_Conv2D_91_zero_off_out_232_cp_in_15_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_94_zero_off_out_241_quant_scale[] = { 0.0091076884418726 };
  static const int16_t buff_info_Conv2D_94_zero_off_out_241_quant_offset[] = { 0 };
  static const float buff_info_Conv2D_94_off_bias_out_247_quant_scale[] = { 0.0186100099235773 };
  static const int16_t buff_info_Conv2D_94_off_bias_out_247_quant_offset[] = { -128 };
  static const uint32_t buff_info__shape_1_1024_1_1[] = { 1, 1, 1, 1024 };
  static const uint32_t buff_info__mem_shape_F_1_1024_1_1[] = { 1, 1024, 1, 1 };
  static const float buff_info_Gemm_99_conv_4_zero_off_out_250_quant_scale[] = { 0.0154482675716281 };
  static const int16_t buff_info_Gemm_99_conv_4_zero_off_out_250_quant_offset[] = { 0 };
  static const uint32_t buff_info__shape_1_10_1_1[] = { 1, 1, 1, 10 };
  static const uint32_t buff_info__mem_shape_F_1_10_1_1[] = { 1, 10, 1, 1 };
  static const float buff_info_Gemm_99_conv_4_off_bias_out_256_quant_scale[] = { 0.0601168833673 };
  static const int16_t buff_info_Gemm_99_conv_4_off_bias_out_256_quant_offset[] = { 51 };
  static const uint32_t buff_info__shape_1_10[] = { 1, 1, 10, 1 };
  static const uint32_t buff_info__mem_shape_U_1_10[] = { 1, 10 };
  static const float buff_info_Gemm_99_out_0_quant_scale[] = { 0.0601168833673 };
  static const int16_t buff_info_Gemm_99_out_0_quant_offset[] = { 51 };
  static const uint32_t buff_info__shape_1_1_1_257[] = { 1, 1, 257, 1 };
  static const uint32_t buff_info__mem_shape_F_1_1_1_257[] = { 1, 1, 1, 257 };
  static const LL_Buffer_InfoTypeDef buff_info[] = {
    {
      .name = "Transpose_2_out_0",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 49152,
      .offset_end = 55296,
      .offset_limit = 55360,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 1,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_1_96_64,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_1_96_64,
      .per_channel = 0,
      .scale = buff_info_Transpose_2_out_0_quant_scale,
      .offset = buff_info_Transpose_2_out_0_quant_offset,
    },
    {
      .name = "Conv2D_7_zero_off_out_16",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 49152,
      .offset_limit = 49216,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 2,
      .batch = 32,
      .mem_shape = buff_info__mem_shape_L_1_32_48_32,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_32_48_32,
      .per_channel = 0,
      .scale = buff_info_Conv2D_7_zero_off_out_16_quant_scale,
      .offset = buff_info_Conv2D_7_zero_off_out_16_quant_offset,
    },
    {
      .name = "Conv2D_10_zero_off_out_25",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 98304,
      .offset_end = 147456,
      .offset_limit = 147520,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 3,
      .batch = 32,
      .mem_shape = buff_info__mem_shape_L_1_32_48_32,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_32_48_32,
      .per_channel = 0,
      .scale = buff_info_Conv2D_10_zero_off_out_25_quant_scale,
      .offset = buff_info_Conv2D_10_zero_off_out_25_quant_offset,
    },
    {
      .name = "Conv2D_14_zero_off_out_34",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 98304,
      .offset_limit = 98368,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 4,
      .batch = 64,
      .mem_shape = buff_info__mem_shape_L_1_64_48_32,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_64_48_32,
      .per_channel = 0,
      .scale = buff_info_Conv2D_14_zero_off_out_34_quant_scale,
      .offset = buff_info_Conv2D_14_zero_off_out_34_quant_offset,
    },
    {
      .name = "Conv2D_17_zero_off_out_43",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 98304,
      .offset_end = 122880,
      .offset_limit = 122944,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 5,
      .batch = 64,
      .mem_shape = buff_info__mem_shape_L_1_64_24_16,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_64_24_16,
      .per_channel = 0,
      .scale = buff_info_Conv2D_17_zero_off_out_43_quant_scale,
      .offset = buff_info_Conv2D_17_zero_off_out_43_quant_offset,
    },
    {
      .name = "Conv2D_21_zero_off_out_52",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 49152,
      .offset_limit = 49216,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 6,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_L_1_128_24_16,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_128_24_16,
      .per_channel = 0,
      .scale = buff_info_Conv2D_21_zero_off_out_52_quant_scale,
      .offset = buff_info_Conv2D_21_zero_off_out_52_quant_offset,
    },
    {
      .name = "Conv2D_24_zero_off_out_61",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 49152,
      .offset_end = 98304,
      .offset_limit = 98368,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 7,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_L_1_128_24_16,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_128_24_16,
      .per_channel = 0,
      .scale = buff_info_Conv2D_24_zero_off_out_61_quant_scale,
      .offset = buff_info_Conv2D_24_zero_off_out_61_quant_offset,
    },
    {
      .name = "Conv2D_28_zero_off_out_70",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 49152,
      .offset_limit = 49216,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 8,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_L_1_128_24_16,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_128_24_16,
      .per_channel = 0,
      .scale = buff_info_Conv2D_28_zero_off_out_70_quant_scale,
      .offset = buff_info_Conv2D_28_zero_off_out_70_quant_offset,
    },
    {
      .name = "Conv2D_31_zero_off_out_79",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 49152,
      .offset_end = 61440,
      .offset_limit = 61504,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 9,
      .batch = 128,
      .mem_shape = buff_info__mem_shape_L_1_128_12_8,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_128_12_8,
      .per_channel = 0,
      .scale = buff_info_Conv2D_31_zero_off_out_79_quant_scale,
      .offset = buff_info_Conv2D_31_zero_off_out_79_quant_offset,
    },
    {
      .name = "Conv2D_35_zero_off_out_88",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 24576,
      .offset_limit = 24640,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 10,
      .batch = 256,
      .mem_shape = buff_info__mem_shape_L_1_256_12_8,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_256_12_8,
      .per_channel = 0,
      .scale = buff_info_Conv2D_35_zero_off_out_88_quant_scale,
      .offset = buff_info_Conv2D_35_zero_off_out_88_quant_offset,
    },
    {
      .name = "Conv2D_38_zero_off_out_97",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 24576,
      .offset_end = 49152,
      .offset_limit = 49216,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 11,
      .batch = 256,
      .mem_shape = buff_info__mem_shape_L_1_256_12_8,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_256_12_8,
      .per_channel = 0,
      .scale = buff_info_Conv2D_38_zero_off_out_97_quant_scale,
      .offset = buff_info_Conv2D_38_zero_off_out_97_quant_offset,
    },
    {
      .name = "Conv2D_42_zero_off_out_106",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 24576,
      .offset_limit = 24640,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 12,
      .batch = 256,
      .mem_shape = buff_info__mem_shape_L_1_256_12_8,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_256_12_8,
      .per_channel = 0,
      .scale = buff_info_Conv2D_42_zero_off_out_106_quant_scale,
      .offset = buff_info_Conv2D_42_zero_off_out_106_quant_offset,
    },
    {
      .name = "Conv2D_45_zero_off_out_115",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 24576,
      .offset_end = 30720,
      .offset_limit = 30784,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 13,
      .batch = 256,
      .mem_shape = buff_info__mem_shape_L_1_256_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_256_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_45_zero_off_out_115_quant_scale,
      .offset = buff_info_Conv2D_45_zero_off_out_115_quant_offset,
    },
    {
      .name = "Conv2D_49_zero_off_out_124",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 12288,
      .offset_limit = 12352,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 14,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_49_zero_off_out_124_quant_scale,
      .offset = buff_info_Conv2D_49_zero_off_out_124_quant_offset,
    },
    {
      .name = "Conv2D_49_zero_off_out_124_cp_in_9",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 12288,
      .offset_end = 24576,
      .offset_limit = 24640,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 15,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_49_zero_off_out_124_cp_in_9_quant_scale,
      .offset = buff_info_Conv2D_49_zero_off_out_124_cp_in_9_quant_offset,
    },
    {
      .name = "Conv2D_52_zero_off_out_133",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 24576,
      .offset_end = 36864,
      .offset_limit = 36928,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 16,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_52_zero_off_out_133_quant_scale,
      .offset = buff_info_Conv2D_52_zero_off_out_133_quant_offset,
    },
    {
      .name = "Conv2D_52_out_0_cp_in_3",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 36864,
      .offset_end = 37632,
      .offset_limit = 37696,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 17,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 20,
      .Qn = -5,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
    },
    {
      .name = "Conv2D_56_zero_off_out_142",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 12288,
      .offset_limit = 12352,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 17,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_56_zero_off_out_142_quant_scale,
      .offset = buff_info_Conv2D_56_zero_off_out_142_quant_offset,
    },
    {
      .name = "Conv2D_56_zero_off_out_142_cp_in_10",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 12288,
      .offset_end = 24576,
      .offset_limit = 24640,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 18,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_56_zero_off_out_142_cp_in_10_quant_scale,
      .offset = buff_info_Conv2D_56_zero_off_out_142_cp_in_10_quant_offset,
    },
    {
      .name = "Conv2D_59_zero_off_out_151",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 24576,
      .offset_end = 36864,
      .offset_limit = 36928,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 19,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_59_zero_off_out_151_quant_scale,
      .offset = buff_info_Conv2D_59_zero_off_out_151_quant_offset,
    },
    {
      .name = "Conv2D_59_out_0_cp_in_4",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 36864,
      .offset_end = 37632,
      .offset_limit = 37696,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 20,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 21,
      .Qn = -6,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
    },
    {
      .name = "Conv2D_63_zero_off_out_160",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 12288,
      .offset_limit = 12352,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 20,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_63_zero_off_out_160_quant_scale,
      .offset = buff_info_Conv2D_63_zero_off_out_160_quant_offset,
    },
    {
      .name = "Conv2D_63_zero_off_out_160_cp_in_11",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 12288,
      .offset_end = 24576,
      .offset_limit = 24640,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 21,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_63_zero_off_out_160_cp_in_11_quant_scale,
      .offset = buff_info_Conv2D_63_zero_off_out_160_cp_in_11_quant_offset,
    },
    {
      .name = "Conv2D_66_zero_off_out_169",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 24576,
      .offset_end = 36864,
      .offset_limit = 36928,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 22,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_66_zero_off_out_169_quant_scale,
      .offset = buff_info_Conv2D_66_zero_off_out_169_quant_offset,
    },
    {
      .name = "Conv2D_66_out_0_cp_in_5",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 36864,
      .offset_end = 37632,
      .offset_limit = 37696,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 23,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 21,
      .Qn = -6,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
    },
    {
      .name = "Conv2D_70_zero_off_out_178",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 12288,
      .offset_limit = 12352,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 23,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_70_zero_off_out_178_quant_scale,
      .offset = buff_info_Conv2D_70_zero_off_out_178_quant_offset,
    },
    {
      .name = "Conv2D_70_zero_off_out_178_cp_in_12",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 12288,
      .offset_end = 24576,
      .offset_limit = 24640,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 24,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_70_zero_off_out_178_cp_in_12_quant_scale,
      .offset = buff_info_Conv2D_70_zero_off_out_178_cp_in_12_quant_offset,
    },
    {
      .name = "Conv2D_73_zero_off_out_187",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 24576,
      .offset_end = 36864,
      .offset_limit = 36928,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 25,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_73_zero_off_out_187_quant_scale,
      .offset = buff_info_Conv2D_73_zero_off_out_187_quant_offset,
    },
    {
      .name = "Conv2D_73_out_0_cp_in_6",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 36864,
      .offset_end = 37632,
      .offset_limit = 37696,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 26,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 21,
      .Qn = -6,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
    },
    {
      .name = "Conv2D_77_zero_off_out_196",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 12288,
      .offset_limit = 12352,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 26,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_77_zero_off_out_196_quant_scale,
      .offset = buff_info_Conv2D_77_zero_off_out_196_quant_offset,
    },
    {
      .name = "Conv2D_77_zero_off_out_196_cp_in_13",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 12288,
      .offset_end = 24576,
      .offset_limit = 24640,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 27,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_77_zero_off_out_196_cp_in_13_quant_scale,
      .offset = buff_info_Conv2D_77_zero_off_out_196_cp_in_13_quant_offset,
    },
    {
      .name = "Conv2D_80_zero_off_out_205",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 24576,
      .offset_end = 36864,
      .offset_limit = 36928,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 28,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_80_zero_off_out_205_quant_scale,
      .offset = buff_info_Conv2D_80_zero_off_out_205_quant_offset,
    },
    {
      .name = "Conv2D_80_out_0_cp_in_7",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 36864,
      .offset_end = 37632,
      .offset_limit = 37696,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 29,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 22,
      .Qn = -7,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
    },
    {
      .name = "Conv2D_84_zero_off_out_214",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 12288,
      .offset_limit = 12352,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 29,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_6_4,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_84_zero_off_out_214_quant_scale,
      .offset = buff_info_Conv2D_84_zero_off_out_214_quant_offset,
    },
    {
      .name = "Conv2D_84_zero_off_out_214_cp_in_14",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 12288,
      .offset_end = 24576,
      .offset_limit = 24640,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 30,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1_512_6_4,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_6_4,
      .per_channel = 0,
      .scale = buff_info_Conv2D_84_zero_off_out_214_cp_in_14_quant_scale,
      .offset = buff_info_Conv2D_84_zero_off_out_214_cp_in_14_quant_offset,
    },
    {
      .name = "Conv2D_87_zero_off_out_223",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 6144,
      .offset_end = 9216,
      .offset_limit = 9280,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 31,
      .batch = 512,
      .mem_shape = buff_info__mem_shape_L_1_512_3_2,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_512_3_2,
      .per_channel = 0,
      .scale = buff_info_Conv2D_87_zero_off_out_223_quant_scale,
      .offset = buff_info_Conv2D_87_zero_off_out_223_quant_offset,
    },
    {
      .name = "Conv2D_87_out_0",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 12288,
      .offset_end = 12480,
      .offset_limit = 12544,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 32,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1_1024_3_2,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 22,
      .Qn = -7,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1_1024_3_2,
    },
    {
      .name = "Conv2D_91_zero_off_out_232",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 6144,
      .offset_limit = 6208,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 32,
      .batch = 1024,
      .mem_shape = buff_info__mem_shape_L_1_1024_3_2,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_1024_3_2,
      .per_channel = 0,
      .scale = buff_info_Conv2D_91_zero_off_out_232_quant_scale,
      .offset = buff_info_Conv2D_91_zero_off_out_232_quant_offset,
    },
    {
      .name = "Conv2D_91_zero_off_out_232_cp_in_15",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 6144,
      .offset_end = 12288,
      .offset_limit = 12352,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 33,
      .batch = 8,
      .mem_shape = buff_info__mem_shape_M_1_1024_3_2,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_1024_3_2,
      .per_channel = 0,
      .scale = buff_info_Conv2D_91_zero_off_out_232_cp_in_15_quant_scale,
      .offset = buff_info_Conv2D_91_zero_off_out_232_cp_in_15_quant_offset,
    },
    {
      .name = "Conv2D_94_zero_off_out_241",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 12288,
      .offset_end = 18432,
      .offset_limit = 18496,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 34,
      .batch = 1024,
      .mem_shape = buff_info__mem_shape_L_1_1024_3_2,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_1024_3_2,
      .per_channel = 0,
      .scale = buff_info_Conv2D_94_zero_off_out_241_quant_scale,
      .offset = buff_info_Conv2D_94_zero_off_out_241_quant_offset,
    },
    {
      .name = "Conv2D_94_out_0",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 7168,
      .offset_end = 7360,
      .offset_limit = 7424,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 35,
      .batch = 16,
      .mem_shape = buff_info__mem_shape_M_1_1024_3_2,
      .mem_ndims = 5,
      .chpos = CHPos_Mixed,
      .Qm = 22,
      .Qn = -7,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 16,
      .ndims = 4,
      .shape = buff_info__shape_1_1024_3_2,
    },
    {
      .name = "Conv2D_94_off_bias_out_247",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 6144,
      .offset_limit = 6208,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 35,
      .batch = 1024,
      .mem_shape = buff_info__mem_shape_L_1_1024_3_2,
      .mem_ndims = 4,
      .chpos = CHPos_Last,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_1024_3_2,
      .per_channel = 0,
      .scale = buff_info_Conv2D_94_off_bias_out_247_quant_scale,
      .offset = buff_info_Conv2D_94_off_bias_out_247_quant_offset,
    },
    {
      .name = "Gemm_99_conv_4_zero_off_out_250",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 6144,
      .offset_end = 7168,
      .offset_limit = 7232,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 36,
      .batch = 1024,
      .mem_shape = buff_info__mem_shape_F_1_1024_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 8,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_UINT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_1024_1_1,
      .per_channel = 0,
      .scale = buff_info_Gemm_99_conv_4_zero_off_out_250_quant_scale,
      .offset = buff_info_Gemm_99_conv_4_zero_off_out_250_quant_offset,
    },
    {
      .name = "Gemm_99_conv_4_off_bias_out_256",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 10,
      .offset_limit = 80,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 37,
      .batch = 10,
      .mem_shape = buff_info__mem_shape_F_1_10_1_1,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_10_1_1,
      .per_channel = 0,
      .scale = buff_info_Gemm_99_conv_4_off_bias_out_256_quant_scale,
      .offset = buff_info_Gemm_99_conv_4_off_bias_out_256_quant_offset,
    },
    {
      .name = "Gemm_99_out_0",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 10,
      .offset_limit = 80,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 37,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1_10,
      .mem_ndims = 2,
      .chpos = CHPos_UNDEFINED,
      .Qm = 7,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_INT8,
      .nbits = 8,
      .ndims = 4,
      .shape = buff_info__shape_1_10,
      .per_channel = 0,
      .scale = buff_info_Gemm_99_out_0_quant_scale,
      .offset = buff_info_Gemm_99_out_0_quant_offset,
    },
    {
      .name = "Gemm_99_out_0_inserted_out416",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 1088,
      .offset_end = 1128,
      .offset_limit = 1192,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 38,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_U_1_10,
      .mem_ndims = 2,
      .chpos = CHPos_UNDEFINED,
      .Qm = 0,
      .Qn = 0,
      .Qunsigned = 1,
      .type = DataType_FLOAT,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1_10,
    },
    {
      .name = "SCRATCH_Softmax_102_PORT_OUT",
      .addr_base = {(unsigned char *)(0x34350000UL) /* Equivalent hex address = 0x34350000UL */},
      .offset_start = 0,
      .offset_end = 1028,
      .offset_limit = 1096,
      .is_user_allocated = 0,
      .is_param = 0,
      .epoch = 39,
      .batch = 1,
      .mem_shape = buff_info__mem_shape_F_1_1_1_257,
      .mem_ndims = 4,
      .chpos = CHPos_First,
      .Qm = 31,
      .Qn = 0,
      .Qunsigned = 0,
      .type = DataType_FXP,
      .nbits = 32,
      .ndims = 4,
      .shape = buff_info__shape_1_1_1_257,
    },
    {
      .name = NULL,
    }
  };

  return buff_info;
}

